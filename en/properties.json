{
  "Common/WSDL/HTTPHeaders": {
    "CustomHeadersConfigurator": {
      "CustomHeaders": "HTTP Headers Collection"
    },
    "HTTPHeaderItem": {
      "HeaderValue": "Value",
      "Name": "Name"
    }
  },
  "Common/WSDL/WSDLClientAuth": {
    "WSDLAuthorization": {
      "Mode": "Authorization Type",
      "NamePassCredentials": "Username and Password Authorization Credentials",
      "OAuthCredentials": "OAuth Token Authorization Credentials"
    },
    "WSDLNamePassAuthCredentials": {
      "Password": "Password",
      "UserName": "Username"
    },
    "WSDLOAuthCredentials": {
      "Token": "OAuth Token"
    }
  },
  "Common/WSDL/WSDLRequestDebug": {
    "WSDLRequestDebug": {
      "DumpRequest": "Save Request Text to Disk",
      "DumpRequestFolder": "Folder to save requests",
      "ResponseStub": "File applied as response",
      "UseResponseStub": "Simulate request with response in a file"
    }
  },
  "components/assnrules": {
    "AssnRulesEngine": {
      "Params": "Algorithm parameters"
    },
    "AssnRulesParams": {
      "ExcludeLargeSupportItems": "Exclude the items with the support exceeding the maximum one",
      "ExcludeSingleItems": "Exclude single sets",
      "MaxSupport": "Maximum support, %",
      "MinConfidence": "Minimum rule confidence, %",
      "MinLift": "Minimum rule lift",
      "MinSupport": "Minimum support, %",
      "NConsequentMax": "Maximum number of consequences",
      "NItemsMax": "Maximum item count",
      "SelectColumn": "Containing selected items"
    }
  },
  "components/autocorrelation": {
    "AutoCorrelationEngine": {
      "CalcPacf": "Calculate PACF",
      "DomainCalc": "ACF calculation domain",
      "LagCount": "Lag count"
    }
  },
  "components/binning": {
    "BinningBinsDefExtension": {
      "KindForBins": "Usage type of bin column"
    },
    "BinningContinuousBinItem": {
      "LowerBound": "Lower range bound",
      "UpperBound": "Upper range bound"
    },
    "BinningCountLinContMethodSettings": {
      "BinsCount": "Count"
    },
    "BinningDefExtension": {
      "AlwaysDefaultSettings": "Always use default method settings",
      "BinsType": "Bins type",
      "LabelTemplate": "Caption template",
      "MethodType": "Binning method type"
    },
    "BinningLinearContinuousMethodSettings": {
      "LowerLimit": "Lower bound",
      "UpperLimit": "Upper bound"
    },
    "BinningSDMethodSettings": {
      "SDMode": "From average"
    },
    "BinningTileDateTimeMethodSettings": {
      "MatchingObservationsMode": "Matching observations",
      "TileCount": "Count"
    },
    "BinningTileNumericMethodSettings": {
      "SumValues": "From sums of values"
    },
    "BinningWidthLinDateTimeMethodSettings": {
      "DateTimeSpanCount": "Width",
      "DateTimeSpanType": "Bin type"
    },
    "BinningWidthLinNumMethodSettings": {
      "BinWidth": "Width"
    }
  },
  "components/calcdata": {
    "CalcExprColumnItem": {
      "Cached": "Cache values"
    },
    "ExprColumnItem": {
      "DataType": "Data type",
      "Description": "Description",
      "DisplayName": "Caption",
      "Expression": "Expression",
      "Intermediate": "Intermediate expression"
    }
  },
  "components/clope": {
    "ClopeEngine": {
      "Params": "Algorithm parameters"
    },
    "ClopeParams": {
      "LimitNClusters": "Limit the number of clusters",
      "LimitNIters": "Limit the number of iterations",
      "NClustersMax": "Maximum number of clusters",
      "NItersMax": "Number of iterations",
      "Repulsion": "Repulsion coefficient"
    }
  },
  "components/clusterization": {
    "ClusterizationEngine": {
      "Params": "Algorithm parameters"
    },
    "ClusterizationParams": {
      "NClusters": "Number of clusters",
      "NClustersAutoSelect": "Auto selection of clusters",
      "NClustersMax": "Maximum number of clusters",
      "NClustersMin": "Minimum number of clusters",
      "StatTestThreshold": "Cluster separation threshold"
    }
  },
  "components/coarseclasses": {
    "CoarseClassesInputContinuousParams": {
      "FineIntervalsCount": "Interval count",
      "IncludeHighBounds": "Include upper interval bounds",
      "UsePrequanting": "Prequanting"
    },
    "CoarseClassesInputDiscreteParams": {
      "UseFineClassesBinning": "Fine classes as binning"
    },
    "CoarseClassesInputExternalParams": {
      "BinningId": "External binning identifier"
    },
    "CoarseClassesInputParams": {
      "MaxClassCount": "Maximum class count",
      "MinClassPercentage": "Minimum class percentage, %",
      "UniformityCoef": "Uniformity"
    },
    "CoarseClassesTargetParams": {
      "TuneEventValue": "Custom \"event\" value"
    }
  },
  "components/columnflipping": {
    "ColumnFlippingEngine": {
      "SkipNullCases": "Skip null values"
    }
  },
  "components/coluniondata": {
    "ColUnionDataEngine": {
      "RowsPaddingType": "Supplement to the largest set",
      "TailsAlignType": "Row count complies"
    }
  },
  "components/condition": {
    "ConditionItem": {
      "CaseSensitive": "Case sensitive"
    }
  },
  "components/em": {
    "EMEngine": {
      "Params": "Algorithm parameters"
    },
    "EMParams": {
      "IndependentVariables": "Independent attributes",
      "MedianModification": "Median modification"
    }
  },
  "components/extractxml": {
    "ExtractXMLEngine": {
      "ImportXMLSettings": "Configure XML import"
    }
  },
  "components/factoranalysis": {
    "FactorAnalysisEngine": {
      "NFactors": "Number of factors",
      "NOutFactorsMax": "Number of factors",
      "RotationType": "Rotation type",
      "SignificanceCriterion": "Significance criterion"
    }
  },
  "components/filterdata": {
    "FilterColumnItem": {
      "CaseSensitive": "Учитывать регистр",
      "CompareValue": "Compare values",
      "CompareValueList": "List of values",
      "DataType": "Data type",
      "Name": "Name",
      "RelationType": "Relation type"
    }
  },
  "components/filtration": {
    "DataRecoveryEngine": {
      "OrderedSample": "Source data ordered"
    },
    "ElimOutlierColumnDefExtension": {
      "ActionExtr": "Extreme processing method",
      "ActionOut": "Outliers eimination method",
      "DetectEKvartil": "For extreme",
      "DetectESko": "For extreme",
      "DetectOKvartil": "For outlier",
      "DetectOSko": "For outlier",
      "ModeOE": "Detection method",
      "SettedValueExtr": "Replace with",
      "SettedValueOut": "Replace with"
    },
    "ElimOutlierEngine": {
      "OrderedSample": "Source data ordered"
    }
  },
  "components/forecast": {
    "ARIMAXParams": {
      "AutoStructure": "Auto detect structure",
      "CalcConfidenceInterval": "Calculate confidence interval",
      "CalcResiduals": "Calculate the approximation error",
      "ConfidenceInterval": "Confidence forecast interval in %",
      "D": "Integration order",
      "DS": "Seasonal integration order",
      "ForecastHorizon": "Forecast horizon",
      "IncludeIntercept": "Include intercept into the model",
      "P": "AR part order",
      "PS": "Seasonal AR part order",
      "Q": "MA part order",
      "QS": "Seasonal MA part order",
      "SeasonalPeriod": "Period of the seasonal component"
    },
    "ForecastEngine": {
      "ARIMAXParams": "ARIMAX Settings"
    }
  },
  "components/linregression": {
    "LinRegressionParams": {
      "LinRegressionMethod": "Factor selection and protection against retraining"
    }
  },
  "components/logregression": {
    "LogRegressionParams": {
      "LogRegressionMethod": "Factor selection and protection against retraining"
    }
  },
  "components/loop": {
    "LoopComponent": {
      "GroupSize": "Group row count",
      "IterationCount": "Iteration count",
      "LoopKind": "Loop Type",
      "LoopVariableLink": "Loop variable",
      "MaxThreadCount": "Maximum thread count",
      "ParallelProcessing": "Parallel processing"
    }
  },
  "components/neuralnet": {
    "NeuralNetEngine": {
      "NetworkParams": "Neural network parameters"
    },
    "NeuralNetworkParams": {
      "TrainingParams": "Training algorithm parameters"
    }
  },
  "components/partition": {
    "PartitionEngine": {
      "Partition": "Partition into Sets"
    }
  },
  "components/reformcolumns": {
    "ReformColumnsEngine": {
      "CachingMethod": "Caching"
    }
  },
  "components/restclient": {
    "RESTClient": {
      "RequestConfigurator": "Configure request data export"
    }
  },
  "components/sampling": {
    "SamplingEngine": {
      "Sampling": "Sampling"
    }
  },
  "components/smoothing": {
    "SmoothingDefExtension": {
      "Algorithm": "Smoothing algorithm",
      "Lambda": "Lambda parameter",
      "Period": "Smoothing period",
      "WaveletOrder": "Wavelet order"
    }
  },
  "components/sonn": {
    "SONNEngine": {
      "Params": "Algorithm parameters"
    }
  },
  "components/sorting": {
    "SortingColumnItem": {
      "SortDirection": "Sort order."
    }
  },
  "components/ungroupdata": {
    "UngroupDataEngine": {
      "SeasonalityPeriod": "Seasonality period",
      "UngroupMethod": "Ungrouping method"
    }
  },
  "exports/textfile": {
    "ExportTextFile": {
      "CodePage": "Codepage"
    }
  },
  "imports/excelfile": {
    "ImportExcelFileEngine": {
      "AllRows": "All rows",
      "BlankRowAction": "Blank rows",
      "ExplicitRange": "Range",
      "ReferenceStyle": "Reference style",
      "TableName": "Object name",
      "TableNamingMethod": "Object selection",
      "TitleRowCount": "Title row count",
      "UsedRange": "Whole sheet"
    }
  },
  "imports/textfile": {
    "ImportTextFile": {
      "CodePage": "Codepage",
      "DateFormat": "Date format",
      "DateSeparator": "Date separator",
      "DecimalSeparator": "Decimal separator",
      "DelimiterChar": "Column separator",
      "FirstLineAsTitle": "First line title",
      "MultipleDelimiters": "Accept multiple separators in succession for one",
      "RowsToSkip": "Skip rows",
      "TextQualifier": "Line terminator",
      "TimeSeparator": "Time separator",
      "ValueFalse": "False",
      "ValueNull": "Null",
      "ValueTrue": "True"
    }
  },
  "imports/xml": {
    "ImportXML": {
      "Configurator": "Configure XML import"
    }
  },
  "Libraries/bgdbrtl/DB": {
    "DatabaseConfigurator": {
      "DatabasePath": "Connection string",
      "Direct": "Do not use DBMS client",
      "ObjectQuotes": "Configure quotes",
      "Password": "Password",
      "SavePassword": "Save password",
      "SystemTables": "Show system tables",
      "UserName": "Username"
    }
  },
  "Libraries/bgdbrtl/SQLiteUniDACDB": {
    "SQLiteFunctionDefs": {
      "CaseChangeUnicode": "lower, upper for UNICODE",
      "LikeMode": "LIKE operation mode"
    }
  },
  "Libraries/bgrtl/DataSet": {
    "ColumnDef": {
      "DefaultUsageType": "Default usage type",
      "UsageType": "Column usage type"
    }
  },
  "Libraries/DataPartition/LearnPartition": {
    "LearnPartition": {
      "LearnPartitionMethod": "Partition method",
      "ValidationColumnIndex": "Given partition field"
    }
  },
  "Libraries/Model/DeductorServerSettings": {
    "SocketDeductorServerSettings": {
      "Bind": "Address binding"
    }
  },
  "Libraries/Normalization/NormalDataSourceModelComponentEngine": {
    "NormalDataSourceModelComponentEngine": {
      "LearnPartition": "Component data partition with training"
    }
  },
  "Libraries/Regression/Regression": {
    "RegressionStatisticsParams": {
      "PredictionIntervalNeeded": "Calculate confidence interval"
    }
  }
}