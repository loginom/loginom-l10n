{
  "Common/CertList/CertList": {
    "CertificateStore": {
      "DisplayName": "Display Name",
      "Name": "System Name",
      "StoreCollection": "Storage Collection"
    },
    "HTTPClientCertificateList": {
      "Selected": "Selected Certificate Index",
      "Store": "Certificate store"
    }
  },
  "Common/CodeExec/CodeModelComponentEngine": {
    "CodeModelComponentEngine": {
      "Code": "Executable Code",
      "OutputColumnDefs": "Description of Output Set Columns",
      "Variables": "Input Variables"
    }
  },
  "Common/WSDL/HTTPHeaders": {
    "CustomHeadersConfigurator": {
      "CustomHeaders": "HTTP Headers Collection"
    },
    "HTTPHeaderItem": {
      "HeaderValue": "Value",
      "Name": "Name"
    }
  },
  "Common/WSDL/WSDL": {
    "WSDL": {
      "ServicesCount": "Count of the WSDL Description Defined Services"
    },
    "WSDLBinding": {
      "Extension": "Extension",
      "OperationsCount": "Operations Count"
    },
    "WSDLElement": {
      "Documentation": "Documentation",
      "Name": "Name"
    },
    "WSDLExtension": {
      "ExtensionType": "Extension Type"
    },
    "WSDLHttpBindingExtension": {
      "Verb": "HTTP Request Method"
    },
    "WSDLHttpOperationExtension": {
      "Location": "Local Part of the Operation Call Address"
    },
    "WSDLHttpPortExtension": {
      "AddressLocation": "Request Address"
    },
    "WSDLMessage": {
      "Extension": "Extension"
    },
    "WSDLMimeContent": {
      "Part": "Message Part"
    },
    "WSDLMimeContentExtensionElement": {
      "Content": "Mime: content or mime: mimeXml element"
    },
    "WSDLMimeExtensionElement": {
      "ExtElementType": "Extension Element Type"
    },
    "WSDLMimeMessageExtension": {
      "ExtElementCount": "Index Extension Element"
    },
    "WSDLOperation": {
      "Extension": "Extension",
      "FaultsCount": "Described Exceptions Count",
      "Input": "Incoming Service Message",
      "Output": "Outgoing Service Message",
      "Primitive": "Exchange Primitive",
      "Signature": "Operation Signature"
    },
    "WSDLPart": {
      "Name": "Part Name"
    },
    "WSDLPort": {
      "Binding": "Used Binding",
      "Extension": "Extension"
    },
    "WSDLService": {
      "PortsCount": "Count of Service-Defined Endpoints (Ports)"
    },
    "WSDLSoapBindingExtension": {
      "Style": "SOAP Style",
      "Transport": "Transport Protocol",
      "Version": "SOAP Version"
    },
    "WSDLSoapOperationExtension": {
      "Action": "SOAP Action",
      "Style": "SOAP Style",
      "Version": "SOAP Version"
    },
    "WSDLSoapPortExtension": {
      "AddressLocation": "Request Address"
    }
  },
  "Common/WSDL/WSDLClientAuth": {
    "WSDLAuthorization": {
      "CertCredentials": "User Certificate Authorization Credentials",
      "Mode": "Authorization Type",
      "NamePassCredentials": "Username and Password Authorization Credentials",
      "OAuthCredentials": "OAuth Token Authorization Credentials"
    },
    "WSDLCertAuthCredentials": {
      "Certificates": "Certificate List"
    },
    "WSDLNamePassAuthCredentials": {
      "Password": "Password",
      "UserName": "Username"
    },
    "WSDLOAuthCredentials": {
      "Token": "OAuth Token"
    }
  },
  "Common/WSDL/WSDLRequestDebug": {
    "WSDLRequestDebug": {
      "DumpRequest": "Save Request Text to Disk",
      "DumpRequestFolder": "Folder to save requests",
      "ResponseStub": "File applied as response",
      "RootFileStorage": "Root file storage"
    }
  },
  "Common/XML/XMLSchemaToDataSourceMapping": {
    "XMLSchemaToColumnMapping": {
      "Column": "Data set column",
      "Node": "Tree node"
    }
  },
  "Common/XML/XMLSchemaTree": {
    "XMLSchemaTree": {
      "NamespacesCount": "Count of namespaces used",
      "RootNodesCount": "Root elements count",
      "SelectedRoot": "Selected root node"
    },
    "XMLSchemaTreeNode": {
      "Comment": "Comment",
      "DefaultValue": "Default value",
      "DisplayName": "Local node name",
      "FixedValue": "Fixed value",
      "NamespaceURI": "URI namespace",
      "NodeType": "Node type",
      "ParentNode": "Parent node",
      "Selectable": "Selectable",
      "Selected": "Selected by user to import",
      "SubNodes": "Subnodes",
      "SubstitutionHead": "SubstitutionGroup replaced element",
      "ValueRequired": "Value required",
      "ValueType": "Value type"
    },
    "XMLSchemaTreeNodes": {
      "Count": "Nodes count"
    }
  },
  "components/assnrules": {
    "AssnRulesDefExtension": {
      "Selected": "Column selection flag"
    },
    "AssnRulesEngine": {
      "Params": "Algorithm parameters"
    },
    "AssnRulesParams": {
      "ExcludeLargeSupportItems": "Exclude the items with the support exceeding the maximum one",
      "ExcludeSingleItems": "Exclude single sets",
      "MaxSupport": "Maximum support, %",
      "MinSupport": "Minimum support, %"
    }
  },
  "components/binning": {
    "BinningEngine": {
      "BinningPreview": "Helper class for visual alignment of quantization methods"
    },
    "BinningExtermalBinsMethodSettings": {
      "ExternalBinsID": "Identifier"
    },
    "BinningLinearBins": {
      "LowerLimitOpen": "Lower range bound open",
      "UpperLimitOpen": "Upper range bound open"
    },
    "BinningLinearContinuousMethodSettings": {
      "LowerLimit": "Lower bound",
      "UpperLimit": "Upper bound"
    },
    "BinningTileDateTimeMethodSettings": {
      "TileCount": "Count"
    },
    "BinningWidthLinDateTimeMethodSettings": {
      "DateTimeSpanCount": "Width"
    },
    "BinningWidthLinNumMethodSettings": {
      "BinWidth": "Width"
    }
  },
  "components/calcdata": {
    "CalcData": {
      "CalcMode": "Mode",
      "ExprColumns": "Expressions"
    },
    "CalcExprColumnItem": {
      "Cached": "Cache values"
    },
    "ExprColumnItem": {
      "DataType": "Data type",
      "Description": "Description",
      "DisplayName": "Caption",
      "Expression": "Expression",
      "Index": "Index",
      "Intermediate": "Intermediate expression",
      "Name": "Name"
    }
  },
  "components/clope": {
    "ClopeEngine": {
      "Params": "Algorithm parameters"
    },
    "ClopeParams": {
      "LimitNClusters": "Limit the number of clusters",
      "LimitNIters": "Limit the number of iterations",
      "NClustersMax": "Maximum number of clusters",
      "NItersMax": "Number of iterations",
      "Repulsion": "Repulsion coefficient"
    }
  },
  "components/clusterization": {
    "ClusterizationEngine": {
      "Params": "Algorithm parameters"
    },
    "ClusterizationParams": {
      "NClusters": "Number of clusters",
      "NClustersMax": "Maximum number of clusters",
      "NClustersMin": "Minimum number of clusters"
    }
  },
  "components/coarseclasses": {
    "CoarseClass": {
      "HighBorder": "Upper bound",
      "HighFineIndex": "Upper bound",
      "LowBorder": "Lower bound",
      "LowFineIndex": "Lower bound",
      "Mark": "Class caption",
      "Weight": "Class weight"
    },
    "CoarseClassesBuilder": {
      "ColumnPurpose": "Field usage type",
      "IsEdited": "Binning edited",
      "IsLocked": "Binning locked"
    },
    "CoarseClassesInputContinuousParams": {
      "FineIntervalsCount": "Interval count"
    },
    "CoarseClassesInputDiscreteParams": {
      "UseFineClassesBinning": "Fine classes as binning"
    },
    "CoarseClassesInputExternalParams": {
      "BinningId": "External binning identifier"
    },
    "CoarseClassesManager": {
      "HasExcludeBinningDataSource": "Supplementary input of the external binning provided"
    },
    "CoarseClassesViewer": {
      "IsLocked": "Binning locked"
    },
    "FineClass": {
      "IV": "Information class index",
      "WoE": "Weight of class evidence"
    }
  },
  "components/columnflipping": {
    "ColumnFlippingColumnDefExtension": {
      "Order": "Order number"
    }
  },
  "components/condition": {
    "ConditionItem": {
      "CaseSensitive": "Case sensitive"
    }
  },
  "components/em": {
    "EMEngine": {
      "Params": "Algorithm parameters"
    },
    "EMParams": {
      "IndependentVariables": "Independent attributes",
      "MedianModification": "Median modification"
    }
  },
  "components/filterdata": {
    "FilterColumnItem": {
      "CaseSensitive": "Учитывать регистр"
    }
  },
  "components/filtration": {
    "ElimOutlierColumnDefExtension": {
      "ActionOut": "Outliers eimination method"
    }
  },
  "components/forecast": {
    "ARIMAXParams": {
      "CalcConfidenceInterval": "Calculate confidence interval",
      "ConfidenceInterval": "Confidence forecast interval in %"
    }
  },
  "components/groupdata": {
    "GroupDataColumnDefExtension": {
      "Order": "Order number"
    }
  },
  "components/linregression": {
    "LinRegressionParams": {
      "LinRegressionMethod": "Factor selection and protection against retraining"
    }
  },
  "components/logregression": {
    "LogRegressionParams": {
      "LogRegressionMethod": "Factor selection and protection against retraining"
    }
  },
  "components/loop": {
    "LoopComponent": {
      "LoopKind": "Loop Type"
    }
  },
  "components/neuralnet": {
    "NeuralNetworkParams": {
      "TrainingParams": "Training algorithm parameters"
    }
  },
  "components/partition": {
    "PartitionEngine": {
      "Partition": "Partition into Sets"
    }
  },
  "components/replace": {
    "ReplaceTable": {
      "IsEmpty": "Empty substitution table"
    }
  },
  "components/sonn": {
    "SONNEngine": {
      "Params": "Algorithm parameters"
    }
  },
  "components/ungroupdata": {
    "UngroupDataEngine": {
      "Links": "Links",
      "SeasonalityPeriod": "Seasonality period",
      "UngroupMethod": "Ungrouping method"
    }
  },
  "exports/textfile": {
    "ExportTextFile": {
      "CodePage": "Codepage"
    }
  },
  "imports/1cv8": {
    "1Cv8QueryImport": {
      "Connection": "Connection",
      "QueryText": "Request text"
    }
  },
  "imports/database": {
    "DBImport": {
      "CommandText": "Data request string.",
      "CommandType": "Type of data request string."
    }
  },
  "imports/excelfile": {
    "ImportExcelFileEngine": {
      "AllRows": "All rows",
      "BlankRowAction": "Blank rows",
      "ExplicitRange": "Range",
      "ImportExcelFilePreview": "Property to view Excel file contents",
      "ReferenceStyle": "Reference style",
      "TableName": "Object name",
      "TableNamingMethod": "Object selection",
      "TitleRowCount": "Title row count",
      "UsedRange": "Whole sheet"
    }
  },
  "imports/native": {
    "ImportNative": {
      "ColumnInfos": "DDF file columns info"
    }
  },
  "imports/textfile": {
    "ImportTextFile": {
      "CodePage": "Codepage",
      "DateFormat": "Date format",
      "DateSeparator": "Date separator",
      "DecimalSeparator": "Decimal separator",
      "DelimiterChar": "Column separator",
      "FirstLineAsTitle": "First line title",
      "FormatType": "Data format",
      "MultipleDelimiters": "Accept multiple separators in succession for one",
      "RowsToSkip": "Skip rows",
      "TextQualifier": "Line terminator",
      "TimeSeparator": "Time separator",
      "ValueFalse": "False",
      "ValueNull": "Null",
      "ValueTrue": "True"
    }
  },
  "imports/xml": {
    "ImportXML": {
      "Configurator": "Configure XML import"
    }
  },
  "Libraries/bgdbrtl/DB": {
    "Database": {
      "DatabasePath": "Connection string",
      "ObjectLeftQuote": "Left quote",
      "ObjectRightQuote": "Right quote",
      "ServerType": "Type of database server"
    },
    "DatabaseConfigurator": {
      "ConfigurableOptions": "Configurable options",
      "DatabasePath": "Connection string",
      "Direct": "Do not use DBMS client",
      "ObjectQuotes": "Configure quotes",
      "Password": "Password",
      "SavePassword": "Save password",
      "SystemTables": "Show system tables",
      "UserName": "Username"
    }
  },
  "Libraries/bgdbrtl/SQLiteUniDACDB": {
    "SQLiteFunctionDefs": {
      "CaseChangeUnicode": "lower, upper for UNICODE",
      "LikeMode": "LIKE operation mode"
    }
  },
  "Libraries/bgrtl/DataSet": {
    "ColumnDef": {
      "DefaultUsageType": "Default usage type",
      "UsageType": "Column usage type"
    },
    "ColumnDefs": {
      "Vendor": "Link to Vendor field descriptions"
    },
    "ColumnInfo": {
      "DefaultUsageType": "Default column usage type",
      "UsageType": "Column usage type"
    },
    "ColumnInfos": {
      "Vendor": "Link to Vendor field descriptions"
    },
    "TuneColumnDefs": {
      "Vendor": "Link to Vendor custom field descriptions"
    }
  },
  "Libraries/bgrtl/DerivedDataSet": {
    "DeriveProxyColumnDef": {
      "DefaultUsageType": "Default column usage type",
      "UsageType": "Column usage type"
    },
    "ProxyColumnDef": {
      "DefaultUsageType": "Default column usage type",
      "UsageType": "Column usage type"
    }
  },
  "Libraries/bgrtl/Interfaces": {
    "ClassVendorObject": {
      "Vendor": "Link to ClassVendor used for object creation"
    },
    "CustomItemDef": {
      "Index": "Element index listed"
    },
    "DescriptionDef": {
      "Description": "Description"
    },
    "DescriptionInfo": {
      "Description": "Description"
    },
    "List": {
      "Count": "Element count listed"
    },
    "ListItem": {
      "Index": "Element index listed"
    }
  },
  "Libraries/bgrtl/Statistics": {
    "Statistics": {
      "Count": "Element count listed"
    }
  },
  "Libraries/bgrtl/Variables": {
    "TuneVariableItems": {
      "Vendor": "Link to vendor"
    },
    "VariableInfos": {
      "Vendor": "Link to Vendor variable descriptions"
    },
    "VariableItems": {
      "Vendor": "Link to Vendor variables"
    }
  },
  "Libraries/DataPartition/LearnPartition": {
    "LearnPartition": {
      "LearnPartitionMethod": "Partition method",
      "ValidationColumnIndex": "Given partition field"
    },
    "LearnPartitionContainer": {
      "LearnPartition": "The component data set binning interface with training"
    }
  },
  "Libraries/Normalization/NormalDataSourceModelComponentEngine": {
    "NormalDataSourceModelComponentEngine": {
      "LearnPartition": "Component data partition with training",
      "SetupLearnPartition": "Configure user data partition"
    }
  },
  "Libraries/Normalization/TuneNormColumnDefs": {
    "TuneNormColumnDefs": {
      "Vendor": "Link to Vendor custom field descriptions"
    }
  },
  "Libraries/Regression/Regression": {
    "RegressionClassificationParams": {
      "Threshold": "Cuttoff"
    },
    "RegressionStatisticsParams": {
      "PredictionIntervalNeeded": "Calculate confidence interval"
    }
  },
  "Viewers/Cube/CubeSummaries": {
    "CubeFunction": {
      "OrderNumber": "Order number"
    }
  },
  "Viewers/ROC/ROCView": {
    "ROCView": {
      "CutoffPoint": "Cuttoff",
      "NBins": "Number of bins",
      "UserCutoff": "User cuttoff"
    }
  },
  "Viewers/Statistics/StatView": {
    "StatViewColumnConfig": {
      "Width": "Width"
    }
  },
  "Warehouse2/Deductor/DW": {
    "DWObject": {
      "DWObjectType": "Type of Data Warehouse object"
    }
  }
}