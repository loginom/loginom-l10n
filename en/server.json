{
  "Common/1Cv8/1Cv8Query": {
    "ErrEofArrived": "Data set end reached",
    "ErrQueryNotActive": "Request is not active"
  },
  "Common/1Cv8/1Cv8SessionManager": {
    "ErrEmptyConnectionString": "Empty connection string"
  },
  "Common/CalcFunctions/CalcFunctions": {
    "ErrCreateGuid": "System error creating GUID",
    "ErrGuidFormat": "Incorrect GUID format: %s ([\"N\", \"D\", \"B\", \"P\"] supported)"
  },
  "Common/CalcFunctions/FuncDesc": {
    "ErrFuncDescNotFound": "Description of \"%s\" function not found"
  },
  "Common/CalcFunctions/FunctionCollection": {
    "ErrDuplicateFunction": "%s named function has already been registered",
    "ErrEvenArgs": "%s function can accept only even number of arguments",
    "ErrInvalidFunctionName": "Invalid %s function name",
    "ErrNoFunc": "No reference to function",
    "ErrOddArgs": "%s function can accept only odd number of arguments",
    "ErrTooFewArgs": "Too few arguments transferred to %s function (%d whereas %d is minimum value)",
    "ErrTooManyArgs": "Many arguments were called to %s function (%d whereas %d is maximum value)"
  },
  "Common/CertList/CertList": {
    "ErrCertListImplementationNotRegistered": "Certificate list implementation with %s identifier not registered",
    "ErrCertListImplementationsNotRegistered": "Certificate list implementation not registered"
  },
  "Common/CertList/CertList_Win": {
    "AddressBook": "Other users",
    "AuthRoot": "Third-Party Root Certification Authorities",
    "CA": "Intermediate Certification Authorities",
    "Disallowed": "Untrusted Certificates",
    "My": "Personal",
    "Root": "Trusted Root Certification Authorities",
    "SmartCardRoot": "Smart Card Trusted Roots",
    "Trust": "Enterprise Trust",
    "TrustedDevices": "Trusted Devices",
    "TrustedPeople": "Trusted People",
    "TrustedPublisher": "Trusted Publishers",
    "UserDS": "Active Directory user object"
  },
  "Common/CodeExec/CodeAPI": {
    "ArgColumn": "Column Index or name",
    "ArgRow": "Row index",
    "ArgValue": "Value",
    "ColumnCount": "Column count",
    "ColumnGet": "Get column cell value",
    "ColumnIsNull": "Check if the value is set in the column cell",
    "Columns": "Columns",
    "Count": "Count",
    "DataKind": "Sort of data",
    "DataType": "Data type",
    "DefaultUsageType": "Default usage type",
    "DisplayName": "Caption",
    "Index": "Index",
    "InputTable": "Input data source",
    "InputTables": "Array of input data sources",
    "InputVariables": "Input variables",
    "Items": "Items",
    "Name": "Name",
    "OutputTable": "Output table",
    "RowCount": "Row count",
    "TableAppend": "Add row",
    "TableGet": "Get table cell value",
    "TableIsNull": "Check if the value is set in the table cell",
    "TableSet": "Set value to the added row cell",
    "Value": "Value"
  },
  "Common/CodeExec/CodeAPIDataSetExceptions": {
    "ColumnByNameNotFound": "\"%s\" named column not found",
    "ErrColOutOfRange": "%d column number is out of [%d; %d] range",
    "ErrNoRowForEditing": "Failed to change value because there is no editable row",
    "ErrRowOutOfRange": "%d row number is out of [%d; %d] range"
  },
  "Common/CodeExec/CodeAPIDataSetProxies": {
    "ErrInvalidDataSetColumnIndex": "The output table column index %d is out of [%d; %d] range",
    "ErrInvalidDataSetColumnName": "No \"%s\" column in the output table ",
    "ErrInvalidDataSourceColumnIndex": "The input table column index %d is out of [%d; %d] range",
    "ErrInvalidDataSourceColumnName": "No \"%s\" column in input table â„–%d "
  },
  "Common/HTTP/CachedHttpStream": {
    "ErrCachedHttpStreamClassAlreadyAssigned": "Cached HTTP stream class already registered",
    "ErrCachedHttpStreamClassUnassigned": "Cached HTTP stream class not registered"
  },
  "Common/HTTP/CachedHttpStream_Win": {
    "ErrHttpResponseExRequired": "To create %s class instance support by IHTTPResponseEx interface HTTP client response is required",
    "ErrHttpResponseWriteDisallowed": "Writing to HTTP response stream disallowed",
    "ErrInconsistentContentLength": "Actual received %d data size inconsistent with Content-Length %d header value",
    "ErrReadStreamBufferLength": "The provided %d buffer size is insufficient to read %d bytes"
  },
  "Common/HTTP/HTTPNetRequest": {
    "ErrHTTPNetRequest": "Request to \"%s\" URL failed"
  },
  "Common/WSDL/HTTPHeaders": {
    "ErrInvalidHeaderName": "Invalid %s header name"
  },
  "Common/WSDL/Processor/MIMECommon": {
    "ErrInvalidContentType": "Invalid Content-type value format: %s"
  },
  "Common/WSDL/Processor/MIMEExportImpl": {
    "ErrCantExportPart": "Failed to export MIME %s content as an alternative has already been exported",
    "ErrExportConflictingPart": "Attempt to export \"%s\" part of WSDL message conflicting with the previously exported data",
    "ErrValueIntExportImpossible": "Failed to export %d value to the message associated with \"%s\" schema element: %s "
  },
  "Common/WSDL/Processor/MIMEImportImpl": {
    "ErrCodePageNotSupported": "\"%s\" codepage not supported",
    "ErrUnbalancedPop": "Unbalanced Pop operation"
  },
  "Common/WSDL/Processor/WSDLHttpMessageEncoder": {
    "ErrColumnIndexOutOfRange": "HTTP messages encoder is configured to export the column with #%d index, however the data source contains only %d values",
    "ErrDuplicateSearchPattern": "\"%s\" search string occurring more than once",
    "ErrEncoderNotInitialized": "HTTP messages encoder not initialized",
    "ErrInfNaNNotAllowed": "Infinities and NaN are not valid floating point numbers to be passed in GET/POST requests URL Encoded/URL Replacement ",
    "ErrNoInputMessage": "\"%s\" operation does not contain the incoming message description",
    "ErrNonHttpBinding": "\"%s\" is not HTTP binding",
    "ErrNonHttpMessage": "\"%s\" message of \"%s\" operation is not HTTP message",
    "ErrNonHttpOperation": "\"%s\" is not HTTP operation",
    "ErrNonHttpPort": "\"%s\" is not HTTP port",
    "ErrNoPartElement": "\"%s\" message part did not map the schema element",
    "ErrURLReplacementError": "Errors occurred while analysing \"%s\" URL replacement template",
    "ErrValueIntExportImpossible": "Failed to convert %d integer to \"%s\" type: %s"
  },
  "Common/WSDL/Processor/WSDLRequestProcessor": {
    "ErrExportWSDLHttpRequestData": "Error occurred while HTTP request generating from #%d row of the input set: %s",
    "ErrGetElementByMessagePartUnassigned": "When processing WSDL request, the following property has not been configured: TBGWSDLRequestProcessor.GetElementByMessagePart",
    "ErrHTTPHeaderRedefined": "\"%s: %s\" header already defined in the request",
    "ErrHTTPHeaders": "Error while generating HTTP headers",
    "ErrXMLExportNoContext": "No export context specified",
    "FailedRequestFileNameFormat": "\"Request_\" yyyy \"-\" mm \"-\" dd \"_\" hh \"-\" nn \"-\" ss \".\" Zzz \"_failed\"",
    "RequestFileNameFormat": "\"Request_\" yyyy \"-\" mm \"-\" dd \"_\" hh \"-\" nn \"-\" ss \".\" Zzz",
    "RequestFileNameFormatEx": "%s_%d",
    "RequestFileNameFormatFull": "%s.%s"
  },
  "Common/WSDL/SOAP": {
    "ErrCantSetupSOAPEnvelopeMsg": "Failed to set up SOAP envelope based on %s message",
    "ErrCantSetupSOAPEnvelopeOp": "Failed to set up SOAP envelope for %s operation",
    "ErrMessageHasNoBody": "Message has no body",
    "ErrMessageNotConnectedToOperation": "Message not connected to a specific operation was sent to SOAP envelope",
    "ErrNonSOAPMessage": "Non SOAP message",
    "ErrSoapBodyStyleNotRPC": "SOAP body in RPC operation does not support RPC style",
    "ErrSOAPEncodingNotSupported": "\"%s\" encoding style for %s SOAP version not supported",
    "WarnBOMNotRecommended": "BOM (Byte order mark) addition to the SOAP envelope top may cause failure of some servers (for example, Apache Xerces or Java services) to process the request"
  },
  "Common/WSDL/WSDL": {
    "ErrHttpVerbNotSupported": "\"%s\" HTTP method not currently supported",
    "ErrUnrecognizedSOAPNamespaceURI": "\"%s\" SOAP namespace not recognized"
  },
  "Common/WSDL/WSDL_MSXML": {
    "ErrBindingMustSpecifyExactlyOneExtensionType": "\"%s\" binding must specify exactly one extension type",
    "ErrBindingMustSpecifyExtension": "\"%s\" port binding extension not specified or supported",
    "ErrBindingNotFound": "\"%s\" binding for \"%s\" endpoint (port) not found",
    "ErrBindingOperationExtensionCollision": "Types of \"%s\" binding extensions and \"%s\" operations do not match",
    "ErrCantDefineTransmissionPrimitive": "Failed to define data exchange primitive for %s operation, %s port type",
    "ErrFaultMustHaveExactlyOnePart": "Error defining %s operation, %s port type: fault message must contain exactly one part",
    "ErrHTTPOperationExtensionMissing": "No required extension element \"<http:operation0/>\" in \"%s\" binding HTTP declaration for \"%s\" operation  ",
    "ErrHttpPartReferencesComplexElement": "\"%s\" part included into \"%s\" message of \"%s\" type (\"%s\" operation) refers to %s{%s} XSD schema element related to the complex type",
    "ErrHttpPartReferencesComplexType": "\"%s\" part included into \"%s\" message of \"%s\" type (\"%s\" operation) refers to the complex type of %s{%s} XSD schema",
    "ErrInputMimeTypeContainsWildcard": "The incoming service message content must relate to the specific MIME type (actually - %s)",
    "ErrInvalidMimeType": "Invalid MIME type: %s",
    "ErrItemTypeNotFound": "\"%s\" array iitem type not found in schema",
    "ErrMessageDefHasNoSuchPart": "\"%s\" message definition does not contain \"%s\" named part",
    "ErrMessageDefinitionNotFound": "\"%s\" message definition not found in the document",
    "ErrMessageDefNotFound": "\"%s\" message referenced by \"%s\" operation of \"%s\" binding not found",
    "ErrMessageMustSpecifyExtension": "\"%s\" message extension (\"%s\" operation of \"%s\" binding) not specified or supported",
    "ErrMessageSoapVersionConflict": "SOAP version of %s message conflicts with %s operation version",
    "ErrMimeContentMessageDefHasMultipleOrNoParts": "\"<%s/>\" element without \"part\" attribute refers to \"%s\" message definition which contains more than one part or does not contain any",
    "ErrMimeContentReferencesComplexElement": "mime:content extension element in \"%s\" message (\"%s\" operation) is associated with \"%s\" part that refers to %s{%s} XSD schema element related to the complex type",
    "ErrMimeContentReferencesComplexType": "mime:content extension element in \"%s\" message (\"%s\" operation) is associated with \"%s\" part that refers to the complex type of %s{%s} XSD schema",
    "ErrNoDefinitionsElement": "<definitions/> element of WSDL description is missing or does not belong to the WSDL namespace",
    "ErrNotArrayType": "\"%s\" not an array type description",
    "ErrWsdlExtractedSchemaParseError": "XML error while parsing the schema inserted into the WSDL file (%d row, %d position):\nError code: %d\nReason: %s",
    "ErrWsdlImportNoAccess": "No access to the imported %s document"
  },
  "Common/XML/Processor/XMLExportImpl": {
    "ColumnName": "Data column name",
    "ErrColumnMappedToNonExistentNode": "\"%s\" input set column has been assigned for nonexistent \"%s\" XSD schema node",
    "NodePath": "Tree node path"
  },
  "Common/XML/Processor/XMLImportImpl": {
    "ErrXMLParse": "Error parsing XML:\nâ€ƒRow: %d\nâ€ƒPosition: %d\nâ€ƒError code: %d\nâ€ƒMessage:\nâ€ƒ%s",
    "ErrXMLValidate": "XML validation error:\nâ€ƒRow: %d\nâ€ƒPosition: %d\nâ€ƒError code: %d\nâ€ƒMessage:\nâ€ƒ%s"
  },
  "Common/XML/Processor/XMLRequestProcessor": {
    "ErrXMLExportNoContext": "No export context specified"
  },
  "Common/XML/Processor/XMLRequests": {
    "ErrExportContextNotSet": "No export context specified",
    "ErrExportStubNotSet": "Export destination not specified"
  },
  "Common/XML/Processor/XMLSchemaTree": {
    "Enclosed_All": "All #",
    "Enclosed_Choice": "Choice #",
    "Enclosed_Sequence": "Sequence #",
    "ErrAttributeNoRequiredValue": "No required value for %s attribute ",
    "ErrElementNoRequiredValue": "No required value for %s element",
    "ErrEmptyNodeName": "Tree node name cannot be empty",
    "ErrInvalidPath": "Invalid node path: %s",
    "ErrNodeLimitExceeded": "Maximum allowable number of (%d) tree nodes exceeded",
    "ErrNodeSelectionRegisteringAlreadyOn": "Node selection registering already on",
    "ErrNodeSelectionRegisteringIsOff": "Node selection registering off",
    "ErrNoneValueAttempt": "Attempt to set or get a value for the node with dtNone data type",
    "ErrParentPathOnTreeRoot": "Attempt to get the parent node path for the tree root node",
    "ErrRootElementPathOnTreeRoot": "Attempt to get the schema root element path for the tree root node",
    "ErrSetAsStringDatetimeAttempt": "Attempt to set the SetAsString based value for the \"Date/time\" data type node",
    "ErrSetAsStringVariantAttempt": "Attempt to set the SetAsString based value for the \"Variable\" data type node",
    "ErrSetDateTimeAsStringTypeMismatch": "Attempt to set the SetDateTimeAsString based value for the node with the data type different from the \"Date/time\" one",
    "ErrSetVariantAsStringTypeMismatch": "Attempt to set the SetDateTimeAsString based value for the node with the data type different from the \"Variable\" one",
    "ErrTreeSelectionUpdate": "EndUpdateSelection method called without BeginUpdateSelection method",
    "ErrValueConversionImpossible": "Failed to convert \"%s\" string to \"%s\" value",
    "ErrValueIntConversionImpossible": "Failed to convert \"%s\" string to \"%s\" number: %s",
    "Group_Idx": "(%s) index"
  },
  "Common/XML/SAX/XMLSAX_MSXML": {
    "HTTPClientInitFailed": "Error creating HTTP client",
    "HTTPClientRetrieveDataFailed": "Error retrieving data by HTTP client: %s"
  },
  "Common/XML/XML_MSXML": {
    "ErrXMLLoadFailure": "Failed to load %s document",
    "ErrXMLLoadStringFailure": "Failed to load XML document from string",
    "ErrXMLParseFailure": "Error processing %s document (%d row, %d position): %s",
    "ErrXMLParseStringFailure": "Error processing XML (%d row, %d position): %s"
  },
  "Common/XML/XMLDocument": {
    "ErrDocumentHasNoRootElement": "No root element in XML document",
    "ErrInvalidNodeID": "Unknown node ID: %d",
    "ErrInvalidXMLNameChar": "XML ID cannot contain \"%s\" character",
    "ErrInvalidXMLNameStartChar": "XML identifier cannot start with \"%s\" character",
    "ErrOnlyOneRootElementAllowed": "Document root element already exists"
  },
  "Common/XML/XSD_MSXML": {
    "Any": "Any item",
    "ErrCantCreateXMLDOMDocument60": "Error creating COM object of XML document; possible reason - not installed MSXML 6.0",
    "ErrXSDElementExistsWithAnotherType": "%s item to be added from %s  namespace already exists in the schema and has a different type",
    "ErrXSDNoAccess": "No access to %s document",
    "ErrXSDNoSchemaElement": "%s document does not contain 'schema' root element 'schema'",
    "WarnXSDElementRemoved": "%s:%s element was removed from %s document because it could not be verified using the file storage"
  },
  "components/assnrules/AssnRulesEngine": {
    "AssnRulesApply": "Apply association rules model",
    "AssnRulesFPGrowth": "Search for frequent itemsets",
    "AssnRulesFPTree": "Build FP-tree",
    "AssnRulesTraceRules": "Trace rules",
    "AssnRulesTransactions": "Transactions preparation",
    "ColumnNameItemsetID": "Itemset ID",
    "ColumnNameItemsetSupport": "Support",
    "ColumnNameItemsetWidth": "Power",
    "ColumnNameRuleAntecedent": "Antecedent",
    "ColumnNameRuleConfidence": "Confidence",
    "ColumnNameRuleConsequent": "Consequence",
    "ColumnNameRuleID": "Rule ID",
    "ColumnNameRuleLift": "Lift",
    "ColumnNameRuleSupport": "Support",
    "ColumnNameTransactionID": "Transaction identifier",
    "ErrModelDifferentSupport": "Minimum support reduced, it is required to rebuild the model",
    "ErrModelExcludeItems": "Elements with maximum support added or excluded, it is required to rebuild the model",
    "ErrMoreThanOneItemColumn": "More than one transaction item column in the input data",
    "ErrMoreThanOneTransactionColumn": "More than one transaction identifier column in the input data",
    "ErrNConsequentMaxWrongValue": "Invalid maximum number of items in the rules antecedent or consequence",
    "ErrNItemsMaxWrongValue": "Invalid maximum number of items in the set",
    "ErrNoItemColumn": "No transaction item column in the input data",
    "ErrNoModel": "Model is not configured. It is required to train the node before its application",
    "ErrNonDiscreteItemColumn": "Transaction items must relate to the discrete type",
    "ErrNoTransactionColumn": "No transaction identifier column in the input data",
    "ErrWrongBaseSourceDataType": "Data type does not match the model",
    "InputDataSourceSuppl": "Auxiliary data",
    "OutDataSetApply": "Rules application",
    "OutDataSetItemsets": "Frequent sets",
    "OutDataSetRules": "Association rules"
  },
  "components/assnrules/AssnRulesVendor": {
    "VendorCaption": "Association Rules",
    "VendorDesc": "Association rules search"
  },
  "components/assnrules/FPTree": {
    "Support": "Support"
  },
  "components/autocorrelation/AutoCorrelationEngine": {
    "ACFDisplayName": "ACF",
    "ErrFFTHugeSize": "The input data source size exceeds the allowable values for calculation in the frequency domain",
    "ErrOverflow": "The input data source size or lags number exceeds the allowable values",
    "LagDisplayName": "Lag",
    "MsgUsableColumnRequired": "No used columns specified",
    "PACFDisplayName": "PACF",
    "SignificantDisplayName": "Significance",
    "StdErrDisplayName": "Error"
  },
  "components/autocorrelation/AutoCorrelationVendor": {
    "VendorCaption": "Autocorrelation",
    "VendorDesc": "Calculate autocorrelation function values"
  },
  "components/binning/Binning": {
    "CalculatingBarChartsProcess": "Histogram calculation",
    "CalculatingBinsProcess": "Calculate bins",
    "DoTeachProcessFmt": "\"%s\" field processing",
    "ErrBinsInvalidFmt": "Bins for \"%s\" column are not valid for quantization",
    "ErrBinsNotDefined": "Bins not defined for the specified parameters",
    "ErrCreateQuantizer": "Failed to create quantizer",
    "ErrDefineBinsFailedFmt": "Failed to define quantization intervals for \"%s\" field",
    "ErrInputDataSourceNotActive": "Quantized data source is not active",
    "ErrMethodNotDefined": "The binning method is not defined for the given parameters",
    "ErrMethodNotDefinedFmt": "Quantization method unspecified for \"%s\" column",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoMethodFmt": "No quantization method available for \"%s\" column",
    "ErrNotFoundBinsClass": "No bin class found to generate the example template",
    "ErrOrderID": "Bin identifiers not ordered",
    "ErrPreviewExamplesInvalidLength": "The template number does not match the data types number",
    "ExecuteProcess": "Output data processing",
    "InputBinsDataSource": "External quantization bins",
    "PostfixDisplayNameFmt": " %s %s",
    "PostfixExtermalBins": "External",
    "PostfixSDBins": "SD",
    "PostfixTileBins": "Tiled",
    "PostfixWithCountBins": "Bins",
    "TeachProcess": "Formation of quantization bins"
  },
  "components/binning/BinningLabelConstructor": {
    "Inf": "+Inf",
    "NegInf": "-Inf"
  },
  "components/binning/BinningMethod": {
    "ErrInvalidBinFmt": "Failed to generate bins for \"%s\" field"
  },
  "components/binning/BinningMethodsImplementations": {
    "ErrBadLimits": "The lower bound cannot exceed the upper one",
    "ErrBinsCount": "Bin count must be more than 0",
    "ErrBinsCountLimitFmt": "Bin count must not exceed %d ",
    "ErrBinWidthFmt": "Failed to define bin width for %s field",
    "ErrGenerateBins": "Failed to generate quantization bins",
    "ErrInfinityFmt": "Quantization bins for %s field were not created. The field contains the \"infinity\" value.",
    "ErrInvalidBinRowFmt": "Failed to generate bin for %s field from %d row",
    "ErrInvalidRangeWidthFmt": "The initial bin boundary exceeds the final boundary for %s field",
    "ErrLogBinsCountLimitFmt": ", for % field.",
    "ErrLowerLimit": "No lower range bound specified",
    "ErrNoDefineExternalBins": "No external bins found",
    "ErrNoDefineExternalBound": "No bounds for external bins found",
    "ErrSkoAvgFmt": "Failed to get SD/mean for %s field",
    "ErrStatFmt": "Failed to get minimum maximum for %s field",
    "ErrTooManyBinsFmt": "Too many bins defined for %s integer field",
    "ErrUpperLimit": "No upper range bound specified",
    "ErrVerySmallWidthFmt": "For %s integer field bin width must be >= 1",
    "ErrWrongBinsDataType": "Invalid bin data type",
    "ErrZeroBinsWidth": "Bin width must be more than 0",
    "ErrZeroBinsWidthFmt": "Bin width must be more than 0 for %s field",
    "ErrZeroDivForIntervalsFmt": "%s field with zero variance, only 1 bin will be created",
    "ErrZeroDivForSDFmt": "%s field with zero variance, only 3 bins will be created"
  },
  "components/binning/BinningMethodsImplementationTile": {
    "AlignTile": "Align tiles",
    "ErrBinsCountLimitFmt": "Tiles number must not exceed %d",
    "ErrContextNotReadyFmt": "Context not ready for %s field and %s method  ",
    "ErrNoMethod": "Failed to get tiled quantization settings",
    "ErrNoValuesFmt": "%s field contains no data, it is impossible to generate bins",
    "ErrSumFmt": "Failed to get sum of values for %s field",
    "ErrZeroTileCount": "Bin (tile) count must be > 0",
    "NegativValueForTileSumm": "Negative values are not allowed when creating bins by sum of characteristic",
    "SortProcessFmt": "Sort %s field ",
    "WarnNoRound": "In case of optimal tile quantization bin bounds are not rounded"
  },
  "components/binning/BinningQuantizers": {
    "ErrNoBins": "No bins defined for quantizer"
  },
  "components/binning/BinningUtils": {
    "ErrInvalidTypecast": "Invalid typecasts"
  },
  "components/binning/BinningValue": {
    "ErrContinuousType": "Data type does not comply with continuous values",
    "ErrNumericType": "Data type not related to the numeric values"
  },
  "components/binning/BinningVendor": {
    "OutputRanges": "Quantization ranges",
    "VendorCaption": "Quantization",
    "VendorDesc": "User data quantization"
  },
  "components/calcdata/CalcData": {
    "ErrExceededRecursiveCalls": "Maximum number of (%d) recursive calls of Data function in \"%s\" expression exceeded.\nTo solve this problem you must enable Caching.",
    "ErrExprIsStringType": "\"%s\" expression of string type",
    "InputVariables": "Input variables",
    "NameNotExists": "No field, variable or expression with \"%s\" name exists"
  },
  "components/calcdata/CalcDataVendor": {
    "VendorCaption": "Calculator",
    "VendorDesc": "Create calculated fields"
  },
  "components/calcdata/CalcItem": {
    "ErrExprParse": "Error parsing \"%s\" expression: %s",
    "ExprCalculateError": "Error calculating \"%s\" expression, %d row of the input set"
  },
  "components/calcdata/CalcItemChakra": {
    "ErrExprParse": "Error parsing \"%s\" expression: %s",
    "ErrExprUsesUndefinedVariable": "%s undefined variable used in \"%s\" expression ",
    "ExprCalculateError": "Error calculating \"%s\" expression, %d row of the input set"
  },
  "components/calcdata/ExprColumns": {
    "ColumnMetaDesc": "Column",
    "DataTypeDesc": "Data type",
    "DefaultExprDisplayName": "Expression",
    "DescriptionDesc": "Description",
    "ExpressionDesc": "Expression",
    "IntermediateDesc": "Intermediate expression",
    "ItemDisplayNamePrefix": "Expression"
  },
  "components/calcdata/FloatCLineParser": {
    "ErrBracket": "Incorrect brackets",
    "ErrIllegalCharacter": "Invalid \"%s\" character",
    "ErrInvalidExpression": "Invalid expression: \"%s\"",
    "ErrQuote": "Unclosed string intercept in %d string ",
    "ErrUnknownFunction": "Unknown function: %s"
  },
  "components/calcvariables/CalcVariables": {
    "ErrExprCalculate": "Error calculating \"%s\" expression",
    "ErrExprIsStringType": "\"%s\" expression of string type",
    "ErrExprParse": "Error parsing \"%s\" expression: %s",
    "ErrVarValueSet": "Error setting \"%s\" expression value",
    "NameNotExists": "No input variable or expression with \"%s\" name exists"
  },
  "components/calcvariables/CalcVariablesVendor": {
    "VendorCaption": "Calculator (Variables)",
    "VendorDesc": "Creating calculated variables"
  },
  "components/clope/ClopeEngine": {
    "ClopeApplyNotify": "Model application",
    "ClopeTrainNotify": "Cluster search",
    "ClopeTransactionNotify": "Transactions preparation",
    "ColumnNameCluster": "Cluster number",
    "ColumnNameN": "N",
    "ColumnNameS": "S",
    "ColumnNameTransaction": "Transaction identifier",
    "ColumnNameW": "W",
    "ErrMoreThanOneItemColumn": "More than one transaction item column in the input data",
    "ErrMoreThanOneTransactionColumn": "More than one transaction identifier column in the input data",
    "ErrNoItemColumn": "No transaction item column in the input data",
    "ErrNoModel": "Model is not configured. It is required to train the node before its application",
    "ErrNonDiscreteItemColumn": "Transaction items must relate to the discrete type",
    "ErrNoTransactionColumn": "No transaction identifier column in the input data",
    "ErrTransactionTypeNotMatched": "Transaction identifier types do not match",
    "InputDataSourceSuppl": "Supplementary input",
    "OutDataSetClusters": "Clustering",
    "OutDataSetParameters": "Cluster parameters"
  },
  "components/clope/CLOPEVendor": {
    "VendorCaption": "Transaction Clustering",
    "VendorDesc": "CLOPE algorithm transaction clustering"
  },
  "components/clope/TransactionDataSourceSet": {
    "DataSourceSupplColumnName": "Field name",
    "DataSourceSupplItem": "Supplementary data source field",
    "ElementValuesSuppl": "Unique values suppl.",
    "EncodeArray": "Item index"
  },
  "components/clusterization/Clusterization": {
    "ErrNoTrainData": "No train data",
    "NAdditionalIters": "Pretraining iteration count"
  },
  "components/clusterization/ClusterizationEngine": {
    "ClusterizationTrainNotify": "Cluster search",
    "ColumnNameCluster": "Cluster number",
    "ColumnNameDistance": "Distance to cluster center",
    "ColumnNameUniqueCoordSuffix": "|Coordinate",
    "ColumnNameUniqueValueSuffix": "|Value",
    "ErrClustersRowCountOverflow": "Row count overflow of the \"Cluster Centers\" output data set",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoModel": "Model is not configured. It is required to train the node before its application",
    "ErrWrongModel": "Model does not match the input data",
    "OutDataSetCenters": "Cluster centers",
    "OutDataSetClusters": "Clustering",
    "PrepareDataNotify": "Prepare data"
  },
  "components/clusterization/ClusterizationVendor": {
    "VendorCaption": "Clustering",
    "VendorDesc": "Data clustering"
  },
  "components/coarseclasses/CoarseClassesBuilder": {
    "ErrCantApplyExternalBinning": "You cannot apply binning for %s column.",
    "ErrCantApplyFineClassesBinning": "You cannot apply fine classes for binning for %s column. There are too many unique values",
    "ErrCantLoadBackup": "Failed to restore binning",
    "ErrCantSaveBackup": "Failed to save current binning",
    "ErrContDataKindExpected": "Continuous data type of %s column expected ",
    "ErrDiscreteDataKindExpected": "Discrete data type of %s column expected ",
    "ErrIncorrectEventValue": "The output field does not contain \"%s\" value",
    "ErrInputBinningIsNotCorrected": "External binning for \"%s\" column incorrectly specified ",
    "ErrOutColumnNotDefined": "Undefined output field",
    "ErrOutColumnNotValid": "The output field must be discrete with 2 unique values",
    "ErrOverflow": "The number of the input data source binning operations exceeds the allowable value",
    "ErrVoidDataKind": "Data type of the processed column not defined"
  },
  "components/coarseclasses/CoarseClassesConfig": {
    "EquabilityCoefficient": "Equability coefficient",
    "ErrDoNotFitAsTargetColumn": "The output column must have the discrete data type and contain exactly 2 unique values",
    "ErrIncorrectColumnPurpose": "Incorrect \"%s\" field usage type",
    "ErrNotAllowedInputBinningKind": "The input field does not support the new assignment in the external partition (data type restriction)",
    "ErrRequiredContinuousOrDiscrete": "Continuous or discrete data type is required",
    "MaxClassCount": "Required classes count",
    "MinimalClassQuota": "Minimum class quota"
  },
  "components/coarseclasses/CoarseClassesEngine": {
    "ActiveInputPortRequired": "It is required to activate the input port to build the coarse classes",
    "ClassMarkPostfix": " Caption",
    "ClassNumPostfix": " Class number",
    "ClassSignificantPostfix": "Significance",
    "CoarseClassesProcessDesc": "Build coarse classes",
    "ErrClassStorageNotDefined": "The fine classes storage of one of the columns not defined",
    "ErrCoarseClassBuilderNotValid": "The fine classes storage does not comply with the customized settings",
    "ErrExternalBinningOverFlow": "The external binning size for \"%s\" column exceeds the allowable value ",
    "ErrInputBinningIsNotCorrected": "External binning for \"%s\" column incorrectly specified ",
    "ErrInputBinningIsNotExist": "No external binning for \"%s\" column or port not activated",
    "ErrInputBinningIsNotFull": "External binning for \"%s\" column does not contain all required data",
    "ErrInputBinningMissValue": "External binning for \"%s\" column does not contain unique \"%s\" value",
    "ErrInputBinningMissValues": "External binning contains not all unique values of \"%s\" column ",
    "ErrInputRangeDataSourceIsNotExist": "No external binning data source",
    "ErrNoModel": "Model is not configured. It is required to train the node before its application",
    "InputRangesDataSource": "External quantization ranges"
  },
  "components/coarseclasses/CoarseClassesMapper": {
    "ErrNotAllowedDataType": "Column data type %s not supported",
    "ErrNoUniqueValues": "Failed to get unique values for \"%s\" column",
    "ErrPrevBinningDoesNotExist": "No previous binning for \"%s\" column"
  },
  "components/coarseclasses/CoarseClassesVendor": {
    "OutputBinningParams": "Column significance",
    "OutputClassParams": "Class parameters",
    "VendorCaption": "Coarse Classes",
    "VendorDescription": "Minimize input values diversity"
  },
  "components/coarseclasses/CoarseClassingOptimalAlgorithm": {
    "MaxClassCount": "Maximum class count",
    "MinClassPercentage": "Minimum class percentage",
    "UniformityCoef": "Uniformity coefficient"
  },
  "components/coarseclasses/FineClassesStorage": {
    "BlanksClass": "[blank]",
    "ErrColumnIsNotDifenied": "Failed to define the column to process",
    "ErrDataTypesNotMatch": "The specified column data type does not match the data type of the coarse classes",
    "ErrNotPositiveIntervalsCount": "Interval count must be more than 0",
    "From": "from",
    "NullClass": "Null class",
    "To": "to"
  },
  "components/columnflipping/ColumnFlipping": {
    "ColumnFlippingProcess": "Column convolution",
    "DataTypesColumnDisplayName": "Data types",
    "DisplayNamesColumnDisplayName": "Captions",
    "ErrRowCountExceedMaxValue": "Row count of the result set exceeded the maximum value",
    "NamesColumnDisplayName": "Captions",
    "ValuesColumnDisplayName": "Values"
  },
  "components/columnflipping/ColumnFlippingVendor": {
    "VendorCaption": "Column Ð¡onvolution",
    "VendorDesc": "Create flat table from pivot table"
  },
  "components/coluniondata/ColUnionData": {
    "ErrNoActiveInputs": "No active inputs",
    "ErrNoTailsAlignDataSource": "No data source for alignment",
    "JoinedDataSource": "Joined table",
    "JoinedVariables": "Joined variables",
    "MainDataSource": "Main table"
  },
  "components/coluniondata/ColUnionDataVendor": {
    "VendorCaption": "Connection",
    "VendorDescription": "Join several data sets by vertical gluing"
  },
  "components/condition/Condition": {
    "AggregateCountColumnDisplayName": "*",
    "ConditionBranchMetaDesc": "Branch",
    "ErrAggregateCountColumnNotFound": "No row count aggregation column found for the specified data set",
    "ErrCannotAccessLinkedFieldInfos": "Invalid operation: GetLinkedFieldInfos method calling",
    "ErrDebugConditionNotSpecified": "No condition branches are specified for execution in the debug mode",
    "ErrFieldNotSpecified": "No comparison field specified",
    "ErrIncorrectConditionConfiguration": "The condition list contains errors",
    "ErrInvalidAggregationType": "\"%s\" aggregation function does not apply to the specified field",
    "ErrInvalidCompareValue": "\"%s\" value  is not compatible with \"%s\" data type",
    "ErrInvalidRelationType": "\"%s\" relationship type is not applicable to the specified field and aggregation function",
    "ErrNoConditionBranchItems": "No condition branches specified",
    "ErrNoConditionItems": "Condition branch cannot be empty"
  },
  "components/condition/ConditionComponent": {
    "ElseBranchDesc": "Otherwise",
    "ErrInputSocketDefIsEmtpy": "The following input types are not specified:",
    "OutputSocketDisplayNameTemplate": "%s - %s"
  },
  "components/condition/ConditionComponentVendor": {
    "VendorCaption": "Condition",
    "VendorDesc": "Conditional execution of model branch"
  },
  "components/corranalysis/CorrAnalysis": {
    "ColumnSet1": "Field 1",
    "ColumnSet2": "Field 2",
    "CorrAnalysisExtremumCFNotify": "Calculation of cross-correlation functions extremes",
    "CorrAnalysisNotify": "Calculation of correlation coefficients",
    "CorrAnalysisPirsonNotify": "Calculation of Pearson correlation coefficients",
    "CorrAnalysisRankedStatNotify": "Statistics calculation for rank variables",
    "CorrAnalysisSpearmanNotify": "Calculation of Spearman's correlation coefficients",
    "CorrAnalysisTauBKendallNotify": "Calculation of Kendall's Tau-b correlation coefficients",
    "DisplayName": "Caption",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "Name": "Name"
  },
  "components/corranalysis/CorrAnalysisVendor": {
    "VendorCaption": "Correlation Analysis",
    "VendorDesc": "Calculation of correlation coefficients"
  },
  "components/crosstab/CrossTab": {
    "CountCaseDisplayName": "Count",
    "CrossTabProcess": "Build crosstab",
    "ErrTooManyDimensionsInColumns": "Too many column dimensions selected",
    "InvalidColumnNameFmt": "Failed to generate column name from \"%s\" unique value",
    "NullGroupCaption": "<...>",
    "OtherGroupCaption": "<Other0>"
  },
  "components/crosstab/CrossTabVendor": {
    "VendorCaption": "Cross Table",
    "VendorDesc": "Create flat table from pivot table"
  },
  "components/datatovariables/DataToVariablesEngine": {
    "DataToVariablesNotify": "Variable calculation",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoOneAggregation": "It is required to specify at least one aggregation option for \"%s\" field",
    "FindMedianNotify": "Median calculation"
  },
  "components/datatovariables/DataToVariablesVendor": {
    "VendorCaption": "Table into Variables",
    "VendorDesc": "Aggregate data into variables"
  },
  "components/datatoxml/DataToXML": {
    "ErrCannotProceedWithoutRootElement": "To perform the operation you must first select the root XML element",
    "ErrDocIDColumnNotAssigned": "No field that is the Document Identifier defined",
    "ErrExportNotConfigured": "XML tree not configured",
    "ErrIncorrectExportConfiguration": "Errors in configuration",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the handler settings!",
    "ErrMapInputNodeTypesMismatch": "The data type of %s column does not match the data type of %s tree node",
    "ErrMappedNodeNotOwnedByExportTree": "%s node for which input set column selection is requested is not included into XML tree",
    "ErrNodeDoesNotDescendFromSelectedRoot": "%s node is not a descendant of the selected %s root element",
    "ErrNodeDoesNotExist": "\"%s\" node not found in XSD schema",
    "ErrNotRootElement": "\"%s\" node is not the XSD schema root element",
    "ErrNoXSDInput": "There is no XSD schema at the component input",
    "ErrRootNodeNotSelected": "No root XML element selected",
    "ErrUnmappedNodeNotOwnedByExportTree": "%s node for which link reset is requested is not included into XML tree",
    "ErrXMLExport": "Error generating XML:\nâ€ƒError code: %d\nâ€ƒ%s",
    "ExportDataSetProcessCaption": "Data Set Processing",
    "IDName": "ID",
    "WriteXMLFileProcessCaption": "XML document formation",
    "XMLName": "XML",
    "XSDConnection": "Connect to XSD schema source"
  },
  "components/datatoxml/DataToXMLVendor": {
    "VendorCaption": "XML Formation",
    "VendorDesc": "XML document formation according to given XSD schema"
  },
  "components/datereform/DateReform": {
    "ErrFormatingString": "Error converting date/time to string with %s format",
    "ISO8601": "ISO8601"
  },
  "components/datereform/DateReformVendor": {
    "VendorCaption": "Date and Time",
    "VendorDescription": "Reform date/time"
  },
  "components/em/EMEngine": {
    "ColumnNameCluster": "Cluster number",
    "ColumnNameProbability": "Ownership probability",
    "ColumnNameUniqueCoordSuffix": "|Coordinate",
    "ColumnNameUniqueValueSuffix": "|Value",
    "ErrClustersRowCountOverflow": "Row count overflow of the \"Cluster Centers\" output data set",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoModel": "Model is not configured. It is required to train the node before its application",
    "ErrWrongModel": "Model does not match the input data",
    "OutDataSetCenters": "Cluster centers",
    "OutDataSetClusters": "Clustering",
    "PrepareDataNotify": "Prepare data",
    "TrainNotify": "Cluster search"
  },
  "components/em/EMVendor": {
    "VendorCaption": "EM Clustering",
    "VendorDesc": "EM algorithm data clustering"
  },
  "components/enrichdata/EnrichData": {
    "DisplayNamePrefix": "Addition",
    "ErrLinkMustContainColumnOfMainTable": "Link must contain a field from the main table",
    "ErrRowCountExceedMaxValue": "Row count of the result set exceeded %d maximum value",
    "ProgessOutputBuild": "Build result set",
    "ProgressJoinedTableIndex": "Joined %d table indexing"
  },
  "components/enrichdata/EnrichDataVendor": {
    "VendorCaption": "Enrich Data",
    "VendorDescription": "Enrich data using guides"
  },
  "components/execcmd/ExecCmd": {
    "ErrBadCmdLine": "Failed to select executable file name",
    "ErrCmdLineIsEmpty": "Empty command line",
    "ErrCurrentDirectory": "Failed to define the current directory",
    "ErrDisallowedExecution": "Node execution prohibited by security settings",
    "ErrMsgDisplayName": "Error message",
    "ErrResultCmdLineIsEmpty": "Empty result command line.",
    "ExecTimeoutExpired": "Execution time expired",
    "ResultDisplayName": "Execution result"
  },
  "components/execcmd/ExecCmdVendor": {
    "VendorCaption": "Ð¡ommand Execution",
    "VendorDesc": "External command execution"
  },
  "components/execnode/ExecNodeComponent": {
    "ErrNodeComponentVendorIsSealed": "Failed to set reference to \"%s\" node for which inheritance is prohibited",
    "ErrNodeLocked": "\"%s\" node is blocked",
    "ErrNodeNotInitialized": "\"%s\" node not initialized",
    "ErrReferencedNodeNotAvailable": "Reference node not available",
    "ErrReferencedNodeNotFound": "Reference node not found",
    "ErrReferencedNodeNotSpecified": "No reference to node specified",
    "ErrUnableToLoadComponentConfig": "Failed to load the internal component configuration"
  },
  "components/execnode/ExecNodeComponentVendor": {
    "InputBaseNode": "Base node",
    "VendorCaption": "Node Execution",
    "VendorDesc": "Apply model to new data"
  },
  "components/extractxml/ExtractXML": {
    "DocIDColumn": "Document ID",
    "ErrCharsetForCodePageNotFound": "No supported XML character set found for %d code page",
    "ErrExtractXML": "Error extracting XML from %d row of the input set:\nâ€ƒError code: %d\nâ€ƒMessage: %s",
    "ErrExtractXMLInitError": "Handler initialization error Extract\nXML:\nâ€ƒ%s",
    "ErrImportNotConfigured": "Import tree not configured",
    "ErrInputFieldNotSelected": "You must specify containing XML field",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the handler settings!",
    "ErrNoInputDataSource": "No input data source connected",
    "ErrNothingSelected": "No nodes selected for import",
    "ErrNoXSDInput": "There is no XSD schema at the component input",
    "ErrorCodeColumn": "Completion code",
    "ErrorDataSet": "Errors and exit codes",
    "ErrorDescColumn": "Error description",
    "InputDataSource": "Input data source",
    "XSDConnection": "Connect to XSD schema source"
  },
  "components/extractxml/ExtractXMLVendor": {
    "VendorCaption": "XML Extraction",
    "VendorDescription": "Extracts XML document from the string field of the data set and imports it into the output data set according to the specified schema"
  },
  "components/factoranalysis/FactorAnalysis": {
    "ErrFactorMatrixAfterRot": "Illconditioned factor mapping matrix",
    "ErrFactorMatrixBadSize": "Incorrect factor mapping matrix size",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoModel": "Model is not configured. It is required to train the node before its application",
    "ErrWrongModel": "Input data does not match previously trained model",
    "FactorAnalysisColumnsDisplayNames": "Caption",
    "FactorAnalysisColumnsNames": "Name",
    "FactorAnalysisDisplayName": "Factor",
    "FactorAnalysisNotify": "Factor analysis",
    "OutDataSetFactors": "Factors",
    "OutDataSetLoadings": "Factor loadings"
  },
  "components/factoranalysis/FactorAnalysisVendor": {
    "VendorCaption": "Factor Analysis",
    "VendorDesc": "Identification of significant factors"
  },
  "components/filterdata/CheckedCollection": {
    "Checked": "Checked"
  },
  "components/filterdata/FilterColumns": {
    "bdtCurrent": "current date",
    "bdtData": "available data",
    "CompareTipFmt": "%s and %s",
    "ErrColumnNotFound": "Field is specified incorrectly",
    "ErrCompareValueIsNull": "The compared value not defined",
    "ErrEmptyCompareValueList": "No list of values specified",
    "ErrIncorrectCompareLowerBound": "The entered lower bound value does not match the filtered column type",
    "ErrIncorrectCompareUpperBound": "The entered upper bound value does not match the filtered column type",
    "ErrIncorrectCompareValue": "The entered value does not match the filtered column type",
    "ErrIncorrectCompareValueList": "List values do not match the filtered column type",
    "ErrIncorrectRelationType": "Relationship type does not match the filtered column type",
    "ErrNoConditions": "No filtering conditions",
    "ErrRowNumberNotSupported": "Row numerators not supported",
    "ErrUnknownDataType": "No data type specified",
    "FirstLastDateFmt": "%s %s %s from %s",
    "fld0and5to20DayPeriodName": "days",
    "fld0and5to20MonthPeriodName": "months",
    "fld0and5to20QuarterPeriodName": "quarters",
    "fld0and5to20WeekPeriodName": "weeks",
    "fld0and5to20WrongPeriodName": "periods",
    "fld0and5to20YearPeriodName": "years",
    "fld2to4DayPeriodName": "day",
    "fld2to4MonthPeriodName": "month",
    "fld2to4QuarterPeriodName": "quarter",
    "fld2to4WeekPeriodName": "week",
    "fld2to4WrongPeriodName": "period",
    "fld2to4YearPeriodName": "year",
    "fldDayFirstPostfix": "first",
    "fldDayLastPostfix": "last",
    "fldManyFirstPostfix": "first",
    "fldManyLastPostfix": "last",
    "fldMonthFirstPostfix": "first",
    "fldMonthLastPostfix": "last",
    "fldOneDayPeriodName": "day",
    "fldOneMonthPeriodName": "month",
    "fldOneQuarterPeriodName": "quarter",
    "fldOneWeekPeriodName": "week",
    "fldOneWrongPeriodName": "period",
    "fldOneYearPeriodName": "year",
    "fldOtherFirstPostfix": "first",
    "fldOtherLastPostfix": "last",
    "fldQuarterFirstPostfix": "First",
    "fldQuarterLastPostfix": "last",
    "fldWeekFirstPostfix": "first",
    "fldWeekLastPostfix": "last",
    "fldYearFirstPostfix": "first",
    "fldYearLastPostfix": "last"
  },
  "components/filterdata/FilterData": {
    "ErrPreviewDataSourceNotActive": "Failed to apply filter, input not activated",
    "FilterDataNotify": "Filter operation",
    "FilterPreviewProcess": "Filter operation preview",
    "OutputDataSource": "Comply with the condition",
    "OutputDataSourceElse": "Do not comply with the condition",
    "WarnReachedLimitScanRow": "Maximum scanned row count reached: %d"
  },
  "components/filterdata/FilterDataVendor": {
    "VendorCaption": "Row Filters",
    "VendorDesc": "Row selection by condition"
  },
  "components/filtration/DataRecovery": {
    "DataRecovery": "Imputation",
    "PaymentAdditionalFeatures": "Calculation of the additional features",
    "QualityEngine": "Data quality",
    "ScanningInputData": "Input data scanning"
  },
  "components/filtration/DataRecoveryVendor": {
    "VendorCaption": "Imputation",
    "VendorDesc": "Fill in missing data"
  },
  "components/filtration/ELimOutlier": {
    "ErrOutDataSetIndexOutOfRange": "The output set index %d is out of [%d; %d] range",
    "GenerationOutputSets": "Output sets generation",
    "OutData": "Output set",
    "OutDataExtr": "Extremes",
    "OutDataOut": "Outliers",
    "PaymentAdditionalFeatures": "Calculation of the additional features",
    "QualityEngine": "Data quality",
    "ScanningInputData": "Input data scanning"
  },
  "components/filtration/ElimOutlierVendor": {
    "VendorCaption": "Eliminate Outliers",
    "VendorDesc": "Eliminate outliers and extremes"
  },
  "components/forecast/ARIMAXBuilder": {
    "ErrIncorrectData": "Incorrect data passed to %s procedure",
    "ErrOptimGradientVerificationFailed": "Analytical gradient verification failed",
    "ErrOptimIntegrityFailed": "The infinite value of the optimized function or its gradient was detected",
    "NotEnoughData": "Not enough data to train the model with the given structure",
    "TrainARIMAXProcessCaption": "Model Training"
  },
  "components/forecast/ARIMAXModel": {
    "ARDisplayName": "AR[%d]",
    "ARIMAForecastProcessCaption": "Forecast Calculation",
    "ErrCoefsLengthMismatch": "Vector depth of %d parameters  does not match the required %d",
    "ErrModelHasNoIntercept": "The current model has no intercept",
    "ErrUnknownCoefficients": "Model contains unknown coefficients",
    "InterceptDisplayName": "Intercept",
    "MADisplayName": "MA[%d]",
    "SARDisplayName": "Seasonal AR[%d]",
    "SMADisplayName": "Seasonal MA[%d]"
  },
  "components/forecast/ARIMAXParams": {
    "ConfidenceInterval": "Confidence interval",
    "D": "Integration order",
    "DS": "Seasonal integration order",
    "ErrNoStructuralElements": "No structural model element specified",
    "ForecastHorizon": "Forecast horizon",
    "P": "AR part order",
    "PS": "Seasonal AR part order",
    "Q": "MA part order",
    "QS": "Seasonal MA part order",
    "SeasonalPeriod": "Period of the seasonal component"
  },
  "components/forecast/ARIMAXTasks": {
    "ARIMAXProcessCaption": "%s Model Training",
    "ErrNotARIMAXTaskContext": "Internal error: context is not the training context for ARIMAX model",
    "MessageCurrentModel": "ARIMAX: AIC of the current selected %s model: %.8f",
    "MessageNewModel": "ARIMAX: AIC of %s model: %.8f",
    "MessageSelectedModel": "ARIMAX: %s model selected, number of degrees of freedom: %d"
  },
  "components/forecast/ARIMAXTeacher": {
    "ErrInvalidTrainData": "The model cannot be built on the basis of the specified data",
    "ErrNoTrainData": "No train data"
  },
  "components/forecast/ARIMAXTrainingResults": {
    "ErrDuplicateNodeIndex": "#%d node is duplicate in the configuration",
    "ErrParentNodeNotLoaded": "Parent node #%d not found in configuration",
    "ErrSetTrainedWithoutModel": "Attempt to set the \"trained\" status not specifying the selected model",
    "TotalSamples": "Total samples",
    "TotalSelectedSamples": "Total selected samples",
    "TrainSamples": "Samples in the training set"
  },
  "components/forecast/ForecastEngine": {
    "AdjustedR2": "Adjusted determination coefficient",
    "AIC": "Akaike information criterion",
    "AICc": "Akaike information criterion corrected",
    "BIC": "Bayesian information criterion",
    "CoefficientColumn": "Coefficient",
    "CoefficientTypeColumn": "Type",
    "ColumnName": "Input field name",
    "ColumnUniqueValue": "Unique value",
    "ErrInvalidFieldsSettings": "Invalid input set field settings",
    "ErrModelWithNoParams": "Invalid model settings: no matched parameters",
    "ErrMultipleOutputsNotSupported": "%s model allows only one output field",
    "ErrNoOutputFieldsSelected": "No output data field specified",
    "ErrNotTrained": "Model not trained",
    "ErrWrongInputField": "Invalid %s input field properties, %s data sort, %s data type",
    "ErrWrongModelInput": "Input columns do not match previously trained model",
    "ForecastModelCoefficients": "Model coefficients",
    "ForecastOutputDataSet": "Model output",
    "ForecastOutputVariables": "Summary",
    "LagColumn": "Lag",
    "LBoundColumn": "%s|Lower bound",
    "ModelDF": "Number of the model degrees of freedom",
    "ParameterNameColumn": "Parameter",
    "PredictedColumn": "%s|Prediction",
    "PValueColumn": "P-value",
    "R2": "Determination coefficient",
    "ResDF": "Number of the residues degrees of freedom",
    "ResidualColumn": "%s|Approximation error",
    "SEColumn": "Standard deviation",
    "TrainAvgError": "The training set average absolute error",
    "TrainAvgRelError": "The training set average relative error",
    "TrainRMSError": "The training set root-mean-square error",
    "TStatColumn": "T-statistics",
    "UBoundColumn": "%s|Upper bound"
  },
  "components/forecast/ForecastVendor": {
    "VendorCaption": "ARIMAX",
    "VendorDesc": "Time series forecast using ARIMA Model able to include external factors (ARIMAX)"
  },
  "components/groupdata/GroupData": {
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoOneAggregation": "It is required to specify at least one aggregation option for \"%s\" fact",
    "FindMedianNotify": "Median calculation",
    "GroupDataNotify": "Group data",
    "SortNotify": "Sort result"
  },
  "components/groupdata/GroupDataVendor": {
    "VendorCaption": "Grouping",
    "VendorDesc": "Group data"
  },
  "components/javascript/JavaScriptEngine": {
    "ErrModuleFileTooBig": "%s module file cannot be loaded: the permissible file size limit is exceeded (%d > %d bytes)",
    "ErrModuleNotExists": "File of \"%s\" module not found",
    "ErrModulePath": "Failed to resolve \"%s\" module name",
    "ErrModuleSourceRead": "Error reading \"%s\" module file",
    "ErrModuleSpecifierEmpty": "No module name specified",
    "InputDataSource": "Input data source",
    "OutputDataSet": "Output data set",
    "PreviewProcess": "Data preview",
    "WarnPreviewRunning": "Preview already running"
  },
  "components/javascript/JavaScriptExecutor": {
    "ErrGetModuleSourceUnassigned": "JavaScript plugin reading function not installed",
    "ErrGetModuleURLUnassigned": "JavaScript path resolver function not installed"
  },
  "components/javascript/JavaScriptVendor": {
    "VendorCaption": "JavaScript",
    "VendorDesc": "JavaScript code execution"
  },
  "components/joindata/JoinData": {
    "DisplayNamePrefix": "Join",
    "ErrInvalidColNamePrefix": "\"%s\" name prefix is not a valid identifier",
    "ErrRowCountExceedMaxValue": "Row count of the result set exceeded %d maximum value",
    "ProgressCompareIndexes": "Index mapping",
    "ProgressFormResult": "Output set formation",
    "ProgressJoinedTableIndex": "Joined table indexing",
    "ProgressMainTableIndex": "Main table indexing"
  },
  "components/joindata/JoinDataVendor": {
    "VendorCaption": "Join",
    "VendorDescription": "Join two data sets"
  },
  "components/linregression/LinRegression": {
    "ErrWrongPreNormLength": "The normalized %d string size differs from nominal %d"
  },
  "components/linregression/LinRegressionBuilder": {
    "ErrWrongLinRegContext": "Invalid linear regression model builder context",
    "ErrWrongLinRegModel": "The trained model is not the linear regression model"
  },
  "components/linregression/LinRegressionBuilderContext": {
    "ErrContextCreateNoRows": "The linear regression model builder context cannot be created for empty data set"
  },
  "components/linregression/LinRegressionEngine": {
    "ColumnDisplayName": "Input field captions",
    "ColumnName": "Input field names",
    "ColumnUniqueValues": "Unique values",
    "ErrInvalidFieldsSettings": "Invalid input set field settings",
    "ErrMultipleOutputFields": "Only one output data field allowed",
    "ErrNoLearnData": "The training data set must contain at least two rows",
    "ErrOutputColumnNotValid": "Invalid specified output column",
    "ErrTeachNoOutputField": "No output data field specified",
    "ErrWrongInputField": "Invalid %s input field properties, %s data sort, %s data type",
    "ErrWrongOutputColumnsCount": "Exactly 1 output column must be defined, %d output columns are currently defined",
    "ErrWrongOutputField": "Invalid %s output field properties, %s data sort, %s data type",
    "Intercept": "<Intercept0>",
    "LinRegTrainProcessName": "Build model",
    "ModelDF": "Number of the model degrees of freedom",
    "ModelPValue": "Model P value",
    "RegressionCoefsNamePostfix": "|Coefficients",
    "RegressionColumn": "%s|Regression",
    "RegressionLBoundNamePostfix": "|Ð¡I lower bound",
    "RegressionPValueNamePostfix": "|Significance",
    "RegressionStdErrorNamePostfix": "|Sd. dev.",
    "RegressionTStatNamePostfix": "|T-statistics",
    "RegressionUBoundNamePostfix": "|Ð¡I upper bound",
    "TestSamples": "Samples in the test set",
    "TotalSamples": "Total samples",
    "TotalSelectedSamples": "Total selected samples",
    "TrainSamples": "Samples in the training set",
    "ValidationPartitions": "Number of validation partitions",
    "ValidationSamples": "Samples in the validation set"
  },
  "components/linregression/LinRegressionModelTree": {
    "ErrFactorIndexesPrepared": "Full factor model indexes not prepared"
  },
  "components/linregression/LinRegressionTasks": {
    "ErrNotLinRegTaskContext": "Internal error: context is not the training context for the linear regression model",
    "ErrWrongValidationPartitionCount": "Validation partition count must be more than 0 (given partition count = %d) ",
    "RegBackwardAssignProcessName": "Excluding %s factor from the final model",
    "RegBackwardStepProcessName": "Stepwise selection - %s factor exclusion",
    "RegFoldSet": "Validation partition %d ",
    "RegForwardAssignProcessName": "%s factor addition to the final model",
    "RegForwardStepProcessName": "Stepwise selection - %s factor addition",
    "RegPrepareData": "Preparing data before training",
    "RegTrainElnetGridProcessName": "Build model (L1-regularization coefficient = %.4f L2-regularization coefficient = %.4f)",
    "RegTrainLassoGridProcessName": "Build model (L1-regularization coefficient = %.4f)",
    "RegTrainProcessName": "%s method - model training",
    "RegTrainRidgeGridProcessName": "Build model (L2-regularization coefficient = %.4f)",
    "ValidationProcess": "Model validation"
  },
  "components/linregression/LinRegressionVendor": {
    "VendorCaption": "Linear Regression",
    "VendorDesc": "Linear regression"
  },
  "components/logregression/LogRegression": {
    "ErrWrongPreNormLength": "The normalized %d string size differs from nominal %d"
  },
  "components/logregression/LogRegressionBuilder": {
    "ErrWrongLogRegContext": "Incorrect context of the log. regression model builder",
    "ErrWrongLogRegModel": "The trained model is not a log. regression model"
  },
  "components/logregression/LogRegressionBuilderContext": {
    "ErrContextCreateNoRows": "The log. regression model builder context cannot be created for empty data set"
  },
  "components/logregression/LogRegressionEngine": {
    "ActualEvent": "Event|Fact",
    "Chi2": "Chi-square",
    "ColumnDisplayName": "Input field captions",
    "ColumnName": "Input field names",
    "ColumnUniqueValues": "Unique values",
    "CVAvgCE": "Average cross-entropy in cross validation",
    "CVClsErrorPercentage": "Cross validation error percentage",
    "CVRMSError": "Root-mean-square error in cross validation",
    "ErrClassifierMultipleOutputs": "Only one output field is allowed for the classification task, %d is currently specified",
    "ErrInvalidFieldsSettings": "Invalid input set field settings",
    "ErrNoLearnData": "The training data set must contain at least two rows",
    "ErrNotImplemented": "Functionality not implemented",
    "ErrOutputColumnNotValid": "Invalid specified output column",
    "ErrTeachNoOutputField": "No output data field specified",
    "ErrWrongInputField": "Invalid \"%s\" input field properties, \"%s\" data sort, \"%s\" data type",
    "ErrWrongOutputColumnsCount": "Exactly 1 output column must be defined, %d output columns are currently defined",
    "ErrWrongOutputField": "Invalid \"%s\" output field properties, \"%s\" data sort, \"%s\" data type",
    "ErrWrongOutputFieldNotDiscrete": "Invalid \"%s\" output field properties, \"%s\" data sort, whereas \"%s\" is only valid",
    "ErrWrongOutputUniqueCount": "The number of \"%s\"output column unique values is %d (exactly 2 required)",
    "Intercept": "<Intercept0>",
    "LogRegStoreStatProcessName": "Calculation of quality indicators",
    "LogRegTrainProcessName": "Build model",
    "ModelDF": "Number of the model degrees of freedom",
    "ModelPValue": "Model P value",
    "OutputUniqueValuesNotCalculated": "Unique values of \"%s\" output column not calculated",
    "PredictedValue": "%s|Predicted value",
    "PredictionEvent": "Event|Prediction",
    "PredictionProbability": "Event probabillity|Prediction",
    "PredictionScore": "Score|Prediction",
    "RegressionCoefsNamePostfix": "|Coefficients",
    "RegressionLBoundNamePostfix": "|Ð¡I lower bound of odds ratio",
    "RegressionOddsRatioPostfix": "|Odds ratio",
    "RegressionScoreNamePostfix": "|Score",
    "RegressionStdErrorNamePostfix": "|Sd. dev.",
    "RegressionUBoundNamePostfix": "|Ð¡I upper bound of odds ratio",
    "RegressionWaldPValueNamePostfix": "|P-value of the Wald criterion",
    "RegressionWaldStatNamePostfix": "|Wald criterion",
    "TestAvgCE": "Average cross-entropy in the test set",
    "TestClsErrorPercentage": "Percentage of classification errors in the test set",
    "TestRMSError": "Root-mean-square error in the test set",
    "TestSamples": "Samples in the test set",
    "TotalSamples": "Total samples",
    "TotalSelectedSamples": "Total selected samples",
    "TrainAvgCE": "Average cross-entropy in the training set",
    "TrainClsErrorPercentage": "Percentage of classification errors in the training set",
    "TrainRMSError": "The training set root-mean-square error",
    "TrainSamples": "Samples in the training set",
    "TrainThreshold": "Model train cuttoff",
    "ValidationPartitions": "Number of validation partitions",
    "ValidationSamples": "Samples in the validation set"
  },
  "components/logregression/LogRegressionModelTree": {
    "ErrFactorIndexesPrepared": "Full factor model indexes not prepared"
  },
  "components/logregression/LogRegressionTasks": {
    "ErrNotLogRegTaskContext": "Internal error: context is not the training context for the log. regression model",
    "ErrWrongValidationPartitionCount": "Validation partition count must be more than 0 (given partition count = %d)",
    "RegBackwardAssignProcessName": "Excluding %s factor from the final model",
    "RegBackwardStepProcessName": "Stepwise selection - %s factor exclusion",
    "RegFoldSet": "Validation partition %d ",
    "RegForwardAssignProcessName": "%s factor addition to the final model",
    "RegForwardStepProcessName": "Stepwise selection - %s factor addition",
    "RegPrepareData": "Preparing data before training",
    "RegTrainElnetGridProcessName": "Build model (L1-regularization coefficient = %.4f L2-regularization coefficient = %.4f)",
    "RegTrainLassoGridProcessName": "Build model (L1-regularization coefficient = %.4f)",
    "RegTrainProcessName": "%s method - model training",
    "RegTrainRidgeGridProcessName": "Build model (L2-regularization coefficient = %.4f)",
    "ValidationProcess": "Model validation"
  },
  "components/logregression/LogRegressionVendor": {
    "VendorCaption": "Logistic Regression",
    "VendorDesc": "Logistic regression"
  },
  "components/loop/LoopComponent": {
    "ErrCannotSetLinkedVariables": "Invalid operation: LinkedVariables property change",
    "ErrColumnCountChanged": "The column count in the data set differs from the previous iteration",
    "ErrColumnDataTypesChanged": "The column data types in the data set differ from the previous iteration",
    "ErrCompareValueUnassigned": "No comparison value specified for the loop termination condition",
    "ErrConditionComponentInLoopNotAllowed": "Execution of the \"Condition in loop not allowed\" component",
    "ErrGroupColumnNotFound": "\"%s\" column usedfor data grouping not found",
    "ErrGroupCountMustBePositive": "Group count must be positive",
    "ErrGroupDataSourceSocketNotFound": "No socket with \"%s\" identifier containing columns to group found",
    "ErrGroupDataSourceSocketNotSpecified": "No socket containing columns to group specified",
    "ErrGroupSizeMustBePositive": "Group row count must be positive",
    "ErrIncompatibleTerminateCondition": "\"%s\" loop termination condition is not compatible with \"%s\" data type",
    "ErrIncorrectMaxThreadCount": "Maximum thread count must be not less than %d",
    "ErrInvalidMappedVariable": "Invalid mapped variables passed from output to input",
    "ErrIterationCountCannotBeNegative": "Iteration count cannot be negative",
    "ErrIterationCountOverflow": "Maximum allowable number of iterations exceeded: %d",
    "ErrLoopVariableCannotBeMapped": "The loop variable cannot receive at the inlet the output variable value",
    "ErrMappedVariableDuplicate": "Thelinked variables list contains duplicate references to \"%s\" variable",
    "ErrMappedVariableTypesMismatch": "\"%s\" and \"%s\" types of linked variables mismatch",
    "ErrNoConditionVariable": "No variable to check the loop termination condition",
    "ErrParallelProcessingError": "Error occurred while parallel loop processing",
    "ErrParallelProcessingNotSupportedInRepeatLoop": "Posttested loop does not support parallel processing",
    "ErrSocketIsNotInputDataSourceSocket": "\"%s\" socket is not input socket containing data set",
    "ErrSocketNotConfigured": "Socket not configured",
    "ErrUnsupportedInputSocketType": "Unsupported \"%s\" socket type",
    "IterationCaption": "Iteration â„–%d",
    "IterationConfiguration": "Saved configuration",
    "IterationConfigurationCount": "Configuration count",
    "IterationConfigurationItem": "Configuration collection item",
    "IterationErrorDetailsFieldDisplayName": "Detailed error information",
    "IterationErrorMessageFieldDisplayName": "Error message",
    "IterationIdentifierDataType": "Configuration ID data type",
    "IterationIdentifiers": "Identifier values",
    "IterationIdFieldDisplayName": "Iteration identifier",
    "IterationIndex": "Iteration index",
    "IterationStatusSocketName": "Iterations execution status",
    "IterationSuccessFlagFieldDisplayName": "Success flag field",
    "ProcessActivate": "Activating \"%s\" node",
    "ProcessAppendDataSet": "Append output data set",
    "ProcessGroupProcessing": "Group processing",
    "ProcessInputDataSourceGrouping": "Defining groups in the source data set",
    "WarningTeachCriticalIterationCount": "Node training started with %d iterations count. Training with many iterations can cause memory overflow error."
  },
  "components/loop/LoopComponentVendor": {
    "VendorCaption": "Loop",
    "VendorDesc": "Multiple model execution based on new data"
  },
  "components/neuralnet/ClassificationReport": {
    "ErrActualPredictedSizeMismatch": "Actual and predicted array sizes mismatch"
  },
  "components/neuralnet/NeuralNet": {
    "AutofitProcessCaption": "Neural Network Parameters Selection",
    "CalcModelErrorsProcessCaption": "Calculation of quality indicators",
    "CVPassProcessCaption": "%d iteration",
    "CVProcessCaption": "Cross Validation",
    "DecayDegree": "Decay degree",
    "ErrCannotContinueTraining": "You cannot continue training since the structure of the trained neural network does not correspond to the new training parameters",
    "ErrClassifierUnknownClass": "Unknown class is present in the output classifier column",
    "ErrInvalidNeuronKind": "Invalid neuron kind: %d",
    "ErrMissingOrInfiniteValue": "Only non-empty final values are allowed in the data",
    "ErrNetworkUntrained": "You cannot perform the requested operation using the untrained neural network",
    "ErrNoInputColumns": "Neural network input data columns not set",
    "ErrNoOutputColumns": "Neural network output data columns not set",
    "ErrNoTrainData": "No train data",
    "ErrNoValidCasesSpecifiedForTraining": "No valid examples in the training set",
    "ErrTrainNetworkError": "Neural network training failed",
    "FitDecayProcessCaption": "Training: Regularization Degree = %.1f",
    "FitH0DecayProcessCaption": "Training: without Hidden Layers; Regularization Degree = %.1f",
    "FitH0ProcessCaption": "Training: without Hidden Layers",
    "FitH1DecayProcessCaption": "Training: One Hidden Layer = %d Neurons; Regularization Degree = %.1f",
    "FitH1ProcessCaption": "Training: one hidden = %d layer of neurons",
    "FitH2DecayProcessCaption": "Training: First Hidden Layyer = %d Neurons; Second Hidden Layer = %d Neurons; Regularization Degree = %.1f",
    "FitH2ProcessCaption": "Training: First Hidden Layyer = %d Neurons; Second Hidden Layer = %d Neurons",
    "HLSize": "The number of neurons in the hidden layers (same)",
    "Nh1": "The number of neurons in the first hidden layer",
    "Nh2": "The number of neurons in the second hidden layer",
    "NHL": "Number of hidden layers",
    "PrepareProcessCaption": "Prepare Data",
    "TestSetProcessCaption": "Test Set Process",
    "TrainProcessCaption": "Neural Network Training",
    "ValidationSetProcessCaption": "Validation Set Process"
  },
  "components/neuralnet/NeuralNetEngine": {
    "ActualClsIDColumn": "Class ID|Fact",
    "CVAvgCE": "Average cross-entropy in cross validation",
    "CVAvgError": "Average absolute error in cross validation",
    "CVAvgRelError": "Average relative error in cross validation",
    "CVClsErrorPercentage": "Cross validation error percentage",
    "CVRMSError": "Root-mean-square error in cross validation",
    "ErrInvalidClassifierResult": "Invalid classification result in %d row",
    "ErrInvalidFieldsSettings": "Invalid input set field settings",
    "ErrMultipleOutputs": "Only one output data field allowed",
    "ErrNetworkUntrained": "Neural network is untrained",
    "ErrNoInputFields": "No input data fields specified",
    "ErrTeachNoOutputFields": "No output data fields specified In the training mode",
    "ErrUnbalancedEndUpdateNeuralNetParameters": "Call of EndUpdateNeuralNetParameters without corresponding BeginUpdateNeuralNetParameters",
    "ErrWrongModelInput": "Input columns do not match previously trained model",
    "ErrWrongModelOutput": "Output column does not match previously trained model",
    "GiniIndexColumn": "Gini index",
    "GTest_Multiple": "%s|%s|G-test",
    "GTest_Single": "%s|G-test",
    "GTestDF_Multiple": "%s|%s|Number of G-test degrees of freedom",
    "GTestDF_Single": "%s|Number of G-test degrees of freedom",
    "GTestPValue_Multiple": "%s|%s|P-value of G-test",
    "GTestPValue_Single": "%s|P-value of G-test",
    "MutualInf_Multiple": "%s|%s|Mutual information",
    "MutualInf_Single": "%s|Mutual information",
    "NeuralNetOutputDataSet": "Neural network output",
    "NeuralNetOutputVariables": "Summary",
    "PredictedClsIDColumn": "Class ID|Prediction",
    "PredictedClsProbColumn": "Posterior probability",
    "PredictedColumn": "%s|Prediction",
    "TestAvgCE": "Average cross-entropy in the test set",
    "TestAvgError": "The test set average absolute error",
    "TestAvgRelError": "The test set average relative error",
    "TestClsErrorPercentage": "Percentage of classification errors in the test set",
    "TestRMSError": "Root-mean-square error in the test set",
    "TestSamples": "Samples in the test set",
    "TotalSamples": "Total samples",
    "TotalSelectedSamples": "Total selected samples",
    "TrainAvgCE": "Average cross-entropy in the training set",
    "TrainAvgError": "The training set average absolute error",
    "TrainAvgRelError": "The training set average relative error",
    "TrainClsErrorPercentage": "Percentage of classification errors in the training set",
    "TrainRMSError": "The training set root-mean-square error",
    "TrainSamples": "Samples in the training set"
  },
  "components/neuralnet/NeuralNetParams": {
    "Decay": "Regularization parameter",
    "MaxEpochs": "The maximum number of epochs",
    "NRestarts": "Number of restarts"
  },
  "components/neuralnet/NeuralNetVendor": {
    "ClassifierVendorCaption": "Neural Network (Classification)",
    "RegressionVendorCaption": "Neural Network (Regression)"
  },
  "components/partition/PartitionEngine": {
    "OutDataSetCommon": "Common data set",
    "OutDataSetTeach": "Train output set",
    "OutDataSetTest": "Test output set",
    "PartitionDisplayName": "Test set"
  },
  "components/partition/PartitionVendor": {
    "VendorCaption": "Partition into Sets",
    "VendorDesc": "Formation of test and training sets"
  },
  "components/quality/Quality": {
    "ErrOutDataSetIndexOutOfRange": "The output set index %d is out of [%d; %d] range",
    "GenerationOutputSets": "Output sets generation",
    "OutData": "Output set",
    "OutDataExtr": "Extremes",
    "OutDataNull": "Null data",
    "OutDataOut": "Outliers",
    "PaymentAdditionalFeatures": "Calculation of the additional features",
    "ScanningInputData": "Input data scanning",
    "SummaryTable": "Summary table"
  },
  "components/quality/QualityCommon": {
    "ErrUnhandledDataType": "Unhandled data type",
    "NullStrValue": "Unspecified"
  },
  "components/quality/QualityVendor": {
    "VendorCaption": "Data Quality",
    "VendorDesc": "Data quality assessment"
  },
  "components/reformcolumns/ReformColumnsVendor": {
    "VendorCaption": "Field parameters",
    "VendorDesc": "Change field parameters"
  },
  "components/replace/ReplaceColumns": {
    "ErrSourceGuidNotFound": "No input replacement table with GUID = %s",
    "InputReplaceDataSource": "Substitution table",
    "PrecisionPostfix": "Deviation",
    "ReplacedPostfix": " Replaced",
    "ReplacePostfix": "Replace"
  },
  "components/replace/ReplaceColumnsVendor": {
    "VendorCaption": "Replace",
    "VendorDesc": "Replace field values"
  },
  "components/replace/ReplaceTable": {
    "ErrDuplicateValue": "Value is duplicated in the replacement table",
    "ErrInputDataType": "Error getting input data type for \"%s\"",
    "ErrRegExValue": "Invalid regular expression specified",
    "ErrTypeCast": "Error converting value type in the replacement table for \"%s\"",
    "ErrUsageType": "No fields in the input replacement table specified"
  },
  "components/replacevariables/ReplaceVariables": {
    "ReplacePostfix": "Replace"
  },
  "components/replacevariables/ReplaceVariablesVendor": {
    "VendorCaption": "Replace (Variables)",
    "VendorDesc": "Replace variable values"
  },
  "components/restclient/RESTClient": {
    "ErrorCodeColumn": "Completion code",
    "ErrorDescColumn": "Error description",
    "OutputDataSet": "REST service response",
    "RequestIDOutputColumn": "Request identifier",
    "ResponseColumn": "Server response",
    "RESTClientConnection": "Connect to REST service",
    "RESTClientErrorNoID": "Error executing request:\n%s",
    "RESTClientErrorRowID": "Error occurred while request executing generated from row No %d of the input set:\n%s"
  },
  "components/restclient/RESTClientVendor": {
    "VendorCaption": "REST Service Call",
    "VendorDesc": "Request execution through REST service connection"
  },
  "components/sampling/SamplingVendor": {
    "VendorCaption": "Sampling",
    "VendorDesc": "Formation of representative subset"
  },
  "components/search/Search": {
    "ErrDataSourceIsNil": "Link to data source not initialized",
    "ErrDataSourceNotActive": "Failed to start search. No data source connected",
    "ErrNoDataSource": "Failed to start search. No data source",
    "ErrNotFound": "%s = \"%s\" string not found",
    "ErrZeroCount": "Failed to start search, no records"
  },
  "components/search/TreeViewSearch": {
    "NodeCaption": "Description",
    "NodeDisplayName": "Node caption",
    "NodeIndex": "Node index",
    "NodeName": "Node name"
  },
  "components/slidingwindow/SlidingWindowVendor": {
    "VendorCaption": "Lag",
    "VendorDescription": "Transpose one or several data columns using lag"
  },
  "components/smoothing/DWT": {
    "ErrLargeOrder": "This wavelet order is not supported"
  },
  "components/smoothing/SmoothingEngine": {
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrSmoothingAlgorithmError": "Error in the smoothing algorithm",
    "ErrSmoothingLambdaIsNegative": "Lambda parameter set to negative",
    "ErrSmoothingPeriodLessThenTwo": "The smoothing period cannot be less than two",
    "SmoothingDisplayNamePostfix": "_smoothed",
    "SmoothingNotify": "Smoothing"
  },
  "components/smoothing/SmoothingVendor": {
    "VendorCaption": "Smoothing",
    "VendorDesc": "Data smoothing with wavelets"
  },
  "components/sonn/SONNEngine": {
    "ColumnNameCluster": "Cluster number",
    "ColumnNameDistance": "Distance to node",
    "ColumnNameNode": "Node number",
    "ColumnNameUniqueCoordSuffix": "|Coordinate",
    "ColumnNameUniqueValueSuffix": "|Value",
    "ErrClustersRowCountOverflow": "Row count overflow of the \"Cluster Centers\" output data set",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoModel": "Model is not configured. It is required to train the node before its application",
    "ErrSONNIncorrectSize": "Incorrect network size for %s: %d",
    "ErrSONNTypeNotSupported": "\"%s\" type of self-organizing network not supported",
    "ErrWrongModel": "Model does not match the input data",
    "OutDataSetCenters": "Coordinates of nodes",
    "OutDataSetClusters": "Clustering",
    "PrepareDataNotify": "Prepare data",
    "SONNTrainNotify": "Network training"
  },
  "components/sonn/SONNVendor": {
    "VendorCaption": "Self-Organizing Networks",
    "VendorDesc": "Data clustering by self-organizing neural networks"
  },
  "components/sorting/SortingEngine": {
    "SortingNotify": "Sort"
  },
  "components/sorting/SortingVendor": {
    "VendorCaption": "Sort",
    "VendorDesc": "Data sorting"
  },
  "components/ungroupdata/UngroupData": {
    "ConfidenceBandLowerDisplayName": "Lower bound 95% CI",
    "ConfidenceBandUpperDisplayName": "Upper bound 95% CI",
    "ErrInSelectQuotaCalcFields": "No field for quotas calculation selected",
    "ErrInSelectQuotaFields": "No field with quotas selected",
    "ErrInSelectTimeAxisFields": "No fields for data sequentializing selected",
    "ErrInSelectUngroupField": "Ungroupable values field not defined",
    "ErrNoLinksDefined": "No links defined for group identifiers",
    "ErrNoLinksFields": "No related fields to build AVL tree",
    "ErrPostProcessingTerminated": "Error in the algorithm ungrouping! The process has been terminated.",
    "GenerationOutputSets": "Output sets generation",
    "GroupColumnAVLTreeBuilding": "Group initial data",
    "OutputSIDisplayName": "Seasonal index value",
    "OutputTrendDisplayName": "Trend value",
    "OutputValueAlgorithmFixed": "Fixed (algorithm)",
    "OutputValueDisplayName": "Ungrouped value",
    "OutputValueExcluded": "Excluded",
    "OutputValueInvalid": "Error",
    "OutputValueUnfixed": "Ungrouped (unfixed)",
    "OutputValueUngrouped": "Ungrouped",
    "OutputValueUserFixed": "Fixed (user)",
    "OutputValueUserFixedNotConsistent": "Fixed (user, inconsistent)",
    "OutputVTDescDisplayName": "Value type",
    "OutputVTDisplayName": "Value type code",
    "QuotaAVLTreeBuilding": "Group reference data for quota calculation",
    "QuotaAVLTreeCalc": "Quota calculation",
    "RoundedUngroupValueDisplayNamePostfix": "Rounded",
    "SeasonalIndex": "Seasonal index",
    "SupportInputDataSource": "Data for quota calculation",
    "UngroupInputDataSource": "Ungrouped data",
    "UngroupOutputDataSource": "Ungroup output",
    "UngroupQualityDisplayName": "Ungrouping quality index",
    "UngroupStatsDataSource": "Model quality indicators and seasonal indexes"
  },
  "components/ungroupdata/UngroupDataAVLTrees": {
    "ErrNoError": "No errors",
    "ErrTrivialGroup": "The group consists of one element"
  },
  "components/ungroupdata/UngroupDataTimeseries": {
    "ErrWrongTimeseriesKeyDatatype": "Invalid time series key type"
  },
  "components/ungroupdata/UngroupDataTimeseriesModel": {
    "ErrDFNotConsistent": "Failed to provide the required number of degrees of freedom",
    "ErrEngineUnassigned": "Engine not installed for the ungroup model",
    "ErrOptimGradientVerificationFailed": "Analytical gradient verification failed",
    "ErrOptimIntegrityFailed": "The infinite value of the optimized function or its gradient was detected",
    "ErrUnknownTimeAxisDataType": "Unknown time field data type"
  },
  "components/ungroupdata/UngroupDataVendor": {
    "VendorCaption": "Ungroup",
    "VendorDesc": "Ungroup data"
  },
  "components/uniondata/UnionData": {
    "DisplayNamePrefix": "Union",
    "ErrNoActiveInputs": "No active inputs",
    "ErrRowCountExceedMaxValue": "Row count of the result set exceeded %d maximum value",
    "JoinedDataSource": "Joined table",
    "MainDataSource": "Main table"
  },
  "components/uniondata/UnionDataVendor": {
    "VendorCaption": "Union",
    "VendorDescription": "Union of several data sets"
  },
  "components/unionvariables/UnionVariables": {
    "ErrNoActiveInputs": "No active inputs",
    "InputJoinedVariables": "Added variables"
  },
  "components/unionvariables/UnionVariablesVendor": {
    "VendorCaption": "Union (Variables)",
    "VendorDesc": "Combine several sets of variables into one"
  },
  "components/variablestodata/VariablesToDataEngine": {
    "DisplayName": "Caption",
    "Name": "Name",
    "Value": "Value"
  },
  "components/variablestodata/VariablesToDataModelComponentEngine": {
    "InputVariables": "Input variables",
    "OutputDataSource": "Output data set"
  },
  "components/variablestodata/VariablesToDataVendor": {
    "VendorCaption": "Variables to Table",
    "VendorDesc": "Create data table from variables set"
  },
  "components/wsdlclient/WSDLClient": {
    "ErrorCodeColumn": "Completion code",
    "ErrorDescColumn": "Error description",
    "FaultNameOutputColumn": "Exception name",
    "FaultsDataSet": "Exceptions (WSDL fault)",
    "ImportIDOutputColumn": "Part identifier",
    "OutputDataSet": "Web service response",
    "RawOutputColumn": "Raw response",
    "RequestIDOutputColumn": "Request identifier",
    "WSDLClientConnection": "Connection to the web service",
    "WSDLClientErrorNoID": "Error executing request:\n%s"
  },
  "components/wsdlclient/WSDLClientBase": {
    "AdditionalDataSet": "Additional data",
    "ErrIncorrectWSDLClientRequestConfiguration": "Web service request configuration contains errors",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the handler settings!",
    "ErrMapInputNodeTypesMismatch": "The data type of %s column does not match the data type of %s tree node",
    "ErrNothingSelected": "No nodes selected for service response import",
    "ErrOperationNotSelected": "No WSDL operation selected for request execution",
    "ErrResponseNotConfigured": "Service response not configured",
    "RequestDataSource": "Request data source"
  },
  "components/wsdlclient/WSDLClientVendor": {
    "VendorCaption": "Web Service Call",
    "VendorDesc": "Request execution through connection to the WSDL described web service and conversion of the received response into a data set"
  },
  "Embedded/EmbeddedMain": {
    "ErrOpenURL": "Failed to go to the following address: %s",
    "UnknownException": "Unknown Exception"
  },
  "exports/database/DBExport": {
    "DeleteFromTableNotify": "Add records to table",
    "ErrColumnNotFound": "\"%s\" column not found in the data source",
    "ErrColumnTypesMismatch": "%s column type is not compatible with %s source column type",
    "ErrFieldForUpdateNotSelected": "No fields to update selected",
    "ErrTableNameNotSelected": "No table name selected",
    "ErrUnknownExportType": "Unknown export type",
    "GroupDataNotify": "Group data",
    "UpdateRecordsNotify": "Update existing table records"
  },
  "exports/database/DBExportVendor": {
    "VendorCaption": "Database",
    "VendorDesc": "Export to database through configured connection"
  },
  "exports/excelfile/ExportExcelFile": {
    "PropErrErrSheetName": "The excel sheet name cannot contain the following characters: ? * / [ ]",
    "PropErrNoSheetName": "No sheet name specified",
    "SaveExcelBookProcess": "Save to file"
  },
  "exports/excelfile/ExportExcelFileVendor": {
    "VendorCaption": "Excel File",
    "VendorDesc": "Export data to Excel file"
  },
  "exports/native/ExportNativeVendor": {
    "VendorCaption": "Loginom Data File",
    "VendorDesc": "Export data to Loginom Data file"
  },
  "exports/textfile/ExportTextFile": {
    "CalculateColumnSizeProcess": "Column width calculation"
  },
  "exports/textfile/ExportTextFileVendor": {
    "VendorCaption": "Text File",
    "VendorDesc": "Export data to text file"
  },
  "exports/xml/ExportXML": {
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the handler settings!",
    "ErrNoXSDInput": "There is no XSD schema at the component input",
    "ErrXMLExport": "Error exporting XML:\nâ€ƒError code: %d\nâ€ƒ%s",
    "ExportDataSetProcessCaption": "Data Set Export",
    "FileConnection": "Connect to file storage",
    "WriteXMLFileProcessCaption": "XML File Record"
  },
  "exports/xml/ExportXMLVendor": {
    "VendorCaption": "XML File",
    "VendorDesc": "Export data to XML file according to the specified XSD schema"
  },
  "imports/1cv8/1Cv8QueryImport": {
    "ErrInterpretValue": "Failed to convert value from request result to standard type",
    "FillDataSetProcess": "Fill data set",
    "NotConnected": "Not connected to infobase",
    "OpenResultSetProcess": "Open request",
    "PrepareFieldDefsProcess": "Execute request and get field list",
    "PreviewProcess": "Data preview"
  },
  "imports/1cv8/1Cv8QueryImportVendor": {
    "VendorCaption": "1C Request",
    "VendorDesc": "1C: Enterprise 8 - Request"
  },
  "imports/database/DBImport": {
    "ErrExecQuery": "Error in querying database.",
    "ErrNotConnectedToDatabase": "No connection with database",
    "ErrTableNotSpecified": "Database table not specified",
    "ExecQueryProcess": "Request execution",
    "ImportDataProcess": "Import data",
    "OpenTableProcess": "Open table",
    "PrepareFieldList": "Prepare field list",
    "PreviewProcess": "Data preview"
  },
  "imports/database/DBImportVendor": {
    "VendorCaption": "Database",
    "VendorDesc": "Import from database by configured connection"
  },
  "imports/excelfile/ExcelCustomPreview": {
    "ErrLoadSheetData": "Failed to get Excel worksheet data"
  },
  "imports/excelfile/ImportExcelFile": {
    "ErrBooleanTypeCast": "Failed to convert \"%s\" value in \"%s\" field to logical value.",
    "ErrColumnExcistFmt": "\"%s\" field already exists",
    "ErrColumnInvalidIdentFmt": "\"%s\" cannot be an identifier",
    "ErrExcelNotOpen": "Operation failed, Excel file not open",
    "ErrGetRealRange": "Excel file is not open. According to the current settings it is impossible to determine the range for data import",
    "ErrInvalidExplicitRange": "Invalid range",
    "ErrNoUsedRange": "Excel workbook error, incorrect sheet range",
    "ErrOpenExcelBook": "Failed to open %s Excel file",
    "ErrParseFmt": "Error occurred while parsing %d line: %s",
    "ErrPropInvalidNamedRange": "Invalid named range",
    "ErrPropInvalidSheetName": "The excel sheet name cannot contain the following characters: ? * / [ ]",
    "ErrPropNamedRange": "Named range not specified",
    "ErrPropNamedRangeNotFound": "\"%s\" named range not found in \"%s\" file",
    "ErrPropSheetName": "Excel sheet name not specified",
    "ErrPropSheetNumber": "Incorrect Excel worksheet index",
    "ErrSheet": "Failed to find Excel sheet",
    "ErrSuggestRange": "Excel file is not open. According to the current settings it is impossible to determine the column count for import",
    "ProcessCaptionOpenExcelFile": "Open %s file",
    "ProcessCaptionReadData": "Read Data"
  },
  "imports/excelfile/ImportExcelFileVendor": {
    "VendorCaption": "Excel File",
    "VendorDesc": "Import data from Excel file"
  },
  "imports/native/DDFCommonReader": {
    "ErrHeaderReadError": "Header reading error"
  },
  "imports/native/DDFStreamReader": {
    "BadNativeStringData": "Incorrect string data",
    "OutOfMaximumRows": "File contains too many rows"
  },
  "imports/native/DDFTupleCompatibilityReader": {
    "BadNativeStringData": "Incorrect string data",
    "BadNativeVariantData": "Incorrect Variant data type",
    "CanNotConvert": "Failed to convert data to 32-bit format"
  },
  "imports/native/DDFTupleOldRowCachedConverter": {
    "BadNativeStringData": "Incorrect string data",
    "UnknownOperation": "Unknown string converter operation"
  },
  "imports/native/DDFTupleOldRowConverter": {
    "BadNativeStringData": "Incorrect string data",
    "UnknownOperation": "Unknown string converter operation"
  },
  "imports/native/DDFTupleReader": {
    "BadNativeStringData": "Incorrect string data",
    "BadNativeVariantData": "Incorrect Variant data type",
    "DifferentMetaData": "Metadata does not comply with the previously declared metadata",
    "NegativeRowsCount": "Invalid %d rows count is specified in the file header",
    "OutOfMaximumRows": "File contains too many rows"
  },
  "imports/native/DDFTupleRowConverter": {
    "BadNativeStringData": "Incorrect string data",
    "BadVariantType": "Unsupported Variant variable type",
    "CanNotConvert": "Failed to convert data to 32-bit format",
    "UnknownOperation": "Unknown string converter operation",
    "VariantArrayNotSupported": "Unsupported arrays in Variant variables",
    "VariantByRefNotSupported": "Unsupported Variant byRef variables",
    "VariantTypeNotSupported": "Variant variables of this type are not supported"
  },
  "imports/native/ImportNative": {
    "ErrFileFormat": "Not Loginom Data file",
    "ErrSignature": "Signature mismatch",
    "ErrSystemUnsupported": "Decimal not supported",
    "ErrVersion": "Incorrect version",
    "WarnCompatibilityMode": "File was opened in compatibility mode"
  },
  "imports/native/ImportNativeVendor": {
    "VendorCaption": "Loginom Data File",
    "VendorDesc": "Import data from Loginom Data file"
  },
  "imports/textfile/ImportTextFile": {
    "ErrBooleanTypeCast": "Failed to convert \"%s\" value in \"%s\" column to logical value.",
    "ErrDateTimeTypeCast": "Failed to convert \"%s\" value in \"%s\" column to date/time.",
    "ErrFloatTypeCast": "Failed to convert \"%s\" value in \"%s\" column to real number.",
    "ErrIntegerTypeCast": "Failed to convert \"%s\" value in \"%s\" column to integer.",
    "ErrNoData": "Error parsing text file",
    "ErrParseFmt": "While parsing line %d error occurred: %s",
    "ErrUnsupportedCodePage": "%d codepage not supported",
    "ErrUsedColumnDefsNotSpecified": "Imported fields not specified",
    "PrimaryKeyDisplayName": "<Key0>"
  },
  "imports/textfile/ImportTextFileVendor": {
    "VendorCaption": "Text File",
    "VendorDesc": "Import data from text file"
  },
  "imports/xml/ImportXML": {
    "ErrFileNotSelected": "XML file for import not selected",
    "ErrImportNotConfigured": "Import tree not configured",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the handler settings!",
    "ErrNothingSelected": "No nodes selected for import",
    "ErrNoXSDInput": "There is no XSD schema at the component input",
    "ErrXMLImport": "Error importing XML:\nâ€ƒError code: %d\nâ€ƒ%s",
    "FileConnection": "Connect to file storage",
    "XSDConnection": "Connect to XSD schema source"
  },
  "imports/xml/ImportXMLVendor": {
    "VendorCaption": "XML File",
    "VendorDesc": "Import data from XML file according to the specified XSD schema"
  },
  "Libraries/1CConnection/1Cv8Connection": {
    "ErrConnectionString": "Error in connection string",
    "ErrTestConnection": "Connection test error"
  },
  "Libraries/1CConnection/1Cv8ConnectionVendor": {
    "1Cv8ConnectionVendorCaption": "1C:Enterprise 8",
    "1Cv8ConnectionVendorDesc": "Database - 1C: Enterprise 8"
  },
  "Libraries/bgdbrtl/DB": {
    "ComponentTip": "%s [%s]",
    "ErrConnectionString": "Empty connection string",
    "ErrPrepareQuery": "SQL preparation error:\n%s",
    "ErrTableNameNotSelect": "No table name selected",
    "ErrTestConnection": "Connection test error:\n%s"
  },
  "Libraries/bgdbrtl/UniDAC/AccessODBCUniDACDB": {
    "DatabaseTypeName": "MS Access (OLEDB)"
  },
  "Libraries/bgdbrtl/UniDAC/ExcelODBCUniDACDB": {
    "DatabaseTypeName": "MS Excel (ODBC) [UniDAC]"
  },
  "Libraries/bgdbrtl/UniDAC/MsSQLOleDbUniDACDB": {
    "DatabaseTypeName": "MS SQL (OLE DB)"
  },
  "Libraries/bgdbrtl/UniDAC/MyUniDACDB": {
    "DatabaseTypeName": "MySQL"
  },
  "Libraries/bgdbrtl/UniDAC/ODBCUniDACDB": {
    "DatabaseTypeName": "ODBC"
  },
  "Libraries/bgdbrtl/UniDAC/OracleUniDACDB": {
    "DatabaseTypeName": "Oracle"
  },
  "Libraries/bgdbrtl/UniDAC/SQLiteUniDACDB": {
    "ErrBlankConnectionString": "Empty connection string"
  },
  "Libraries/bgdbrtl/UniDAC/UniDACDB": {
    "Direct": "Do not use DBMS client",
    "ServerListInaccessible": "List of DBMS servers unavailable"
  },
  "Libraries/bgrtl/BigSet": {
    "ErrBitsIndex": "Bit index is out of range",
    "ErrSubSetPowerIsZerro": "Attempt to extract all subsets with the power less than 0 or more than the set power as such"
  },
  "Libraries/bgrtl/Classes": {
    "ErrItemAlreadyExist": "%s with \"%s\" name already exists",
    "ErrItemByNameNotFound": "%s with \"%s\" name not found",
    "ErrItemWithGuidAlreadyExist": "%s with identifier %s already exists",
    "ErrItemWithIDAlreadyExist": "%s with identifier %d already exists",
    "ErrVendorAlreadyRegistered": "\"%s\" vendor has already been registered",
    "GuidDesc": "Item Guid",
    "IDDesc": "Identifier",
    "Item": "Item",
    "ItemMetaDesc": "Item"
  },
  "Libraries/bgrtl/ClassObjectsLocator": {
    "ObjMetaDesc": "object"
  },
  "Libraries/bgrtl/ColumnDefs": {
    "ColumnMetaDesc": "Column"
  },
  "Libraries/bgrtl/ColumnInfoLinks": {
    "ErrLinkedColumnInfoNotFound": "\"%s\" named column not found"
  },
  "Libraries/bgrtl/ColumnsMultiLinks": {
    "Link": "Link"
  },
  "Libraries/bgrtl/Consts": {
    "bdtCurrent": "current date",
    "bdtData": "available data",
    "FirstLastDateFmt": "%s %s %s from %s",
    "fld0and5to20DayPeriodName": "days",
    "fld0and5to20MonthPeriodName": "months",
    "fld0and5to20QuarterPeriodName": "quarters",
    "fld0and5to20WeekPeriodName": "weeks",
    "fld0and5to20WrongPeriodName": "periods",
    "fld0and5to20YearPeriodName": "years",
    "fld2to4DayPeriodName": "day",
    "fld2to4MonthPeriodName": "month",
    "fld2to4QuarterPeriodName": "quarter",
    "fld2to4WeekPeriodName": "week",
    "fld2to4WrongPeriodName": "period",
    "fld2to4YearPeriodName": "year",
    "fldOneDayPeriodName": "Day",
    "fldOneMonthPeriodName": "month",
    "fldOneQuarterPeriodName": "quarter",
    "fldOneWeekPeriodName": "week",
    "fldOneWrongPeriodName": "period",
    "fldOneYearPeriodName": "year",
    "VersionSerialNumber": "Serial number"
  },
  "Libraries/bgrtl/DataSet": {
    "ColumnDefs": "Column descriptions",
    "ContainedStatisticsCompute": "Calculate statistics",
    "ErrColOutOfRange": "%d column number is out of [%d; %d] range",
    "ErrDataSourceNotConfigured": "Data set not configured",
    "ErrRowOutOfRange": "%d row number is out of [%d; %d] range",
    "Statistics": "Statistics"
  },
  "Libraries/bgrtl/DataSetColumns": {
    "ErrDataSoureNotAssigned": "No data set reference"
  },
  "Libraries/bgrtl/DerivedDataSet": {
    "ErrColumnTypesMismatch": "%s column type is not compatible with %s source column type",
    "ErrSourceColumnNotFound": "Failed to find source %s column for output %s column"
  },
  "Libraries/bgrtl/EnumTypInfo": {
    "ErrEnumNotRegistered": "\"%s\" enumeration not registered"
  },
  "Libraries/bgrtl/Exceptions": {
    "ErrUnknownInnerExceptionIsDisposed": "Internal unknown exception of %s type disposed",
    "ExceptionClassFmt": "EXCEPTION CLASS: %s",
    "InnerExceptionTitle": "INTERNAL EXCEPTIONS:",
    "MessageFmt": "MESSAGE: %s",
    "SenderNameFmt": "SENDER: %s",
    "StackTraceFmt": "STACK TRACE:\n%s"
  },
  "Libraries/bgrtl/ExceptUtils": {
    "ErrAbstract": "Abstract method calling %s ",
    "ErrAbstractMethod": "Abstract method calling %s.%s",
    "ErrInvalidIndex": "%d index value of \"%s\" parameter is out of [%d; %d] range",
    "ErrOutOfRange": "%g value of \"%s\" parameter is out of [%g; %g] range",
    "ErrOutOfRangeInt": "%d value of \"%s\" parameter is out of [%d; %d] range"
  },
  "Libraries/bgrtl/ExportHTMLTable": {
    "ExcelSheetDefaultName": "Sheet1"
  },
  "Libraries/bgrtl/Extensions": {
    "ErrBaseExtensionMultipleFound": "There are several extensions for %s base identifier",
    "ErrBaseExtensionNotFound": "No extension for %s base identifier found",
    "ErrDeleteExtension": "You cannot delete extension with %d index ",
    "ErrExtensionAlreadyExists": "\"%s\" extension already exists",
    "ErrExtensionAlreadyInitialized": "Extension already initialized",
    "ErrExtensionsInstanceDestroyForbidden": "Explicit deletion of the extension list instance is prohibited",
    "ErrNotSupportedExtensionVendor": "%s extension not supported",
    "Extension": "Extension",
    "ExtensionVendorMetaDesc": "extension vendor",
    "ExtLoadErrConfigNotFound": "%s extension not loaded as configuration not found",
    "ExtLoadErrVendorNotFound": "Extension not loaded as %s extension vendor not found",
    "Guid": "Extension vendor Guid",
    "Item": "Item",
    "SynchronizeExtensionsQuery": "The following configured extensions differ from the original ones:\n%s.\n\nDo you want to sync all extensions?"
  },
  "Libraries/bgrtl/ExtensionsStd": {
    "DisplayFormatExtensionCaption": "Display Format"
  },
  "Libraries/bgrtl/FileMask": {
    "ACCDBFilesDesc": "MS Access 2007 Database",
    "AllExcelFilesDesc": "Excel files",
    "AllFilesDesc": "All files",
    "AllSQLiteFilesDesc": "SQLite database",
    "BMPFilesDesc": "Bitmaps",
    "DbfFilesDesc": "dBase files",
    "DdfFilesDesc": "DDF file",
    "DocFilesDesc": "MS Word documents",
    "EMFFilesDesc": "Extended metafile",
    "FdbFilesDesc": "Firebird database",
    "GdbFdbFilesDesc": "IB\\FB database",
    "GdbFilesDesc": "InterBase database",
    "GIFFilesDesc": "GIF format",
    "HlpFilesDesc": "Help file",
    "HtmFilesDesc": "Webpages",
    "ICOFilesDesc": "Icon",
    "JPGFilesDesc": "JPEG format",
    "LgdFilesDesc": "Loginom Data file",
    "LogFilesDesc": "Registration log files",
    "MdbFilesDesc": "MS Access database",
    "MhtFilesDesc": "Web archive, one file",
    "ODSFilesDesc": "OpenDocument spreadsheet",
    "PDFFilesDesc": "PDF documents",
    "RtfFilesDesc": "Files in RTF format",
    "SELFilesDesc": "Request files",
    "SHPFilesDesc": "Shape format",
    "SQBFilesDesc": "Query designer files",
    "SQLFilesDesc": "SQL files",
    "SupportedExcelFilesDesc": "Excel files",
    "SupportedLgdFilesDesc": "Loginom Data files",
    "SysFilesDesc": "Configuration files",
    "TxtFilesDesc": "Text files",
    "WMFFilesDesc": "Metafile",
    "WSDLFilesDesc": "Web service description files",
    "XlsbFilesDesc": "Excel 2007 binary workbook",
    "XlsFilesDesc": "MS Excel files",
    "XlsmFilesDesc": "Excel 2007 binary macro-enabled workbook",
    "XlsxFilesDesc": "Excel 2007 workbook",
    "XMLFilesDesc": "XML files",
    "XSDFilesDesc": "XML schema files",
    "XslXsltFilesDesc": "XML transformation file"
  },
  "Libraries/bgrtl/FileStorageEngine": {
    "ErrCreateDirectory": "Failed to create directory: %s",
    "ErrCreateFile": "Failed to create file: %s",
    "ErrDirectoryAlreadyMounted": "Directory with %s name is already mounted",
    "ErrDirectoryNotExist": "\"%s\" directory does not exist",
    "ErrFileAccess": "Error accessing file: %s",
    "ErrFileStorageNotConnected": "File storage not connected",
    "ErrInvalidBackupFileName": "Invalid backup file name: %s",
    "ErrInvalidCurrentDirectory": "Invalid current directory: %s",
    "ErrInvalidMountedDirectoryName": "Invalid mounted directory name: %s",
    "ErrNoMountedDirectories": "No directories mounted",
    "ErrOpenFile": "Failed to open file: %s",
    "ErrParentFileStorageNotConnected": "Root file storage not connected",
    "ErrTestConnection": "Connection test error:\n%s"
  },
  "Libraries/bgrtl/FormatHook": {
    "Args": "Parameters",
    "ErrFormat": "Format error",
    "Format": "Format",
    "Message": "Error"
  },
  "Libraries/bgrtl/HTML": {
    "ExcelSheetDefaultName": "Sheet1"
  },
  "Libraries/bgrtl/OperationBracketsAssist": {
    "ErrActionAlreadyBeginning": "Action has already been started",
    "ErrActionNotBeginning": "Action hasn't been started"
  },
  "Libraries/bgrtl/Random": {
    "ErrMSequenceCountOutOfBounds": "The required M-sequence length must be more than 0"
  },
  "Libraries/bgrtl/SparseArray": {
    "ErrItemNotExist": "Item with %d index does not exist"
  },
  "Libraries/bgrtl/StatisticConstraintsVariableExtension": {
    "StatisticConstraintsVariableExtensionCaption": "Statistic Constraints"
  },
  "Libraries/bgrtl/Statistics": {
    "ComputeStatistics": "Calculate statistics",
    "ErrDataSourceNotAssigned": "No data set reference"
  },
  "Libraries/bgrtl/StatUniqueValues": {
    "ErrNotImplemented": "This functionality not implemented"
  },
  "Libraries/bgrtl/StrUtils": {
    "ErrCodePageNotExist": "Codepage under %d does not exist"
  },
  "Libraries/bgrtl/System": {
    "ErrInvalidGUID": "Failed to convert \"%s\" row to GUID"
  },
  "Libraries/bgrtl/TimeZones": {
    "ErrCantOpenKey": "Error attempting to read %s registry key: %s (%d error code)"
  },
  "Libraries/bgrtl/Trees": {
    "NodeIndexDesc": "Node index",
    "NodeMetaDesc": "Node",
    "RootDesc": "Root node",
    "RootDisplayName": "Root",
    "SubNodesDesc": "Subnodes"
  },
  "Libraries/bgrtl/Tuple": {
    "BadNativeData": "Incorrect data",
    "BadNativeStringData": "Incorrect string data",
    "BadVariantType": "Incorrect format of Variant variable",
    "VariantArrayNotSupported": "Unsupported arrays in Variant variables",
    "VariantByRefNotSupported": "Unsupported Variant byRef variables",
    "VariantTypeNotSupported": "Variant variables of this type are not supported"
  },
  "Libraries/bgrtl/TupleStrUtils": {
    "BadNativeStringData": "Incorrect string data"
  },
  "Libraries/bgrtl/TupleVarUtils": {
    "BadNativeArrayStringData": "Incorrect Variant array string data",
    "BadVariantData": "Incorrect Variant data type",
    "CanNotConvert": "Failed to convert data to 32-bit format"
  },
  "Libraries/bgrtl/TypedLists": {
    "Item": "Item"
  },
  "Libraries/bgrtl/UniqueValuesData": {
    "Data": "Data",
    "UniqueValuesDataAlreadyInitialized": "Unique value data has already been initialized"
  },
  "Libraries/bgrtl/Utils": {
    "ErrDataSourceIsNil": "No reference to %sdata source",
    "ErrDataSourceNotActive": "%s data source is not active"
  },
  "Libraries/bgrtl/VariableDefs": {
    "VariableMetaDesc": "Variable"
  },
  "Libraries/bgrtl/Variables": {
    "ErrVariablesNotActive": "Variables not active",
    "ErrVariablesNotConfigured": "Variables not configured",
    "ErrVariablesNotEditing": "Variables not editable",
    "VariableElements": "Variables list"
  },
  "Libraries/bgrtl/Vendors": {
    "VendorGroupMetaDesc": "vendor group",
    "VendorMetaDesc": "vendor"
  },
  "Libraries/bgrtl/ZipArchive": {
    "ErrWrongPassword": "Wrong password"
  },
  "Libraries/Config/Config": {
    "ErrUnsupportedPropertyType": "Unsupported property type",
    "ErrVectorLengthOverflow": "%d array length exceeds the allowable %d limit",
    "ErrWrongElementsClass": "Invalid configuration node list class"
  },
  "Libraries/Config/ConfigBackupManagers": {
    "AddConnectionCaption": "\"%s\" Connection Added",
    "AddConnectionCaptionDef": "Connection Added",
    "AddLinkCaption": "\"%s.%s\" - \"%s.%s\" Link Added",
    "AddLinkCaptionDef": "Link Added",
    "AddNodeCaption": " \"%s\" Node Added",
    "AddNodeCaptionDef": "Node Added",
    "AddVendorCaption": "\"%s\" Component Added",
    "AddVendorCaptionDef": "Component Added",
    "AddViewCaption": "\"%s\" Visualizer Added",
    "AddViewCaptionDef": "Visualizer Added",
    "ConfigureNodeCaption": "Configured \"%s\" Node",
    "ConfigureNodeCaptionDef": "Node Configured",
    "ConfigureNodePortCaption": "Configured \"%s\" port of \"%s\" node",
    "ConfigureNodePortCaptionDef": "Node Port Configured",
    "DeleteConnectionCaptionDef": "Delete Connection",
    "DeleteLinkCaption": "\"%s.%s\" - \"%s.%s\" Link Deleted",
    "DeleteLinkCaptionDef": "Delete Link",
    "DeleteNodeCaption": "\"%s\" Node Deleted",
    "DeleteNodeCaptionDef": "Node Deleted",
    "DeleteVendorCaption": "\"%s\" Component Deleted",
    "DeleteVendorCaptionDef": "Component Deleted",
    "DeleteViewCaption": "\"%s\" Visualizer Deleted",
    "DeleteViewCaptionDef": "Visualizer Deleted",
    "ErrGenericViewsNotLoaded": "Failed to load visualizers of \"%s\" supernode",
    "ErrGenericViewsNotSaved": "Failed to save visualizers of \"%s\" supernode",
    "ErrModelNodeNotRestored": "Failed to restore \"%s\" node",
    "ErrNodeBlocked": "\"%s\" node is blocked",
    "ErrNodeIsNil": "No node specified"
  },
  "Libraries/Config/ConfigScheme": {
    "ValueDesc": "Value"
  },
  "Libraries/DataPartition/LearnPartition": {
    "ErrNotReadyYet": "Partition method not implemented"
  },
  "Libraries/DataPartition/Partition": {
    "AVLTreeBuilding": "Group data",
    "BiasedSamplingDesc": "Biased sampling",
    "ErrPartitionMethod": "No sampling method specified",
    "ErrSamplingRecordCount": "The selected %d row count is out of [%d; %d] range",
    "ErrSamplingRecordPercent": "The selected %d row percentage is out of [%d; %d] range",
    "RandomSamplingDesc": "Random sampling",
    "RandomUniformSamplingDesc": "Group sampling",
    "SequenceSamplingDesc": "Sequence sampling",
    "StratifiedSamplingDesc": "Stratified sampling",
    "TeachDataSet": "Training set formation",
    "TestDataSet": "Test set formation"
  },
  "Libraries/DataPartition/PartitionIndexGenerator": {
    "ErrExternalColumnNotReady": "No external partition column specified"
  },
  "Libraries/DataSampling/Sampling": {
    "AVLTreeBuilding": "Group data",
    "ErrInSelectFields": "No fields have been selected that define the stratum.",
    "ErrSamplingMethod": "No sampling method specified",
    "RandomSamplingDesc": "Random sampling",
    "RandomUniformSamplingDesc": "Group sampling",
    "SequenceSamplingDesc": "Sequence sampling",
    "StratifiedSamplingDesc": "Stratified sampling"
  },
  "Libraries/DataSampling/SamplingBuilder": {
    "SplitIntoIntervals": "Interquantile separation"
  },
  "Libraries/DBConnection/UniDAC/AccessODBCUniDACDBConnectionVendor": {
    "VendorCaption": "MS Access",
    "VendorDesc": "MS Access (ODBC) DBMS"
  },
  "Libraries/DBConnection/UniDAC/ExcelODBCUniDACDBConnectionVendor": {
    "VendorCaption": "MS Excel",
    "VendorDesc": "MS Excel File (ODBC)"
  },
  "Libraries/DBConnection/UniDAC/FBUniDACDBConnectionVendor": {
    "VendorCaption": "Firebird",
    "VendorDesc": "Firebird DBMS"
  },
  "Libraries/DBConnection/UniDAC/IBUniDACDBConnectionVendor": {
    "VendorCaption": "Interbase",
    "VendorDesc": "Interbase DBMS"
  },
  "Libraries/DBConnection/UniDAC/MsSQLOleDbUniDACDBConnectionVendor": {
    "VendorCaption": "MS SQL",
    "VendorDesc": "MS SQL (OLE DB) DBMS"
  },
  "Libraries/DBConnection/UniDAC/MyUniDACDBConnectionVendor": {
    "VendorCaption": "MySQL",
    "VendorDesc": "MySQL DBMS"
  },
  "Libraries/DBConnection/UniDAC/ODBCUniDACDBConnectionVendor": {
    "VendorCaption": "ODBC",
    "VendorDesc": "ODBC data access driver"
  },
  "Libraries/DBConnection/UniDAC/OracleUniDACDBConnectionVendor": {
    "VendorCaption": "Oracle",
    "VendorDesc": "Oracle DBMS"
  },
  "Libraries/DBConnection/UniDAC/PostgresUniDACDBConnectionVendor": {
    "VendorCaption": "PostgreSQL",
    "VendorDesc": "PostgreSQL DBMS"
  },
  "Libraries/DBConnection/UniDAC/SQLiteUniDACDBConnectionVendor": {
    "VendorCaption": "SQLite",
    "VendorDesc": "SQLite DB"
  },
  "Libraries/FileConnection/ExportFileModelComponentEngine": {
    "ErrFileNameEmpty": "File name cannot be empty"
  },
  "Libraries/FileConnection/FileConnectionVendor": {
    "FileConnectionVendorCaption": "Files",
    "FileConnectionVendorDesc": "Folder with files"
  },
  "Libraries/FileConnection/ImportFileModelComponentEngine": {
    "ErrFileNameEmpty": "File name cannot be empty",
    "ErrFileNotFound": "\"%s\" file not found"
  },
  "Libraries/Math/AutoCorrelation": {
    "ErrNullData": "Data contains null values"
  },
  "Libraries/Math/SparseSolvers": {
    "ErrWrongArrayType": "Unsupported array type: %s",
    "ErrWrongMatrixType": "Unsupported matrix type: %s"
  },
  "Libraries/Math/StatDistributions": {
    "ErrNotImplemented": "Functionality not implemented"
  },
  "Libraries/Math/StatUtils": {
    "ErrInvalidProbabilityValue": "%f probability value is out of [0;1] range",
    "ErrNotImplemented": "Functionality not implemented"
  },
  "Libraries/Model/Connections/ConnectionVendorGroups": {
    "DBConnectionVendorGroupCaption": "Data Sources"
  },
  "Libraries/Model/Connections/ConnectionVendorGroupsCommon": {
    "BusinessAppVendorGroupCaption": "Business Applications",
    "DatabaseVendorGroupCaption": "Databases",
    "FileDataBaseVendorGroupCaption": "File Databases",
    "UniDBIntfVendorGroupCaption": "Universal Drivers",
    "WareHouseVendorGroupCaption": "Data Warehouses",
    "WebServerVendorGroupCaption": "Web Services"
  },
  "Libraries/Model/Connections/ModelConnectionComponentEngine": {
    "Connection": "Connection"
  },
  "Libraries/Model/Connections/ModelConnectionWorkFlow": {
    "ErrNodeNotInitialized": "\"%s\" node not initialized",
    "ErrNoReferencedConnection": "\"%s\" node does not refer to any connections",
    "ReplaceReferenceWithDerivedCaption": "\"%s\" Connection Node Replaced by Derived Node"
  },
  "Libraries/Model/DataSet/DataSourceModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSource": "Output data set"
  },
  "Libraries/Model/DataSet/DataSourceMultiInputDataSetOutputModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSet": "Output data set"
  },
  "Libraries/Model/DataSet/DataSourceMultiInputModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSource": "Output data set"
  },
  "Libraries/Model/DataSet/DataSourceMultiOutputModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSource": "Output data set"
  },
  "Libraries/Model/DataSet/DataSourceOutputSocket": {
    "DataSource": "Data set"
  },
  "Libraries/Model/DataSet/DataSourceVariablesMultiInputDataSetOutputModelComponentEngine": {
    "InputVariables": "Input variables"
  },
  "Libraries/Model/DataSet/DataSourceVariablesMultiInputModelComponentEngine": {
    "InputVariables": "Input variables"
  },
  "Libraries/Model/DataSet/DataToVariablesModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputVariables": "Output variables"
  },
  "Libraries/Model/DataSet/ExportModelComponentEngine": {
    "InputConnection": "Connection",
    "InputDataSource": "Data source"
  },
  "Libraries/Model/DataSet/ImportModelComponentEngine": {
    "InputConnection": "Connection",
    "OutputDataSet": "Data set"
  },
  "Libraries/Model/DataSet/InputDataSourceSocketDef": {
    "InputDataSourceSocketDefVendorCaption": "Table"
  },
  "Libraries/Model/DataSet/OutputDataSourceSocketDef": {
    "OutputDataSourceSocketDefVendorCaption": "Table"
  },
  "Libraries/Model/DataSet/SocketFieldInfoLinks": {
    "ErrFieldInfoDoesNotBelongToComponent": "\"%s\" field does not belong to the current component"
  },
  "Libraries/Model/DerivedModelComponentVendor": {
    "BaseComponentVendorGuidDesc": "Base component GUID",
    "BaseNode": "Base node",
    "BaseNodeGuid": "Base node Guid",
    "Caption": "Name",
    "DerivedComponentVendorGuidDesc": "Derived component GUID",
    "Description": "Description",
    "ErrBaseComponentAlreadyExists": "Base component already exists",
    "ErrBaseComponentNotInitialized": "The node base component not initialized",
    "ErrBaseComponentVendorNotSpecified": "No vendor defined for the base node component",
    "ErrBaseNodeNotFound": "Base node not found",
    "ErrCircularInheritanceForbidden": "Circular inheritance of components forbidden",
    "ErrIncompatibleBaseComponentVendor": "Base and derived components are incompatible",
    "ErrParentVendorIsDeleted": "Base component deleted",
    "ErrParentVendorNotFound": "Base component not found",
    "IsSealedVendor": "Sealed",
    "ModelComponent": "Node component",
    "OriginalComponentVendorGuidDesc": "Original component GUID"
  },
  "Libraries/Model/DerivedModelUnitAspects": {
    "ErrCannotChangeDerivedSocketType": "You cannot change the derived sockets data type",
    "ErrCannotDeleteDerivedConnections": "You cannot delete derived connections",
    "ErrCannotDeleteDerivedSocket": "You cannot delete derived sockets",
    "ErrCannotDeleteDerivedVendors": "You cannot delete derived components"
  },
  "Libraries/Model/Generic/ModelInputComponentVendor": {
    "VendorCaption": "Input Node"
  },
  "Libraries/Model/Generic/ModelOutputComponentVendor": {
    "VendorCaption": "Output Node"
  },
  "Libraries/Model/ModelNodesCopyUtils": {
    "ErrCantRestoreReferenceNode": "Failed to restore link from \"%s\" node. \"%s\" reference node is not available at the required destination.",
    "ErrNodeNotConfigurable": "Failed to create the node copy with the following name: \"%s\" and GUID: %s",
    "ErrNoNodesSpecified": "No node set specified"
  },
  "Libraries/Model/ModelPackage": {
    "ErrPackageNameCannotBeEmpty": "Package name cannot be empty",
    "ModelUnitDisplayNameDefault": "Module"
  },
  "Libraries/Model/ModelPackageContext": {
    "ErrBasePackageNotFound": "Base package not found",
    "ErrExecNodeBaseComponentNotFound": "Base component for \"%s\" node not found"
  },
  "Libraries/Model/ModelPackageManager": {
    "ErrCannotOpenFile": "Failed to open \"%s\" file"
  },
  "Libraries/Model/ModelReports": {
    "CantAddGenericInputViewToReport": "Addition of supernode input node visualizers to Reports is not supported",
    "ModelReportGroup": "Report group"
  },
  "Libraries/Model/ModelSocketConstraintDefItems": {
    "SocketConstraintMetaDesc": "Socket constraint"
  },
  "Libraries/Model/ModelSocketConstraintItems": {
    "SocketConstraintMetaDesc": "Socket constraint"
  },
  "Libraries/Model/ModelSocketDefItems": {
    "SocketMetaDesc": "Socket"
  },
  "Libraries/Model/ModelSocketDefs": {
    "SocketDefAlreadyInitialized": "Socket description already initialized"
  },
  "Libraries/Model/ModelSocketInterfaceConstraintDef": {
    "ErrInterfaceNotSupported": "Input and output sockets are incompatible"
  },
  "Libraries/Model/ModelSocketItems": {
    "ErrItemBySocketNotFound": "Socket not found in the list",
    "SocketMetaDesc": "Socket"
  },
  "Libraries/Model/ModelSockets": {
    "ErrModelSocketAlreadyInitialized": "Socket already initialized",
    "ErrModelSocketNotConfigured": "Socket not configured"
  },
  "Libraries/Model/ModelUnit": {
    "CurrentModel": "Current module",
    "DeleteReferringVendorCaption": "Delete \"%s\" Derived Component ",
    "ErrAlienExcludedNode": "\"%s\" node does not belong to the current module",
    "LocalModelComponentVendorMetaDesc": "local component",
    "ModelComponentVendorMetaDesc": "component"
  },
  "Libraries/Model/ModelWorkFlow": {
    "ActivateModelNodeInputs": "Activate node inputs",
    "ActivateModelNodes": "Activate nodes",
    "AddInputSocketCaption": "\"%s\" input added to \"%s\" node",
    "ComponentOutputPort": "Component",
    "CopyNodeCaption": "\"%s\" Element Copied",
    "CopyNodesCaption": "Elements Copied",
    "DeleteElementsCaption": "Elements deleted",
    "DependentNodeOutputPort": "Dependent nodes",
    "ErrActivateModelNodes": "Error occurred while activating nodes",
    "ErrAllNodesLocked": "All workflow nodes locked",
    "ErrComponentNotInitialized": "Base component not initialized",
    "ErrNodeLocked": "\"%s\" node is blocked",
    "ErrNodeNotInitialized": "No component vendor specified for \"%s\" node",
    "ErrPortMismatch": "Incompatible component vendor: node port list does not match",
    "ErrSocketNotConfigured": "Socket not configured",
    "Top": "Top"
  },
  "Libraries/Model/ModelWorkflowSubModelComposer": {
    "WrnUnknownSocketDefVendorType": "Failed to define vendor type for %s interface with %s GUID"
  },
  "Libraries/Model/ReferenceNode/ReferenceNodeComponentEngine": {
    "ErrNodeLocked": "\"%s\" node is blocked",
    "ErrReferencedNodeNotAvailable": "Reference node not available",
    "ErrReferencedNodeNotFound": "Reference node not found",
    "ErrReferencedNodeNotSpecified": "No reference to node specified"
  },
  "Libraries/Model/ReferenceNode/ReferenceNodeComponentVendor": {
    "VendorCaption": "Reference Node",
    "VendorDesc": "Reference to node"
  },
  "Libraries/Model/Variables/ModelVariablesComponentVendor": {
    "VendorCaption": "Workflow Variables",
    "VendorDesc": "Configure variables used in the current workflow"
  },
  "Libraries/Model/Variables/OutputVariablesSocketDef": {
    "OutputVariablesSocketDefVendorCaption": "Variables"
  },
  "Libraries/Model/Variables/SocketVariableInfoLinks": {
    "ErrVariableInfoDoesNotBelongToComponent": "\"%s\" variable does not belong to the current component"
  },
  "Libraries/Model/Variables/SocketVariablesMultiLinks": {
    "ErrAlienLinkedVariable": "\"%s\" variable does not belong to any variable list being used",
    "ErrCannotLinkVariablesFromSameTable": "You cannot link \"%s\" and \"%s\" variables from the same table",
    "ErrLinkedVariableTypesMismatch": "\"%s\" and \"%s\" types of linked variables mismatch"
  },
  "Libraries/Model/Variables/VariablesModelComponentEngine": {
    "InputVariables": "Input variables",
    "OutputVariables": "Output variables"
  },
  "Libraries/Model/Variables/VariablesMultiInputModelComponentEngine": {
    "InputVariables": "Input variables",
    "OutputVariables": "Output variables"
  },
  "Libraries/Model/Variables/VariablesOutputSocket": {
    "Variables": "Variables"
  },
  "Libraries/Model/Views/ModelViewDataSource": {
    "InputDataSource": "Data set"
  },
  "Libraries/Model/Views/ModelViewDataSourceEngine": {
    "ErrNotDefinedInputDataSource": "No input data set defined"
  },
  "Libraries/Model/Views/ModelViewVendorGroupsCommon": {
    "DefaultVendorGroupCaption": "Common",
    "DiagramVendorGroupCaption": "Charts",
    "TableDataVendorGroupCaption": "Table View"
  },
  "Libraries/Model/WorkFlow": {
    "ErrCircularLink": "No circular links between nodes",
    "Links": "Links",
    "Node": "Node",
    "Nodes": "Nodes",
    "PortGuid": "Port Guid",
    "PortNodeGuid": "Node Guid",
    "UnknownNodeDisplayName": "Unknown node"
  },
  "Libraries/Normalization/DataSourceMultiOutputNormModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSource": "Output data set"
  },
  "Libraries/Normalization/NormalColumnsManager": {
    "ErrNotImplemented": "This functionality not implemented"
  },
  "Libraries/Normalization/NormalColumnsRange": {
    "ErrNotImplemented": "This functionality not implemented"
  },
  "Libraries/Normalization/NormalData": {
    "CalculateCacheProcessCaption": "Data Set Caching",
    "InterceptDisplayName": "Intercept"
  },
  "Libraries/Normalization/Normalizers": {
    "ErrNotImplemented": "This functionality not implemented",
    "ErrRefIdRequired": "The reference category used in the normalizer is not defined",
    "ErrWrongDiscreteIndexRange": "Prenormalized index: %d is out of allowable [%d ; %d] range",
    "VS": "Â to",
    "VS_MEAN": " to mean",
    "VS_MEAN_PREV": " to mean from previous",
    "VS_MEAN_SUBS": "to mean from subsequent"
  },
  "Libraries/Normalization/TunedNormParams": {
    "FACT_ANY": "ANY",
    "FACT_ANY_COUNTINUOUS": "ANY CONTINUOUS",
    "FACT_ANY_DISCRETE": "ANY DISCRETE",
    "FACT_ANY_OTHER_CONTINUOUS": "ANY OTHER CONTINUOUS",
    "FACT_ANY_OTHER_DISCRETE": "ANY OTHER DISCRETE",
    "FACT_OTHER": "ANY OTHER",
    "FACT_SAME": "SAME",
    "GenDisplayName": "Generated factor",
    "GenName": "Generated"
  },
  "Libraries/Normalization/TunedNormParamsProvider": {
    "ErrNotImplemented": "This functionality not implemented"
  },
  "Libraries/Normalization/TuneNormDataSource": {
    "CreateInDataProcessCaption": "Prepare input data set",
    "CreateOutDataProcessCaption": "Preparing output data set"
  },
  "Libraries/Normalization/TuneNormDataSourceSocketDef": {
    "ErrNotImplemented": "This functionality not implemented"
  },
  "Libraries/Optimization/Optimizer": {
    "ErrStepIsNull": "Another strategy step not specified"
  },
  "Libraries/PropManager/CommonPropBinder": {
    "ErrMainInterfaceIsNil": "Root element interface not set or removed"
  },
  "Libraries/Regression/DataSourceRegressionModelComponentEngine": {
    "ErrNoModel": "Model is not configured. It is required to train the node before its application",
    "ErrOutputColumnInvalid": "Invalid output column",
    "ErrOutputCount": "There must be exactly one output column",
    "ErrTrainingNotComplite": "Failed to train the node on the basis of the current training set",
    "ErrWrongInputUniqueCount": "The number of \"%s\"output column unique values is %d (2 or more required)",
    "ErrWrongModelInput": "Input columns do not match previously trained model",
    "ErrWrongModelOutput": "Output column does not match previously trained model",
    "RegressionModelCoefficients": "Regression model coefficients",
    "RegressionOutputDataSet": "Regression output",
    "RegressionOutputVariables": "Summary",
    "RegressionParams": "Regression parameters",
    "RegressionTrainingResults": "Training results"
  },
  "Libraries/RESTClientConnection/RESTClientConnection": {
    "ErrInvalidContentType": "Invalid Content-type value format: %s",
    "ErrInvalidParamName": "Invalid %s GET request parameter name"
  },
  "Libraries/rpc/RemoteMessageData": {
    "ErrUnknownInterfaceID": "Unknown interface identifier: %d",
    "ErrUnknownInterfaceName": "%s interface not registered",
    "ErrUnknownMethodID": "Unknown method identifier: %d",
    "ErrUnsupportedParameterType": "Unsupported parameter type"
  },
  "Libraries/SuperLU/SuperLU_h": {
    "ErrExceptionOccurred": "SuperLU exception in function '%s' when calling '%s'",
    "InputError": "Invalid parameter %d when calling '%s'",
    "UserAbort": "SuperLU call stopped with error: '%s'"
  },
  "Studio/Converters/Converter_201805281036_NeuralNet_SummarySocket": {
    "SummarySocketDisplayName": "Summary"
  },
  "Studio/DeductorServer": {
    "ErrModelNodeNotFound": "Node %s not found",
    "ErrModelNodeNotPublished": "Node %s published"
  },
  "Studio/Server/BatchLauncher/BatchLauncher": {
    "ExampleTitle": "Example:",
    "OptionAddressDesc": "IP address or hostname (default: %s)",
    "OptionNodeNameDesc": "Node name or GUID"
  },
  "Studio/SolutionTree": {
    "Vendors": "Components"
  },
  "Viewers/Browse/BrowseView": {
    "PrepareViewData": "Table"
  },
  "Viewers/Browse/BrowseViewExport": {
    "DisplayNameColumnDisplayName": "Caption",
    "Form": "Form",
    "NameColumnDisplayName": "Caption",
    "NullValue": "<null>",
    "RecNoColumnDisplayName": "No",
    "RecNoColumnName": "RecNo",
    "RowNoColumnDisplayName": "#",
    "RowNoColumnName": "RowNo",
    "Table": "Table"
  },
  "Viewers/Browse/BrowseViewVendor": {
    "VendorCaption": "Table",
    "VendorDesc": "Table data display"
  },
  "Viewers/Chart/ChartViewVendor": {
    "VendorCaption": "Chart",
    "VendorDesc": "Chart data display"
  },
  "Viewers/Chart/Server/ChartColumnInfo": {
    "ChartSortingProgress": "Data sorting"
  },
  "Viewers/CoarseClasses/CoarseClassesViewVendor": {
    "VendorCaption": "Coarse Classes",
    "VendorDesc": "\"Coarse classes\" visualizer"
  },
  "Viewers/Cube/CubeDetailing": {
    "ManagerStatistics": "Statistics"
  },
  "Viewers/Cube/CubeHeaders": {
    "CubeTotalValue": "Total:"
  },
  "Viewers/Cube/CubeSource": {
    "LoadNotify": "Prepare input data"
  },
  "Viewers/Cube/CubeSummaries": {
    "CountCaseDisplayName": "Count",
    "DefExprDisplayName": "Expression"
  },
  "Viewers/Cube/CubeViewVendor": {
    "VendorCaption": "Cube",
    "VendorDesc": "Multidimensional display (crosstab and cross chart)"
  },
  "Viewers/LinRegressReport/LinRegressReport": {
    "ConstFactor": "<Intercept0>"
  },
  "Viewers/LinRegressReport/LinRegressReportViewVendor": {
    "VendorCaption": "Regression Report",
    "VendorDesc": "Analysis of linear regression model"
  },
  "Viewers/LogRegressReport/LogRegressReport": {
    "ConstFactor": "<Intercept0>"
  },
  "Viewers/LogRegressReport/LogRegressReportViewVendor": {
    "VendorCaption": "Regression Report",
    "VendorDesc": "Analysis of logistic regression model"
  },
  "Viewers/ROC/ROCViewCharts": {
    "AllPrecisionRatesChartXLabel": "Cuttoff",
    "BreakEvenChartXLabel": "Cuttoff",
    "BreakEvenChartYLabel": "TPR, PPV",
    "Cutoff": "Cuttoff",
    "EventsChartTitle": "% captured response chart",
    "EventsChartXLabel": "Bin",
    "EventsChartYLabel": "Captured response, %",
    "EventsCumChartTitle": "% captured response chart (cumulative)",
    "EventsCumChartYLabel": "Captured response, %",
    "FNR": "FNR (1-Sensitivity)",
    "FPR": "FPR (1-Specificity)",
    "GainChartTitle": "Gain Chart",
    "GainChartYLabel": "Gain",
    "LiftChartTitle": "Lift Chart",
    "LiftChartXLabel": "Bin",
    "LiftChartYLabel": "Lift",
    "LiftCumChartYLabel": "Lift",
    "NPV": "NPV (Negative Prediction Value)",
    "OCR": "OCR (Overall Classification Rate)",
    "OverallRatesChartXLabel": "Cuttoff",
    "OverallRatesTitle": "Basic Rates"
  },
  "Viewers/ROC/ROCViewVendor": {
    "VendorCaption": "Binary Classification Quality",
    "VendorDesc": "Binary classification quality"
  },
  "Viewers/Statistics/StatView": {
    "HistogramBuild": "Build histogram",
    "LogColumnNotFoundFmt": "No %s field found in the input data set. The field has been deleted from the displayed fields.",
    "LogNewColumnFmt": "New %s field appeared in the input data set. The field has been added to the displayed fields.",
    "OrderStatisticsCalculation": "Ordinal statistics calculation",
    "PrepareViewData": "Statistics",
    "SimpleStatisticsCalculation": "Simple statistics calculation",
    "UniqueValuesCalculation": "Unique values calculation"
  },
  "Viewers/Statistics/StatViewBuilder": {
    "ErrNonContinuousDataKind": "The input column must have continuous  data type",
    "ErrRequiredColumnNotFound": "No column with the specified number in the input data source"
  },
  "Viewers/Statistics/StatViewCalculation": {
    "ErrInvalidHistBounds": "Invalid histogram interval bounds set",
    "ErrRequiredColumnNotFound": "No columns with the specified numbers in the input data source",
    "ErrRequiredSimpleStats": "It is required to calculate simple statistics"
  },
  "Viewers/Statistics/StatViewHistogram": {
    "DefaultSeparator": ": ",
    "From": "from",
    "LeftCloseBracket": "[",
    "RightCloseBracket": "]",
    "RightOpenBracket": ")",
    "To": "to"
  },
  "Viewers/Statistics/StatViewUniqueValues": {
    "ErrRequiredColumnNotFound": "No columns with the specified numbers in the input data source"
  },
  "Viewers/Statistics/StatViewVendor": {
    "VendorCaption": "Statistics",
    "VendorDesc": "Show statistical indicators"
  },
  "Warehouse2/DataWarehouseConnection": {
    "ErrTestConnection": "Connection test error:\n%s",
    "MDDatabase": "Metadata database"
  },
  "Warehouse2/DBMDEngine": {
    "ErrDimensionFKIsNull": "Link to \"%s\" dimension not found.\nThe foreign key value not specified.",
    "ErrNotFoundVersionInfo": "Failed to read version information about Deductor Warehouse version.\n%s"
  },
  "Warehouse2/Deductor/DDWConnectionVendor": {
    "DWConnectionVendorCaption": "Deductor Warehouse",
    "DWConnectionVendorDesc": "Connect to the Deductor Data Warehouse"
  },
  "Warehouse2/Deductor/DDWEngine": {
    "ErrError": "Error:",
    "MsgLoadDataDimension": "Loading the Dimension data into the Data Warehouse",
    "MsgLoadDataProcess": "Loading the Process data into the Data Warehouse",
    "MsgStatisticsGathering": "Statistics gathering"
  },
  "Warehouse2/Deductor/DDWImportVendor": {
    "VendorCaption": "Deductor Warehouse",
    "VendorDesc": "Retrieve data from a Deductor data warehouse"
  },
  "Warehouse2/Deductor/Ver6/FBDDWConnectionVendor": {
    "DWConnectionVendorDesc": "Connection to the Deductor Data Warehouse on Firebird DBMS"
  },
  "Warehouse2/Deductor/Ver6/MSSQLDDWConnectionVendor": {
    "DWConnectionVendorDesc": "Connection to the Deductor Data Warehouse on MS SQL DBMS"
  },
  "Warehouse2/Deductor/Ver6/OraDDWConnectionVendor": {
    "DWConnectionVendorCaption": "Deductor Warehouse [Oracle]",
    "DWConnectionVendorDesc": "Connection to the Deductor Data Warehouse on Oracle DBMS"
  },
  "Warehouse2/DWConnectionVendor": {
    "DWConnectionVendorCaption": "Data Warehouse",
    "DWConnectionVendorDesc": "Connect to data warehouse"
  },
  "Warehouse2/DWDataEngine": {
    "ErrExecSQL": "Error executing request to DB.\n%s"
  },
  "Warehouse2/DWExtract": {
    "DWObjectName": "Object",
    "DWObjectType": "Object type",
    "ErrDWObjectNameNotFound": "No \"%s\" data warehouse object  found.",
    "SelectionTree": "Tree of selected objects"
  },
  "Warehouse2/DWExtractTree": {
    "ErrNeedSelectItem": "Select at least one item",
    "ErrParams": "Error found in \"%s\" object parameters",
    "FilterParams": "Filter parameters",
    "FuncAggr": "Aggregation types",
    "ItemLatentFilter": "Latent filter element",
    "LatentFilter": "Latent filter",
    "ObjName": "Object name",
    "ObjType": "Object type",
    "Order": "Order number",
    "SelectedItem": "Object",
    "SubNodes": "Subnodes"
  },
  "Warehouse2/DWImport": {
    "ErrExecQuery": "Error executing request to Data Warehouse",
    "ErrNotConnectedToDatabase": "Not connected to Data Warehouse",
    "ErrObjectDWNotSpecified": "Data Warehouse object not specified",
    "ExecQueryProcess": "Execute request to Data Warehouse",
    "ImportDataProcess": "Data import from Data Warehouse"
  },
  "Warehouse2/MDChoiceTree": {
    "ErrDWObjectsNotFound": "No data warehouse objects with %s names found",
    "SelectedItems": "Selected items"
  },
  "Warehouse2/MDFilterParams": {
    "CustomPointDate": "Custom date",
    "ErrCustomPointDate": "Data value cannot be empty",
    "ErrFilterTypeIncorrect": "\"%s\" filter type incompatible",
    "ErrListEmpty": "List cannot be empty",
    "ErrStringEmpty": "Value cannot be empty",
    "FilterType": "Filter type",
    "IntervalType": "Interval type",
    "ListVal": "List of values",
    "MaxVal": "Max value",
    "MinVal": "Min value",
    "PointType": "Reference point type",
    "SkipIntervalCount": "Skipped interval count",
    "TheVal": "Value",
    "UseIntervalCount": "Used interval count"
  },
  "Warehouse2/MDTree": {
    "ErrColumnCantBeContinuous": "\"%s\" object of \"%s\" type cannot be continuous",
    "ErrMismatchVersionInfo": "Deductor Warehouse versions do not match.\n  Component: \"%s\" \n  BD DW: \"%s\"",
    "ErrNodeTypeExist": "Subnode of the specified \"%s\" type already exists"
  }
}