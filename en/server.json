{
  "Common/1Cv8/1Cv8Query": {
    "ErrEofArrived": "Data set end reached",
    "ErrQueryNotActive": "Query is not active"
  },
  "Common/1Cv8/1Cv8SessionManager": {
    "ErrEmptyConnectionString": "Empty connection string"
  },
  "Common/CalcFunctions/CalcFunctions": {
    "ErrCreateGuid": "System error creating GUID",
    "ErrGuidFormat": "Incorrect GUID format: %s ([\"N\", \"D\", \"B\", \"P\"] supported)"
  },
  "Common/CalcFunctions/FuncDesc": {
    "ErrFuncDescNotFound": "Description of \"%s\" function not found"
  },
  "Common/CalcFunctions/FunctionCollection": {
    "ErrDuplicateFunction": "%s named function has already been registered",
    "ErrEvenArgs": "%s function can accept only even number of arguments",
    "ErrInvalidFunctionName": "Invalid %s function name",
    "ErrNoFunc": "No reference to function",
    "ErrOddArgs": "%s function can accept only odd number of arguments",
    "ErrTooFewArgs": "Too few arguments were called to %s function (%d whereas %d is minimum value)",
    "ErrTooManyArgs": "Many arguments were called to %s function (%d whereas %d is maximum value)"
  },
  "Common/CertList/CertList": {
    "ErrCertListImplementationNotRegistered": "Certificate list implementation with %s identifier not registered",
    "ErrCertListImplementationsNotRegistered": "Certificate list implementation not registered"
  },
  "Common/CertList/CertList_Win": {
    "AddressBook": "Other users",
    "AuthRoot": "Third-Party Root Certification Authorities",
    "CA": "Intermediate Certification Authorities",
    "Disallowed": "Untrusted Certificates",
    "My": "Personal",
    "Root": "Trusted Root Certification Authorities",
    "SmartCardRoot": "Smart Card Trusted Roots",
    "Trust": "Enterprise Trust",
    "TrustedDevices": "Trusted Devices",
    "TrustedPeople": "Trusted People",
    "TrustedPublisher": "Trusted Publishers",
    "UserDS": "Active Directory user object"
  },
  "Common/CodeExec/CodeAPI": {
    "ArgColumn": "Column Index or name",
    "ArgRow": "Row index",
    "ArgValue": "Value",
    "ColumnCount": "Column count",
    "ColumnGet": "Get column cell value",
    "ColumnIsNull": "Check if the value is set in the column cell",
    "Columns": "Columns",
    "Count": "Count",
    "DataKind": "Data kind",
    "DataType": "Data type",
    "DefaultUsageType": "Default usage type",
    "DisplayName": "Caption",
    "Index": "Index",
    "InputTable": "Input data source",
    "InputTables": "Array of input data sources",
    "InputVariables": "Input variables",
    "Items": "Items",
    "Name": "Name",
    "OutputTable": "Output table",
    "RowCount": "Row count",
    "TableAppend": "Add row",
    "TableGet": "Get table cell value",
    "TableIsNull": "Check if the value is set in the table cell",
    "TableSet": "Set value to the added row cell",
    "Value": "Value"
  },
  "Common/CodeExec/CodeAPIDataSetExceptions": {
    "ColumnByNameNotFound": "\"%s\" named column not found",
    "ErrColOutOfRange": "Column number %d is out of [%d; %d] range",
    "ErrNoRowForEditing": "Failed to change value because there is no editable row",
    "ErrRowOutOfRange": "Row number %d is out of [%d; %d] range"
  },
  "Common/CodeExec/CodeAPIDataSetProxies": {
    "ErrInvalidDataSetColumnIndex": "The output table column index %d is out of [%d; %d] range",
    "ErrInvalidDataSetColumnName": "No \"%s\" column in the output table",
    "ErrInvalidDataSourceColumnIndex": "Index %d of input table column #%d is out of [%d; %d] range",
    "ErrInvalidDataSourceColumnName": "No \"%s\" column in input table #%d"
  },
  "Common/HTTP/CachedHttpStream": {
    "ErrCachedHttpStreamClassAlreadyAssigned": "Cached HTTP stream class already registered",
    "ErrCachedHttpStreamClassUnassigned": "Cached HTTP stream class not registered"
  },
  "Common/HTTP/CachedHttpStream_Win": {
    "ErrHttpResponseExRequired": "To create %s class instance support by IHTTPResponseEx interface HTTP client response is required",
    "ErrHttpResponseWriteDisallowed": "Writing to HTTP response stream disallowed",
    "ErrInconsistentContentLength": "Actual received data size %d inconsistent with Content-Length %d header value",
    "ErrReadStreamBufferLength": "The provided buffer size %d is too smal to read %d bytes"
  },
  "Common/HTTP/HTTPNetRequest": {
    "ErrHTTPNetRequest": "Request to \"%s\" URL failed"
  },
  "Common/WSDL/HTTPHeaders": {
    "ErrInvalidHeaderName": "Invalid %s header name"
  },
  "Common/WSDL/Processor/MIMECommon": {
    "ErrInvalidContentType": "Invalid Content-type value format: %s"
  },
  "Common/WSDL/Processor/MIMEExportImpl": {
    "ErrCantExportPart": "Failed to export MIME %s content as an alternative has already been exported",
    "ErrExportConflictingPart": "Attempt to export \"%s\" part of WSDL message conflicting with the previously exported data",
    "ErrValueIntExportImpossible": "Failed to export value %d to the message associated with \"%s\" schema element: %s"
  },
  "Common/WSDL/Processor/MIMEImportImpl": {
    "ErrCodePageNotSupported": "\"%s\" codepage not supported",
    "ErrUnbalancedPop": "Unbalanced Pop operation"
  },
  "Common/WSDL/Processor/WSDLHttpMessageEncoder": {
    "ErrColumnIndexOutOfRange": "HTTP messages encoder is configured to export the column with index #%d, however the data source contains only %d values",
    "ErrDuplicateSearchPattern": "\"%s\" search string occurring more than once",
    "ErrEncoderNotInitialized": "HTTP messages encoder not initialized",
    "ErrInfNaNNotAllowed": "Infinities and NaN are not valid floating point numbers to be passed in GET/POST requests URL Encoded/URL Replacement",
    "ErrNoInputMessage": "\"%s\" operation does not contain the incoming message description",
    "ErrNonHttpBinding": "\"%s\" is not HTTP binding",
    "ErrNonHttpMessage": "\"%s\" message of \"%s\" operation is not HTTP message",
    "ErrNonHttpOperation": "\"%s\" is not HTTP operation",
    "ErrNonHttpPort": "\"%s\" is not HTTP port",
    "ErrNoPartElement": "\"%s\" message part did not map the schema element",
    "ErrURLReplacementError": "Errors occurred while analysing \"%s\" URL replacement template",
    "ErrValueIntExportImpossible": "Failed to convert integer %d to \"%s\" type: %s"
  },
  "Common/WSDL/Processor/WSDLRequestProcessor": {
    "ErrExportWSDLHttpRequestData": "Error occurred while HTTP request generating from row #%d of the input data set: %s",
    "ErrGetElementByMessagePartUnassigned": "When processing WSDL request, the following property has not been configured: TBGWSDLRequestProcessor.GetElementByMessagePart",
    "ErrHTTPHeaderRedefined": "\"%s: %s\" header already defined in the request",
    "ErrHTTPHeaders": "Error while generating HTTP headers",
    "ErrXMLExportNoContext": "No export context specified",
    "FailedRequestFileNameFormat": "\"Request_\" yyyy \"-\" mm \"-\" dd \"_\" hh \"-\" nn \"-\" ss \".\" Zzz \"_failed\"",
    "RequestFileNameFormat": "\"Request_\"yyyy\"-\"mm\"-\"dd\"_\"hh\"-\"nn\"-\"ss\".\"Zzz",
    "RequestFileNameFormatEx": "%s_%d",
    "RequestFileNameFormatFull": "%s.%s"
  },
  "Common/WSDL/SOAP": {
    "ErrCantSetupSOAPEnvelopeMsg": "Failed to create SOAP envelope based on %s message",
    "ErrCantSetupSOAPEnvelopeOp": "Failed to create SOAP envelope for %s operation",
    "ErrMessageHasNoBody": "Message has no body",
    "ErrMessageNotConnectedToOperation": "Message not connected to a specific operation was sent to SOAP envelope",
    "ErrNonSOAPMessage": "Non SOAP message",
    "ErrSoapBodyStyleNotRPC": "SOAP body in RPC operation does not support RPC style",
    "ErrSOAPEncodingNotSupported": "\"%s\" encoding style for %s SOAP version not supported",
    "WarnBOMNotRecommended": "BOM (Byte order mark) addition to SOAP envelope top may cause failure of some servers (for example, Apache Xerces or Java services) to process the request"
  },
  "Common/WSDL/WSDL": {
    "ErrHttpVerbNotSupported": "\"%s\" HTTP method not currently supported",
    "ErrUnrecognizedSOAPNamespaceURI": "\"%s\" SOAP namespace not recognized"
  },
  "Common/WSDL/WSDL_MSXML": {
    "ErrBindingMustSpecifyExactlyOneExtensionType": "\"%s\" binding must specify exactly one extension type",
    "ErrBindingMustSpecifyExtension": "\"%s\" port binding extension not specified or supported",
    "ErrBindingNotFound": "\"%s\" binding for \"%s\" endpoint (port) not found",
    "ErrBindingOperationExtensionCollision": "Types of \"%s\" binding extensions and \"%s\" operations do not match",
    "ErrCantDefineTransmissionPrimitive": "Failed to define data exchange primitive for %s operation, %s port type",
    "ErrFaultMustHaveExactlyOnePart": "Error defining %s operation, %s port type: fault message must contain exactly one part",
    "ErrHTTPOperationExtensionMissing": "No required extension element \"<http:operation/>\" in \"%s\" binding HTTP declaration for \"%s\" operation ",
    "ErrHttpPartReferencesComplexElement": "\"%s\" part included into \"%s\" message of \"%s\" type (\"%s\" operation) refers to %s{%s} XSD schema element related to the complex type",
    "ErrHttpPartReferencesComplexType": "\"%s\" part included into \"%s\" message of \"%s\" type (\"%s\" operation) refers to the complex type of %s{%s} XSD schema",
    "ErrInputMimeTypeContainsWildcard": "The incoming service message content must relate to the specific MIME type (actually - %s)",
    "ErrInvalidMimeType": "Invalid MIME type: %s",
    "ErrItemTypeNotFound": "\"%s\" array iitem type not found in schema",
    "ErrMessageDefHasNoSuchPart": "\"%s\" message definition does not contain \"%s\" named part",
    "ErrMessageDefinitionNotFound": "\"%s\" message definition not found in the document",
    "ErrMessageDefNotFound": "\"%s\" message referenced by \"%s\" operation of \"%s\" binding not found",
    "ErrMessageMustSpecifyExtension": "\"%s\" message extension (\"%s\" operation of \"%s\" binding) not specified or supported",
    "ErrMessageSoapVersionConflict": "SOAP version of %s message conflicts with %s operation version",
    "ErrMimeContentMessageDefHasMultipleOrNoParts": "\"<%s/>\" element without \"part\" attribute refers to \"%s\" message definition which contains more than one part or does not contain any",
    "ErrMimeContentReferencesComplexElement": "mime:content extension element in \"%s\" message (\"%s\" operation) is associated with \"%s\" part that refers to %s{%s} XSD schema element related to the complex type",
    "ErrMimeContentReferencesComplexType": "mime:content extension element in \"%s\" message (\"%s\" operation) is associated with \"%s\" part that refers to the complex type of %s{%s} XSD schema",
    "ErrNoDefinitionsElement": "<definitions/> element of WSDL description is missing or does not belong to the WSDL namespace",
    "ErrNotArrayType": "\"%s\" not an array type description",
    "ErrOpDefNotFoundInPortType": "\"%s\" operation referenced by \"%s\" binding of not found in \"%s\" port type definition",
    "ErrOperationMustSpecifyExtension": "\"%s\" operation extension of \"%s\" port binding not specified or not supported",
    "ErrPartContentsNotDefined": "\"%s\" part does not reference schema definitions",
    "ErrPartIsReferencedByElement": "\"%s\" part defined by element not by XSD schema type",
    "ErrPartIsReferencedByType": "\"%s\" part defined by type not by XSD schema element",
    "ErrPortBindingExtensionCollision": "\"%s\" port and \"%s\" binding extensions do not match",
    "ErrPortMustSpecifyExtension": "\"%s\" endpoint (port) extension not specified or not supported",
    "ErrPortTypeNotFound": "\"%s\" port type for \"%s\" binding not found",
    "ErrSchemaDoesNotContainPartElement": "\"%s\" part references \"%s\"{\"%s\"} element not found in XSD schema",
    "ErrSchemaDoesNotContainPartType": "\"%s\" part references \"%s\"{\"%s\"} type not found in XSD schema",
    "ErrSeveralElementsNotAllowed": "More than one <%s/> element not allowed in WSDL description",
    "ErrSoapActionRequiredForHTTP": "It is required to specify \"<soap:operation/>\" extension element with soapAction attribute for SOAP HTTP transport operations",
    "ErrSoapBodyInNonSoapMessage": "\"%s\" message referenced by \"%s\" operation of \"%s\" binding is not SOAP message but it contains SOAP body",
    "ErrSoapDocumentEncoded": "\"Document\" style SOAP messages with \"encoded\" usage type are not supported",
    "ErrSoapDocumentLiteralPartRefersToType": "Unsupported combination of parameters: \"%s\" part referenced as XSD schema type is assigned to document style SOAP message with literal usage type",
    "ErrSoapMessageMultipleExtensions": "For \"%s\" SOAP message referenced by \"%s\" operation of \"%s\" binding, more than one extension type is specified",
    "ErrSoapOperationVersionConflict": "SOAP version of %s operation conflicts with %s binding version",
    "ErrSoapRPCPartRefersToElement": "Unsupported combination of parameters: \"%s\" part referenced as XSD schema element is assigned to RPC style SOAP message",
    "ErrSoapTransportNotSupported": "SOAP transports with the exception of HTTP are not currently supported",
    "ErrUrlReplacementMustUseGET": "Error defining input message of \"%s\" operation of \"%s\" binding: message of \"%s\" type must use \"%s\" request method",
    "ErrWsdlExtractedSchemaParseError": "XML error while parsing the schema included into WSDL file (row %d, position %d):\nError code: %d\nReason: %s",
    "ErrWsdlImportNoAccess": "No access to the imported %s document"
  },
  "Common/XML/Processor/XMLExportImpl": {
    "ColumnName": "Data column name",
    "ErrColumnMappedToNonExistentNode": "\"%s\" input data set column has been assigned for nonexistent \"%s\" XSD schema node",
    "ErrNodeAndColumnDontExist": "The mapping settings of the input data set and XSD schema refer to nonexistent \"%s\" node of XSD schema and \"%s\" column of the input set",
    "ErrNodeCantMapColumnType": "\"%s\" column of the input data set has \"%s\" data type that cannot be converted to \"%s\" type of \"%s\" node of XSD  schema",
    "ErrNodeMappedToNonExistentColumn": "\"%s\" node of XSD schema has been assigned for nonexistent \"%s\" input data set column",
    "ErrNodeMustBeMapped": "For %s schema node with required value, no association with the input data set field has been assigned",
    "ErrOneOfSubNodesMustBeSelected": "%s schema node must have at least one subnode selected for export",
    "ErrValueIntExportImpossible": "Failed to export value %d to XML document node with \"%s\" type: %s",
    "ErrXMLExportContextNoDataSource": "Attempt to create XML export context not specifying data source",
    "ErrXMLExportRootElementAttributeRepeats": "You cannot re-add %s attribute to %s XML document root element",
    "ErrXMLExportRootElementSubElementRepeats": "Failed to re-add %s element to root element of %s XML document",
    "ErrXMLExportSchemaDoesNotAllowElement": "XSD schema does not allow to export %s element to current XML document",
    "NodePath": "Tree node path"
  },
  "Common/XML/Processor/XMLImportImpl": {
    "ErrCDATAInNonStringType": "%s element from %s namespace cannot contain <CDATA/> section because it relates to '%s' type",
    "ErrMaxOccExceeded": "Maximum number of \"%s\" element occurrences exceeded (%d allowed)",
    "ErrNoParentElement": "No parent element in \"%s\" element",
    "ErrSiblingAttributionFailed": "It is not possible to define \"%1:s{%2:s}\" sibling corresponding the schema for \"%0:s\" element",
    "ErrSubElementAttributionFailed": "It is not possible to define \"%1:s{%2:s}\" subelement corresponding the schema for \"%0:s\" element",
    "ErrXMLParse": "Error parsing XML:\n  Line: %d\n  Column: %d\n  Error code: %d\n  Message:\n  %s",
    "ErrXMLValidate": "XML validation error:\n  Line: %d\n  Column: %d\n  Error code: %d\n  Message:\n  %s"
  },
  "Common/XML/Processor/XMLRequestProcessor": {
    "ErrXMLExportNoContext": "No export context specified",
    "ErrXMLExportNoSinks": "No elements were specified in XML document for export",
    "ErrXMLExportRow": "Error exporting row #%d of the input data set: %s"
  },
  "Common/XML/Processor/XMLRequests": {
    "ErrContextStubCouplerNotAssigned": "No context coupling procedure and export recipient specified",
    "ErrExportContextNotSet": "No export context specified",
    "ErrExportStubNotSet": "Export destination not specified"
  },
  "Common/XML/Processor/XMLSchemaTree": {
    "Enclosed_All": "All #",
    "Enclosed_Choice": "Choice #",
    "Enclosed_Sequence": "Sequence #",
    "ErrAttributeNoRequiredValue": "No required value for %s attribute",
    "ErrElementNoRequiredValue": "No required value for %s element",
    "ErrEmptyNodeName": "Tree node name cannot be empty",
    "ErrInvalidPath": "Invalid node path: %s",
    "ErrNodeLimitExceeded": "Maximum allowable number of (%d) tree nodes exceeded",
    "ErrNodeSelectionRegisteringAlreadyOn": "Node selection registering already on",
    "ErrNodeSelectionRegisteringIsOff": "Node selection registering off",
    "ErrNoneValueAttempt": "Attempt to set or get a value for the node with dtNone data type",
    "ErrParentPathOnTreeRoot": "Attempt to get the parent node path for the tree root node",
    "ErrRootElementPathOnTreeRoot": "Attempt to get the schema root element path for the tree root node",
    "ErrSetAsStringDatetimeAttempt": "Attempt to set the SetAsString based value for the \"Date/time\" data type node",
    "ErrSetAsStringVariantAttempt": "Attempt to set the SetAsString based value for the \"Variable\" data type node",
    "ErrSetDateTimeAsStringTypeMismatch": "Attempt to set the SetDateTimeAsString based value for the node with the data type different from the \"Date/time\" one",
    "ErrSetVariantAsStringTypeMismatch": "Attempt to set the SetDateTimeAsString based value for the node with the data type different from the \"Variable\" one",
    "ErrTreeSelectionUpdate": "EndUpdateSelection method called without BeginUpdateSelection method",
    "ErrValueConversionImpossible": "Failed to convert \"%s\" string to \"%s\" value",
    "ErrValueIntConversionImpossible": "Failed to convert \"%s\" string to \"%s\" number: %s",
    "Group_Idx": "(%s) index"
  },
  "Common/XML/SAX/XMLSAX": {
    "ErrImplementationIntfNotSupported": "%s interface not supported by %s implementation",
    "ErrParserIsActive": "You cannot change parser properties during parsing"
  },
  "Common/XML/SAX/XMLSAX_MSXML": {
    "ErrParseFile": "Error in row %d, position %d while parsing '%s' file:\n  %s",
    "ErrParseFileUnhandledException": "Unhandled exception parsing '%s' file:\n%s",
    "ErrParseStream": "Error parsing stream in row %d, position %d:\n  %s",
    "ErrParseStreamNoXML": "Error parsing stream in row %d, position %d: the source is not XML file or has incorrect syntax",
    "ErrParseStreamUnhandledException": "Unhandled exception parsing stream:\n  %s",
    "ErrParseStreamUnrecognizedEncoding": "Stream parsing error: unrecognized %s encoding",
    "ErrParseURL": "Error in row %d, position %d when executing request to URL '%s':\n  %s",
    "ErrParseURLNoXML": "Error in row %d, position %d when executing request to URL '%s': server response is not XML file",
    "ErrParseURLUnhandledException": "Unhandled exception parsing request to URL '%s':\n  %s",
    "ErrParseURLUnrecognizedContentType": "Error executing request to URL '%s': server response was not processed because Content-type: %s had not been registered",
    "ErrSaxDocumentHasNoRootElements": "No root element in the document",
    "ErrSaxParserFeatureInvalidArg": "Invalid argument type when setting '%s' feature of MSXML SAX parser",
    "ErrSaxParserFeatureUnknownError": "Unknown error setting '%s' feature of MSXML SAX parser",
    "ErrSaxParserHandlerInvalidArg": "Invalid argument type when setting handler of MSXML SAX parser: %s",
    "ErrSaxParserHandlerUnknownError": "Unknown error setting when setting handler of MSXML SAX parser: %s",
    "ErrSaxParserNotCreated": "MSXML SAX parser COM object not created",
    "ErrSaxParserPropertyInvalidArg": "Invalid argument type when setting '%s' property of MSXML SAX parser",
    "ErrSaxParserPropertyUnknownError": "Unknown error setting '%s' property of MSXML SAX parser",
    "ErrSaxParserPutFeature": "Error setting '%s' feature of MSXML SAX parser",
    "ErrSaxParserPutHandler": "Error setting when setting handler of MSXML SAX parser: %s",
    "ErrSaxParserPutProperty": "Error setting '%s' property of MSXML SAX parser",
    "ErrUnsupportedXSDImplementation": "This implementation of IBGXSD interface is not supported",
    "HTTPClientInitFailed": "Error creating HTTP client",
    "HTTPClientRetrieveDataFailed": "Error retrieving data by HTTP client: %s",
    "UnbalancedPop": "Unbalanced extraction operation"
  },
  "Common/XML/XML": {
    "ErrCodePageByXMLCharsetAlreadyInstalled": "The function required to get the code page number based on XML character set has already been installed",
    "ErrCodePageByXMLCharsetUnassigned": "The function required to get the code page number based on XML character set has not been installed",
    "ErrGenerateNamespacePrefixOverflow": "Counter overflow during namespace prefix generation",
    "ErrStrToValueIntBadTypeRefinement": "\"%s\" type of refinement is not allowed when converting from string to integer",
    "ErrXMLCharsetByCodePageAlreadyInstalled": "The function required to get XML character set based on the code page number has already been installed",
    "ErrXMLCharsetByCodePageUnassigned": "The function required to get XML character set based on the code page number has not been installed"
  },
  "Common/XML/XML_MSXML": {
    "ErrElementMustHaveAttribute": "\"%s\" attribute required for \"%s\" element",
    "ErrXMLLoadFailure": "Failed to load %s document",
    "ErrXMLLoadStringFailure": "Failed to load XML document from string",
    "ErrXMLParseFailure": "Error processing %s document (row %d, position %d): %s",
    "ErrXMLParseStringFailure": "Error processing XML (row %d, position %d): %s"
  },
  "Common/XML/XMLDocument": {
    "ErrAddNodeOperationNotAllowed": "The operation of node addition of '%s' type is not allowed on the node of '%s' type",
    "ErrDocumentHasNoRootElement": "No root element in XML document",
    "ErrInvalidNodeID": "Unknown node ID: %d",
    "ErrInvalidXMLNameChar": "XML ID cannot contain \"%s\" character",
    "ErrInvalidXMLNameStartChar": "XML identifier cannot start with \"%s\" character",
    "ErrOnlyOneRootElementAllowed": "Document root element already exists",
    "ErrPITargetXMLIsReserved": "\"xml\" parser instruction name reserved",
    "ErrSetSinkWrongNodeType": "XML recipient can only be the 'document' or 'element' node type"
  },
  "Common/XML/XSD_MSXML": {
    "Any": "Any item",
    "ErrCantCreateXMLDOMDocument60": "Error creating COM object of XML document; possible reason - not installed MSXML 6.0",
    "ErrXSDElementExistsWithAnotherType": "%s item to be added from %s  namespace already exists in the schema and has a different type",
    "ErrXSDIncludeNamespaceMismatch": "\"%s\" schema is trying to include \"%s\" schema but the target namespace \"%s\" of the included schema does not match \"%s\"",
    "ErrXSDNoAccess": "No access to %s document",
    "ErrXSDNoSchemaElement": "%s document does not contain 'schema' root element 'schema'",
    "WarnXSDElementRemoved": "%s:%s element was removed from %s document because it could not be verified using the file storage"
  },
  "components/assnrules/AssnRulesEngine": {
    "AssnRulesApply": "Apply association rules model",
    "AssnRulesFPGrowth": "Search for frequent itemsets",
    "AssnRulesFPTree": "Build FP-tree",
    "AssnRulesTraceRules": "Trace rules",
    "AssnRulesTransactions": "Transactions preparation",
    "ColumnNameItemsetID": "Itemset ID",
    "ColumnNameItemsetSupport": "Support",
    "ColumnNameItemsetWidth": "Power",
    "ColumnNameRuleAntecedent": "Antecedent",
    "ColumnNameRuleConfidence": "Confidence",
    "ColumnNameRuleConsequent": "Consequence",
    "ColumnNameRuleID": "Rule ID",
    "ColumnNameRuleLift": "Lift",
    "ColumnNameRuleSupport": "Support",
    "ColumnNameTransactionID": "Transaction identifier",
    "ErrModelDifferentSupport": "Minimum support reduced, it is required to rebuild the model",
    "ErrModelExcludeItems": "Elements with maximum support added or excluded, it is required to rebuild the model",
    "ErrMoreThanOneItemColumn": "More than one transaction item column in the input data",
    "ErrMoreThanOneTransactionColumn": "More than one transaction identifier column in the input data",
    "ErrNConsequentMaxWrongValue": "Invalid maximum item count in the rules antecedent or consequence",
    "ErrNItemsMaxWrongValue": "Invalid maximum item count in the set",
    "ErrNoItemColumn": "No transaction item column in the input data",
    "ErrNoModel": "Model is not trained. It is required to train the node before its applying",
    "ErrNonDiscreteItemColumn": "Transaction items must relate to the discrete type",
    "ErrNoTransactionColumn": "No transaction identifier column in the input data",
    "ErrWrongBaseSourceDataType": "Data type does not match the model",
    "InputDataSourceSuppl": "Supplementary data",
    "OutDataSetApply": "Apply rules",
    "OutDataSetItemsets": "Frequent sets",
    "OutDataSetRules": "Association rules"
  },
  "components/assnrules/AssnRulesVendor": {
    "VendorCaption": "Association Rules",
    "VendorDesc": "Association rules search"
  },
  "components/assnrules/FPTree": {
    "Support": "Support"
  },
  "components/autocorrelation/AutoCorrelationEngine": {
    "ACFDisplayName": "ACF",
    "ErrFFTHugeSize": "The input data source size exceeds the allowable values for calculation in the frequency domain",
    "ErrOverflow": "The input data source size or lags number exceeds the allowable values",
    "LagDisplayName": "Lag",
    "MsgUsableColumnRequired": "No used columns specified",
    "PACFDisplayName": "PACF",
    "SignificantDisplayName": "Significance",
    "StdErrDisplayName": "Error"
  },
  "components/autocorrelation/AutoCorrelationVendor": {
    "VendorCaption": "Autocorrelation",
    "VendorDesc": "Calculate autocorrelation function values"
  },
  "components/binning/Binning": {
    "CalculatingBarChartsProcess": "Calculating histogram",
    "CalculatingBinsProcess": "Calculating bins",
    "DoTeachProcessFmt": "\"%s\" field processing",
    "ErrBinsInvalidFmt": "Bins for \"%s\" column are not valid for binning",
    "ErrBinsNotDefined": "Bins not defined for the specified parameters",
    "ErrCreateQuantizer": "Failed to create quantizer",
    "ErrDefineBinsFailedFmt": "Failed to define binning intervals for \"%s\" field",
    "ErrInputDataSourceNotActive": "Quantized data source is not active",
    "ErrMethodNotDefined": "The binning method is not defined for the given parameters",
    "ErrMethodNotDefinedFmt": "Binning method unspecified for \"%s\" column",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoMethodFmt": "No binning method available for \"%s\" column",
    "ErrNotFoundBinsClass": "No bin class found to generate the example template",
    "ErrOrderID": "Bin identifiers not ordered",
    "ErrPreviewExamplesInvalidLength": "The template number does not match the data types number",
    "ExecuteProcess": "Output data processing",
    "InputBinsDataSource": "External binning bins",
    "PostfixDisplayNameFmt": " %s %s",
    "PostfixExtermalBins": "External",
    "PostfixSDBins": "SD",
    "PostfixTileBins": "Tiled",
    "PostfixWithCountBins": "Bins",
    "TeachProcess": "Binning bins forming"
  },
  "components/binning/BinningLabelConstructor": {
    "Inf": "+Inf",
    "InfDateTime": " ",
    "NegInf": "-Inf",
    "NegInfDateTime": " ",
    "Nothing": " "
  },
  "components/binning/BinningMethod": {
    "ErrInvalidBinFmt": "Failed to generate bins for \"%s\" field"
  },
  "components/binning/BinningMethodsImplementations": {
    "ErrBadLimits": "The lower bound cannot exceed the upper one",
    "ErrBinsCount": "Bin count must be more than 0",
    "ErrBinsCountLimitFmt": "Bin count must not exceed %d",
    "ErrBinWidthFmt": "Failed to define bin width for %s field",
    "ErrGenerateBins": "Failed to generate binning bins",
    "ErrInfinityFmt": "Binning bins for %s field were not created. The field contains the \"infinity\" value.",
    "ErrInvalidBinRowFmt": "Failed to generate bin for %s field from row %d",
    "ErrInvalidRangeWidthFmt": "The initial bin boundary exceeds the final boundary for %s field",
    "ErrLogBinsCountLimitFmt": ", for %s field.",
    "ErrLowerLimit": "No lower bins bound specified",
    "ErrNoDefineExternalBins": "No external bins found",
    "ErrNoDefineExternalBound": "No bounds for external bins found",
    "ErrSkoAvgFmt": "Failed to get SD/mean for %s field",
    "ErrStatFmt": "Failed to get minimum maximum for %s field",
    "ErrTooManyBinsFmt": "Too many bins defined for %s integer field",
    "ErrUpperLimit": "No upper range bound specified",
    "ErrVerySmallWidthFmt": "For %s integer field bin width must be >= 1",
    "ErrWrongBinsDataType": "Invalid bin data type",
    "ErrZeroBinsWidth": "Bin width must be more than 0",
    "ErrZeroBinsWidthFmt": "Bin width must be more than 0 for %s field",
    "ErrZeroDivForIntervalsFmt": "%s field with zero variance, only 1 bin will be created",
    "ErrZeroDivForSDFmt": "%s field with zero variance, only 3 bins will be created"
  },
  "components/binning/BinningMethodsImplementationTile": {
    "AlignTile": "Align tiles",
    "ErrBinsCountLimitFmt": "Tiles number must not exceed %d",
    "ErrContextNotReadyFmt": "Context not ready for %s field and %s method",
    "ErrNoMethod": "Failed to get tiled binning settings",
    "ErrNoValuesFmt": "%s field contains no data, it is impossible to generate bins",
    "ErrSumFmt": "Failed to get sum of values for %s field",
    "ErrZeroTileCount": "Bin (tile) count must be > 0",
    "NegativValueForTileSumm": "Negative values are not allowed when creating bins by sum of characteristic",
    "SortProcessFmt": "%s field sorting",
    "WarnNoRound": "In case of optimal tile binning bin bounds are not rounded"
  },
  "components/binning/BinningQuantizers": {
    "ErrNoBins": "No bins defined for quantizer"
  },
  "components/binning/BinningUtils": {
    "ErrInvalidTypecast": "Invalid typecasts"
  },
  "components/binning/BinningValue": {
    "ErrContinuousType": "Data type does not comply with continuous values",
    "ErrNumericType": "Data type not related to the numeric values"
  },
  "components/binning/BinningVendor": {
    "OutputRanges": "Binning ranges",
    "VendorCaption": "Binning",
    "VendorDesc": "User binning"
  },
  "components/calcdata/CalcData": {
    "ErrExceededRecursiveCalls": "Maximum number of (%d) recursive calls of Data function in \"%s\" expression exceeded.\nTo solve this problem you must enable Caching.",
    "ErrExprIsStringType": "\"%s\" expression of string type",
    "InputVariables": "Input variables",
    "NameNotExists": "No field, variable or expression with \"%s\" name exists"
  },
  "components/calcdata/CalcDataVendor": {
    "VendorCaption": "Calculator",
    "VendorDesc": "Create calculated fields"
  },
  "components/calcdata/CalcItem": {
    "ErrExprParse": "Error parsing \"%s\" expression: %s",
    "ExprCalculateError": "Error calculating \"%s\" expression, row %d of the input data set"
  },
  "components/calcdata/CalcItemChakra": {
    "ErrExprParse": "Error parsing \"%s\" expression: %s",
    "ErrExprUsesUndefinedVariable": "%1:s undefined variable used in \"%0:s\" expression",
    "ExprCalculateError": "Error calculating \"%s\" expression, row %d of the input data set"
  },
  "components/calcdata/ExprColumns": {
    "ColumnMetaDesc": "Column",
    "DataTypeDesc": "Data type",
    "DefaultExprDisplayName": "Expression",
    "DescriptionDesc": "Description",
    "ExpressionDesc": "Expression",
    "IntermediateDesc": "Intermediate expression",
    "ItemDisplayNamePrefix": "Expression"
  },
  "components/calcdata/FloatCLineParser": {
    "ErrBracket": "Incorrect brackets",
    "ErrIllegalCharacter": "Invalid \"%s\" character",
    "ErrInvalidExpression": "Invalid expression: \"%s\"",
    "ErrQuote": "Unclosed string intercept in string %d",
    "ErrUnknownFunction": "Unknown function: %s"
  },
  "components/calcvariables/CalcVariables": {
    "ErrExprCalculate": "Error calculating \"%s\" expression",
    "ErrExprIsStringType": "\"%s\" expression of string type",
    "ErrExprParse": "Error parsing \"%s\" expression: %s",
    "ErrVarValueSet": "Error setting \"%s\" expression value",
    "NameNotExists": "No input variable or expression with \"%s\" name exists"
  },
  "components/calcvariables/CalcVariablesVendor": {
    "VendorCaption": "Calculator (Variables)",
    "VendorDesc": "Creating calculated variables"
  },
  "components/clope/ClopeEngine": {
    "ClopeApplyNotify": "Model applying",
    "ClopeTrainNotify": "Clustering",
    "ClopeTransactionNotify": "Transactions preparing",
    "ColumnNameCluster": "Cluster number",
    "ColumnNameN": "N",
    "ColumnNameS": "S",
    "ColumnNameTransaction": "Transaction identifier",
    "ColumnNameW": "W",
    "ErrMoreThanOneItemColumn": "More than one transaction item column in the input data",
    "ErrMoreThanOneTransactionColumn": "More than one transaction identifier column in the input data",
    "ErrNoItemColumn": "No transaction item column in the input data",
    "ErrNoModel": "Model is not trained. It is required to train the node before its applying",
    "ErrNonDiscreteItemColumn": "Transaction items must relate to the discrete type",
    "ErrNoTransactionColumn": "No transaction identifier column in the input data",
    "ErrTransactionTypeNotMatched": "Transaction identifier types do not match",
    "InputDataSourceSuppl": "Supplementary input",
    "OutDataSetClusters": "Clustering",
    "OutDataSetParameters": "Cluster parameters"
  },
  "components/clope/CLOPEVendor": {
    "VendorCaption": "Transaction Clustering",
    "VendorDesc": "CLOPE algorithm transaction clustering"
  },
  "components/clope/TransactionDataSourceSet": {
    "DataSourceSupplColumnName": "Field name",
    "DataSourceSupplItem": "Supplementary data source field",
    "ElementValuesSuppl": "Unique values suppl.",
    "EncodeArray": "Item index"
  },
  "components/clusterization/Clusterization": {
    "ErrNoTrainData": "No train data",
    "NAdditionalIters": "Pretraining iteration count"
  },
  "components/clusterization/ClusterizationEngine": {
    "ClusterizationTrainNotify": "Clustering",
    "ColumnNameCluster": "Cluster number",
    "ColumnNameDistance": "Distance to cluster center",
    "ColumnNameUniqueCoordSuffix": "|Coordinate",
    "ColumnNameUniqueValueSuffix": "|Value",
    "ErrClustersRowCountOverflow": "Row count overflow of the \"Cluster Centers\" output data set",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoModel": "Model is not trained. It is required to train the node before its applying",
    "ErrWrongModel": "Model does not match the input data",
    "OutDataSetCenters": "Cluster centers",
    "OutDataSetClusters": "Clustering",
    "PrepareDataNotify": "Data preparing"
  },
  "components/clusterization/ClusterizationVendor": {
    "VendorCaption": "Clustering",
    "VendorDesc": "Data clustering"
  },
  "components/coarseclasses/CoarseClassesBuilder": {
    "ErrCantApplyExternalBinning": "You cannot apply binning for %s column.",
    "ErrCantApplyFineClassesBinning": "You cannot apply fine classes for binning for %s column. There are too many unique values",
    "ErrCantLoadBackup": "Failed to restore binning",
    "ErrCantSaveBackup": "Failed to save current binning",
    "ErrContDataKindExpected": "Continuous data kind of %s column expected",
    "ErrDiscreteDataKindExpected": "Discrete data kind of %s column expected",
    "ErrIncorrectEventValue": "The output field does not contain \"%s\" value",
    "ErrInputBinningIsNotCorrected": "External binning for \"%s\" column incorrectly specified",
    "ErrOutColumnNotDefined": "Undefined output field",
    "ErrOutColumnNotValid": "The output field must be discrete with 2 unique values",
    "ErrOverflow": "Number of the input data source binning operations exceeds the allowable value",
    "ErrVoidDataKind": "Data kind of the processed column not defined"
  },
  "components/coarseclasses/CoarseClassesConfig": {
    "EquabilityCoefficient": "Equability coefficient",
    "ErrDoNotFitAsTargetColumn": "The output column must have the discrete data kind and contain exactly 2 unique values",
    "ErrIncorrectColumnPurpose": "Incorrect \"%s\" field usage type",
    "ErrNotAllowedInputBinningKind": "The input field does not support the new usage type in the external partition (data type restriction)",
    "ErrRequiredContinuousOrDiscrete": "Continuous or discrete data kind is required",
    "MaxClassCount": "Required class count",
    "MinimalClassQuota": "Minimum class quota"
  },
  "components/coarseclasses/CoarseClassesEngine": {
    "ActiveInputPortRequired": "It is required to activate the input port to build the coarse classes",
    "ClassMarkPostfix": " Caption",
    "ClassNumPostfix": " Class number",
    "ClassSignificantPostfix": " Significance",
    "CoarseClassesProcessDesc": "Coarse classes building",
    "ErrClassStorageNotDefined": "The fine classes storage of one of the columns not defined",
    "ErrCoarseClassBuilderNotValid": "The fine classes storage does not comply with the customized settings",
    "ErrExternalBinningOverFlow": "The external binning size for \"%s\" column exceeds the allowable value",
    "ErrInputBinningIsNotCorrected": "External binning for \"%s\" column incorrectly specified",
    "ErrInputBinningIsNotExist": "No external binning for \"%s\" column or port not activated",
    "ErrInputBinningIsNotFull": "External binning for \"%s\" column does not contain all required data",
    "ErrInputBinningMissValue": "External binning for \"%s\" column does not contain unique \"%s\" value",
    "ErrInputBinningMissValues": "External binning contains not all unique values of \"%s\" column",
    "ErrInputRangeDataSourceIsNotExist": "No external binning data source",
    "ErrNoModel": "Model is not trained. It is required to train the node before its applying",
    "InputRangesDataSource": "External quantization ranges"
  },
  "components/coarseclasses/CoarseClassesMapper": {
    "ErrNotAllowedDataType": "Column data type %s not supported",
    "ErrNoUniqueValues": "Failed to get unique values for \"%s\" column",
    "ErrPrevBinningDoesNotExist": "No previous binning for \"%s\" column"
  },
  "components/coarseclasses/CoarseClassesVendor": {
    "OutputBinningParams": "Column significance",
    "OutputClassParams": "Class parameters",
    "VendorCaption": "Coarse Classes",
    "VendorDescription": "Minimize input values diversity"
  },
  "components/coarseclasses/CoarseClassingOptimalAlgorithm": {
    "MaxClassCount": "Maximum class count",
    "MinClassPercentage": "Minimum class percentage",
    "UniformityCoef": "Uniformity coefficient"
  },
  "components/coarseclasses/FineClassesStorage": {
    "BlanksClass": "[blank]",
    "ErrColumnIsNotDifenied": "Failed to define the column to process",
    "ErrDataTypesNotMatch": "The specified column data type does not match the data type of the coarse classes",
    "ErrNotPositiveIntervalsCount": "Interval count must be more than 0",
    "From": "from ",
    "NullClass": "Null class",
    "To": "to "
  },
  "components/columnflipping/ColumnFlipping": {
    "ColumnFlippingProcess": "Unpivoting",
    "DataTypesColumnDisplayName": "Data types",
    "DisplayNamesColumnDisplayName": "Captions",
    "ErrRowCountExceedMaxValue": "Row count of the result set exceeded the maximum value",
    "NamesColumnDisplayName": "Captions",
    "ValuesColumnDisplayName": "Values"
  },
  "components/columnflipping/ColumnFlippingVendor": {
    "VendorCaption": "Unpivoting",
    "VendorDesc": "Create flat table from pivot table"
  },
  "components/coluniondata/ColUnionData": {
    "ErrNoActiveInputs": "No active inputs",
    "ErrNoTailsAlignDataSource": "No data source for appending",
    "JoinedDataSource": "Joined table",
    "JoinedVariables": "Joined variables",
    "MainDataSource": "Main table"
  },
  "components/coluniondata/ColUnionDataVendor": {
    "VendorCaption": "Column Union",
    "VendorDescription": "Combine several data sets by vertical gluing"
  },
  "components/condition/Condition": {
    "AggregateCountColumnDisplayName": "*",
    "ConditionBranchMetaDesc": "Branch",
    "ErrAggregateCountColumnNotFound": "No row count aggregation column found for the specified data set",
    "ErrCannotAccessLinkedFieldInfos": "Invalid operation: GetLinkedFieldInfos method calling",
    "ErrDebugConditionNotSpecified": "No condition branches are specified for execution in the debug mode",
    "ErrFieldNotSpecified": "No comparison field specified",
    "ErrIncorrectConditionConfiguration": "The condition list contains errors",
    "ErrInvalidAggregationType": "\"%s\" aggregation function does not apply to the specified field",
    "ErrInvalidCompareValue": "\"%s\" value  is not compatible with \"%s\" data type",
    "ErrInvalidRelationType": "\"%s\" relation type is not applicable to the specified field and aggregation function",
    "ErrNoConditionBranchItems": "No condition branches specified",
    "ErrNoConditionItems": "Condition branch cannot be empty"
  },
  "components/condition/ConditionComponent": {
    "ElseBranchDesc": "Otherwise",
    "ErrInputSocketDefIsEmtpy": "The following input types are not specified: ",
    "OutputSocketDisplayNameTemplate": "%s - %s"
  },
  "components/condition/ConditionComponentVendor": {
    "VendorCaption": "Condition",
    "VendorDesc": "Conditional execution of model branch"
  },
  "components/corranalysis/CorrAnalysis": {
    "ColumnSet1": "Field 1",
    "ColumnSet2": "Field 2",
    "CorrAnalysisExtremumCFNotify": "Cross-correlation functions extremes calculating",
    "CorrAnalysisNotify": "Correlation coefficients calculating",
    "CorrAnalysisPirsonNotify": "Pearson correlation coefficients calculating",
    "CorrAnalysisRankedStatNotify": "Ancillary statistics calculating",
    "CorrAnalysisSpearmanNotify": "Spearman's correlation coefficients calculating",
    "CorrAnalysisTauBKendallNotify": "Kendall's Tau-b correlation coefficients calculating",
    "DisplayName": "Caption",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "Name": "Name"
  },
  "components/corranalysis/CorrAnalysisVendor": {
    "VendorCaption": "Correlation Analysis",
    "VendorDesc": "Calculation of correlation coefficients"
  },
  "components/crosstab/CrossTab": {
    "CountCaseDisplayName": "Count",
    "CrossTabProcess": "Cross table building",
    "ErrTooManyDimensionsInColumns": "Too many column dimensions selected",
    "InvalidColumnNameFmt": "Failed to generate column name from \"%s\" unique value",
    "NullGroupCaption": "<...>",
    "OtherGroupCaption": "<Other>"
  },
  "components/crosstab/CrossTabVendor": {
    "VendorCaption": "Cross Table",
    "VendorDesc": "Create pivot table from flat table"
  },
  "components/datatovariables/DataToVariablesEngine": {
    "DataToVariablesNotify": "Variable calculating",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoOneAggregation": "It is required to specify at least one aggregation option for \"%s\" field",
    "FindMedianNotify": "Median calculating"
  },
  "components/datatovariables/DataToVariablesVendor": {
    "VendorCaption": "Table into Variables",
    "VendorDesc": "Aggregate data into variables"
  },
  "components/datatoxml/DataToXML": {
    "ErrCannotProceedWithoutRootElement": "To perform the operation you must first select the root XML element",
    "ErrDocIDColumnNotAssigned": "No field that is the Document Identifier defined",
    "ErrExportNotConfigured": "XML tree not configured",
    "ErrIncorrectExportConfiguration": "Errors in configuration",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the node settings.",
    "ErrMapInputNodeTypesMismatch": "The data type of %s column does not match the data type of %s tree node",
    "ErrMappedNodeNotOwnedByExportTree": "%s node for which input data set column selection is requested is not included into XML tree",
    "ErrNodeDoesNotDescendFromSelectedRoot": "%s node is not a descendant of the selected %s root element",
    "ErrNodeDoesNotExist": "\"%s\" node not found in XSD schema",
    "ErrNotRootElement": "\"%s\" node is not XSD schema root element",
    "ErrNoXSDInput": "There is no XSD schema at the component input",
    "ErrRootNodeNotSelected": "No root XML element selected",
    "ErrUnmappedNodeNotOwnedByExportTree": "%s node for which link reset is requested is not included into XML tree",
    "ErrXMLExport": "Error generating XML:\n  Error code: %d\n  %s",
    "ExportDataSetProcessCaption": "Data set processing",
    "IDName": "ID",
    "WriteXMLFileProcessCaption": "XML document generation",
    "XMLName": "XML",
    "XSDConnection": "Connect to XSD schema source"
  },
  "components/datatoxml/DataToXMLVendor": {
    "VendorCaption": "XML Generation",
    "VendorDesc": "XML document generation according to given XSD schema"
  },
  "components/datereform/DateReform": {
    "ErrFormatingString": "Error converting date/time to string with %s format",
    "ISO8601": "ISO8601"
  },
  "components/datereform/DateReformVendor": {
    "VendorCaption": "Date and Time",
    "VendorDescription": "Reform date/time"
  },
  "components/em/EMEngine": {
    "ColumnNameCluster": "Cluster number",
    "ColumnNameProbability": "Ownership probability",
    "ColumnNameUniqueCoordSuffix": "|Coordinate",
    "ColumnNameUniqueValueSuffix": "|Value",
    "ErrClustersRowCountOverflow": "Row count overflow of the \"Cluster Centers\" output data set",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoModel": "Model is not trained. It is required to train the node before its applying",
    "ErrWrongModel": "Model does not match the input data",
    "OutDataSetCenters": "Cluster centers",
    "OutDataSetClusters": "Clustering",
    "PrepareDataNotify": "Data preparing",
    "TrainNotify": "Clustering"
  },
  "components/em/EMVendor": {
    "VendorCaption": "EM Clustering",
    "VendorDesc": "EM algorithm data clustering"
  },
  "components/enrichdata/EnrichData": {
    "DisplayNamePrefix": "Addition",
    "ErrLinkMustContainColumnOfMainTable": "Link must contain a field from the main table",
    "ErrRowCountExceedMaxValue": "Row count of the result set exceeded maximum value %d",
    "ProgessOutputBuild": "Build result data set",
    "ProgressJoinedTableIndex": "Joined table %d indexing"
  },
  "components/enrichdata/EnrichDataVendor": {
    "VendorCaption": "Enrich Data",
    "VendorDescription": "Enrich data using guides"
  },
  "components/execcmd/ExecCmd": {
    "ErrBadCmdLine": "Failed to determine executable file name",
    "ErrCmdLineIsEmpty": "Empty command line",
    "ErrCurrentDirectory": "Failed to define the current directory",
    "ErrDisallowedExecution": "Node execution forbidden by security settings",
    "ErrMsgDisplayName": "Error message",
    "ErrResultCmdLineIsEmpty": "Empty result command line.",
    "ExecTimeoutExpired": "Execution time expired",
    "ResultDisplayName": "Execution result"
  },
  "components/execcmd/ExecCmdVendor": {
    "VendorCaption": "Program Execution",
    "VendorDesc": "External program execution"
  },
  "components/execnode/ExecNodeComponent": {
    "ErrNodeComponentVendorIsSealed": "Failed to set reference to \"%s\" node for which inheritance is forbidden",
    "ErrNodeLocked": "\"%s\" node is locked",
    "ErrNodeNotInitialized": "\"%s\" node not initialized",
    "ErrPortNotConfigurable": "Configuring this port is not supported",
    "ErrReferencedNodeNotAvailable": "Reference node not available",
    "ErrReferencedNodeNotFound": "Reference node not found",
    "ErrReferencedNodeNotSpecified": "No reference to node specified",
    "ErrUnableToLoadComponentConfig": "Failed to load the internal component configuration"
  },
  "components/execnode/ExecNodeComponentVendor": {
    "InputBaseNode": "Base node",
    "VendorCaption": "Node Execution",
    "VendorDesc": "Apply model to new data"
  },
  "components/extractxml/ExtractXML": {
    "DocIDColumn": "Document ID",
    "ErrCharsetForCodePageNotFound": "No supported XML character set found for code page %d",
    "ErrExtractXML": "Error extracting XML from row %d of the input data set:\n  Error code: %d\n  Message: %s",
    "ErrExtractXMLInitError": "Error initializing Extract XML:\n  %s",
    "ErrImportNotConfigured": "Import tree not configured",
    "ErrInputFieldNotSelected": "You must specify containing XML field",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the node settings.",
    "ErrNoInputDataSource": "No input data source connected",
    "ErrNothingSelected": "No nodes selected for import",
    "ErrNoXSDInput": "There is no XSD schema at the component input",
    "ErrorCodeColumn": "Error Code",
    "ErrorDataSet": "Errors and exit codes",
    "ErrorDescColumn": "Error Description",
    "InputDataSource": "Input data source",
    "XSDConnection": "Connect to XSD schema source"
  },
  "components/extractxml/ExtractXMLVendor": {
    "VendorCaption": "XML Extraction",
    "VendorDescription": "Extracts XML document from the string field of the data set and imports it into the output data set according to the specified schema"
  },
  "components/factoranalysis/FactorAnalysis": {
    "ErrFactorMatrixAfterRot": "Illconditioned factor mapping matrix",
    "ErrFactorMatrixBadSize": "Incorrect factor mapping matrix size",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoModel": "Model is not trained. It is required to train the node before its applying",
    "ErrWrongModel": "Input data does not match previously trained model",
    "FactorAnalysisColumnsDisplayNames": "Caption",
    "FactorAnalysisColumnsNames": "Name",
    "FactorAnalysisDisplayName": "Factor",
    "FactorAnalysisNotify": "Factor calculating",
    "OutDataSetFactors": "Factors",
    "OutDataSetLoadings": "Factor loadings"
  },
  "components/factoranalysis/FactorAnalysisVendor": {
    "VendorCaption": "Factor Analysis",
    "VendorDesc": "Identification of significant factors"
  },
  "components/filterdata/CheckedCollection": {
    "Checked": "Checked"
  },
  "components/filterdata/FilterColumns": {
    "bdtCurrent": "current date",
    "bdtData": "available data",
    "CompareTipFmt": "%s and %s",
    "ErrColumnNotFound": "Field is specified incorrectly",
    "ErrCompareValueIsNull": "The compared value not defined",
    "ErrEmptyCompareValueList": "No list of values specified",
    "ErrIncorrectCompareLowerBound": "The entered lower bound value does not match the filtered column type",
    "ErrIncorrectCompareUpperBound": "The entered upper bound value does not match the filtered column type",
    "ErrIncorrectCompareValue": "The entered value does not match the filtered column type",
    "ErrIncorrectCompareValueList": "List values do not match the filtered column type",
    "ErrIncorrectRelationType": "Relation type does not match the filtered column type",
    "ErrNoConditions": "No filtering conditions",
    "ErrRowNumberNotSupported": "Row numerators not supported",
    "ErrUnknownDataType": "No data type specified",
    "FirstLastDateFmt": "%s %s %s from %s",
    "fld0and5to20DayPeriodName": "days",
    "fld0and5to20MonthPeriodName": "months",
    "fld0and5to20QuarterPeriodName": "quarters",
    "fld0and5to20WeekPeriodName": "weeks",
    "fld0and5to20WrongPeriodName": "periods",
    "fld0and5to20YearPeriodName": "years",
    "fld2to4DayPeriodName": "day",
    "fld2to4MonthPeriodName": "month",
    "fld2to4QuarterPeriodName": "quarter",
    "fld2to4WeekPeriodName": "week",
    "fld2to4WrongPeriodName": "period",
    "fld2to4YearPeriodName": "year",
    "fldDayFirstPostfix": "first",
    "fldDayLastPostfix": "last",
    "fldManyFirstPostfix": "first",
    "fldManyLastPostfix": "last",
    "fldMonthFirstPostfix": "first",
    "fldMonthLastPostfix": "last",
    "fldOneDayPeriodName": "day",
    "fldOneMonthPeriodName": "month",
    "fldOneQuarterPeriodName": "quarter",
    "fldOneWeekPeriodName": "week",
    "fldOneWrongPeriodName": "period",
    "fldOneYearPeriodName": "year",
    "fldOtherFirstPostfix": "first",
    "fldOtherLastPostfix": "last",
    "fldQuarterFirstPostfix": "First",
    "fldQuarterLastPostfix": "last",
    "fldWeekFirstPostfix": "first",
    "fldWeekLastPostfix": "last",
    "fldYearFirstPostfix": "first",
    "fldYearLastPostfix": "last"
  },
  "components/filterdata/FilterData": {
    "ErrPreviewDataSourceNotActive": "Failed to apply filter, input not activated",
    "FilterDataNotify": "Data filtering",
    "FilterPreviewProcess": "Filter operation preview",
    "OutputDataSource": "Filtered",
    "OutputDataSourceElse": "Filtered Out",
    "WarnReachedLimitScanRow": "Maximum scanned row count reached: %d"
  },
  "components/filterdata/FilterDataVendor": {
    "VendorCaption": "Row Filter",
    "VendorDesc": "Row selection by condition"
  },
  "components/filtration/DataRecovery": {
    "DataRecovery": "Imputation",
    "PaymentAdditionalFeatures": "Calculation of the additional features",
    "QualityEngine": "Data quality",
    "ScanningInputData": "Input data scanning"
  },
  "components/filtration/DataRecoveryVendor": {
    "VendorCaption": "Imputation",
    "VendorDesc": "Fill in missing data"
  },
  "components/filtration/ELimOutlier": {
    "ErrOutDataSetIndexOutOfRange": "The output data set index %d is out of [%d; %d] range",
    "GenerationOutputSets": "Output data sets generation",
    "OutData": "Output data set",
    "OutDataExtr": "Extremes",
    "OutDataOut": "Outliers",
    "PaymentAdditionalFeatures": "Calculation of the additional features",
    "QualityEngine": "Data quality",
    "ScanningInputData": "Input data scanning"
  },
  "components/filtration/ElimOutlierVendor": {
    "VendorCaption": "Eliminate Outliers",
    "VendorDesc": "Eliminate outliers and extremes"
  },
  "components/forecast/ARIMAXBuilder": {
    "ErrIncorrectData": "Incorrect data passed to %s procedure",
    "ErrOptimGradientVerificationFailed": "Analytical gradient verification failed",
    "ErrOptimIntegrityFailed": "The infinite value of the optimized function or its gradient was detected",
    "NotEnoughData": "Not enough data to train the model with the given structure",
    "TrainARIMAXProcessCaption": "Model training"
  },
  "components/forecast/ARIMAXModel": {
    "ARDisplayName": "AR[%d]",
    "ARIMAForecastProcessCaption": "Forecast calculating",
    "ErrCoefsLengthMismatch": "Vector depth of %d parameters  does not match the required %d",
    "ErrModelHasNoIntercept": "The current model has no intercept",
    "ErrUnknownCoefficients": "Model contains unknown coefficients",
    "InterceptDisplayName": "Intercept",
    "MADisplayName": "MA[%d]",
    "SARDisplayName": "Seasonal AR[%d]",
    "SMADisplayName": "Seasonal MA[%d]"
  },
  "components/forecast/ARIMAXParams": {
    "ConfidenceInterval": "Confidence interval",
    "D": "Integration order",
    "DS": "Seasonal integration order",
    "ErrNoStructuralElements": "No structural model element specified",
    "ForecastHorizon": "Forecast horizon",
    "P": "AR part order",
    "PS": "Seasonal AR part order",
    "Q": "MA part order",
    "QS": "Seasonal MA part order",
    "SeasonalPeriod": "Period of the seasonal component"
  },
  "components/forecast/ARIMAXTasks": {
    "ARIMAXProcessCaption": "%s model training",
    "ErrNotARIMAXTaskContext": "Internal error: context is not the training context for ARIMAX model",
    "MessageCurrentModel": "ARIMAX: AIC of the current selected %s model: %.8f",
    "MessageNewModel": "ARIMAX: AIC of %s model: %.8f",
    "MessageSelectedModel": "ARIMAX: %s model selected, number of degrees of freedom: %d"
  },
  "components/forecast/ARIMAXTeacher": {
    "ErrInvalidTrainData": "The model cannot be trained on the basis of the specified data",
    "ErrNoTrainData": "No train data"
  },
  "components/forecast/ARIMAXTrainingResults": {
    "ErrDuplicateNodeIndex": "Node #%d is duplicate in the configuration",
    "ErrParentNodeNotLoaded": "Parent node #%d not found in configuration",
    "ErrSetTrainedWithoutModel": "Attempt to set the \"trained\" status not specifying the selected model",
    "TotalSamples": "Total samples",
    "TotalSelectedSamples": "Total selected samples",
    "TrainSamples": "Samples in the training set"
  },
  "components/forecast/ForecastEngine": {
    "AdjustedR2": "Adjusted determination coefficient",
    "AIC": "Akaike information criterion",
    "AICc": "Akaike information criterion corrected",
    "BIC": "Bayesian information criterion",
    "CoefficientColumn": "Coefficient",
    "CoefficientTypeColumn": "Type",
    "ColumnName": "Input field name",
    "ColumnUniqueValue": "Unique value",
    "ErrInvalidFieldsSettings": "Invalid input data set field settings",
    "ErrModelWithNoParams": "Invalid model settings: no matched parameters",
    "ErrMultipleOutputsNotSupported": "%s model allows only one output field",
    "ErrNoOutputFieldsSelected": "No output data field specified",
    "ErrNotTrained": "Model not trained",
    "ErrWrongInputField": "Invalid %s input field properties, %s data kind, %s data type",
    "ErrWrongModelInput": "Input columns do not match previously trained model",
    "ForecastModelCoefficients": "Model coefficients",
    "ForecastOutputDataSet": "Model output",
    "ForecastOutputVariables": "Summary",
    "LagColumn": "Lag",
    "LBoundColumn": "%s|Lower bound",
    "ModelDF": "Number of the model degrees of freedom",
    "ParameterNameColumn": "Parameter",
    "PredictedColumn": "%s|Prediction",
    "PValueColumn": "P-value",
    "R2": "Determination coefficient",
    "ResDF": "Number of the residues degrees of freedom",
    "ResidualColumn": "%s|Approximation error",
    "SEColumn": "Standard deviation",
    "TrainAvgError": "The training set mean absolute error",
    "TrainAvgRelError": "The training set mean relative error",
    "TrainRMSError": "The training set root-mean-square error",
    "TStatColumn": "T-statistics",
    "UBoundColumn": "%s|Upper bound"
  },
  "components/forecast/ForecastVendor": {
    "VendorCaption": "ARIMAX",
    "VendorDesc": "Time series forecast using ARIMA Model able to include external factors (ARIMAX)"
  },
  "components/groupdata/GroupData": {
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoOneAggregation": "It is required to specify at least one aggregation option for \"%s\" fact",
    "FindMedianNotify": "Median calculating",
    "GroupDataNotify": "Data grouping",
    "SortNotify": "Grouped data sorting"
  },
  "components/groupdata/GroupDataVendor": {
    "VendorCaption": "Grouping",
    "VendorDesc": "Group data"
  },
  "components/javascript/JavaScriptEngine": {
    "ErrModuleFileTooBig": "%s module file cannot be loaded: the permissible file size limit is exceeded (%d > %d bytes)",
    "ErrModuleNotExists": "File of \"%s\" module not found",
    "ErrModulePath": "Failed to resolve \"%s\" module name",
    "ErrModuleSourceRead": "Error reading \"%s\" module file",
    "ErrModuleSpecifierEmpty": "No module name specified",
    "InputDataSource": "Input data source",
    "OutputDataSet": "Output data set",
    "PreviewProcess": "Data preview",
    "WarnPreviewRunning": "Preview already running"
  },
  "components/javascript/JavaScriptExecutor": {
    "ErrGetModuleSourceUnassigned": "JavaScript module contents reading function unassigned",
    "ErrGetModuleURLUnassigned": "JavaScript path resolver function unassigned"
  },
  "components/javascript/JavaScriptVendor": {
    "VendorCaption": "JavaScript",
    "VendorDesc": "JavaScript code execution"
  },
  "components/joindata/JoinData": {
    "DisplayNamePrefix": "Join",
    "ErrInvalidColNamePrefix": "\"%s\" name prefix is not a valid identifier",
    "ErrRowCountExceedMaxValue": "Row count of the result data set exceeded maximum value %d",
    "ProgressCompareIndexes": "Index mapping",
    "ProgressFormResult": "Output data set generation",
    "ProgressJoinedTableIndex": "Joined table indexing",
    "ProgressMainTableIndex": "Main table indexing"
  },
  "components/joindata/JoinDataVendor": {
    "VendorCaption": "Join",
    "VendorDescription": "Join two data sets"
  },
  "components/linregression/LinRegression": {
    "ErrWrongPreNormLength": "The normalized string size %d differs from nominal %d"
  },
  "components/linregression/LinRegressionBuilder": {
    "ErrWrongLinRegContext": "Invalid linear regression model builder context",
    "ErrWrongLinRegModel": "The trained model is not linear regression model"
  },
  "components/linregression/LinRegressionBuilderContext": {
    "ErrContextCreateNoRows": "The linear regression model builder context cannot be created for empty data set"
  },
  "components/linregression/LinRegressionEngine": {
    "ColumnDisplayName": "Input field captions",
    "ColumnName": "Input field names",
    "ColumnUniqueValues": "Unique values",
    "ErrInvalidFieldsSettings": "Invalid input data set field settings",
    "ErrMultipleOutputFields": "Only one output data field allowed",
    "ErrNoLearnData": "The training data set must contain at least two rows",
    "ErrOutputColumnNotValid": "Invalid specified output column",
    "ErrTeachNoOutputField": "No output data field specified",
    "ErrWrongInputField": "Invalid \"%s\" input field properties, \"%s\" data kind, \"%s\" data type",
    "ErrWrongOutputColumnsCount": "Exactly 1 output column must be defined, %d output columns are currently defined",
    "ErrWrongOutputField": "Invalid \"%s\" output field properties, \"%s\" data kind, \"%s\" data type",
    "Intercept": "<Intercept>",
    "LinRegTrainProcessName": "Model training",
    "ModelDF": "Number of the model degrees of freedom",
    "ModelPValue": "Model P-value",
    "RegressionCoefsNamePostfix": "|Coefficients",
    "RegressionColumn": "%s|Regression",
    "RegressionLBoundNamePostfix": "|CI lower bound",
    "RegressionPValueNamePostfix": "|Significance",
    "RegressionStdErrorNamePostfix": "|Sd. dev.",
    "RegressionTStatNamePostfix": "|T-statistics",
    "RegressionUBoundNamePostfix": "|CI upper bound",
    "TestSamples": "Samples in the test set",
    "TotalSamples": "Total samples",
    "TotalSelectedSamples": "Total selected samples",
    "TrainSamples": "Samples in the training set",
    "ValidationPartitions": "Number of validation partitions",
    "ValidationSamples": "Samples in the validation set"
  },
  "components/linregression/LinRegressionModelTree": {
    "ErrFactorIndexesPrepared": "Full factor model indexes not prepared"
  },
  "components/linregression/LinRegressionTasks": {
    "ErrNotLinRegTaskContext": "Internal error: context is not the training context for the linear regression model",
    "ErrWrongValidationPartitionCount": "Validation partition count must be more than 0 (given partition count = %d)",
    "RegBackwardAssignProcessName": "Excluding %s factor from the final model",
    "RegBackwardStepProcessName": "Stepwise selection - %s factor exclusion",
    "RegFoldSet": "Validation partition %d",
    "RegForwardAssignProcessName": "%s factor adding to the final model",
    "RegForwardStepProcessName": "Stepwise selection - %s factor adding",
    "RegPrepareData": "Preparing data before training",
    "RegTrainElnetGridProcessName": "Build model (L1-regularization coefficient = %.4f L2-regularization coefficient = %.4f)",
    "RegTrainLassoGridProcessName": "Model building (L1-regularization coefficient = %.4f)",
    "RegTrainProcessName": "%s method - model training",
    "RegTrainRidgeGridProcessName": "Model building (L2-regularization coefficient = %.4f)",
    "ValidationProcess": "Model validation"
  },
  "components/linregression/LinRegressionVendor": {
    "VendorCaption": "Linear Regression",
    "VendorDesc": "Linear regression"
  },
  "components/logregression/LogRegression": {
    "ErrWrongPreNormLength": "The normalized string size %d differs from nominal %d"
  },
  "components/logregression/LogRegressionBuilder": {
    "ErrWrongLogRegContext": "Incorrect context of the log. regression model builder",
    "ErrWrongLogRegModel": "The trained model is not log. regression model"
  },
  "components/logregression/LogRegressionBuilderContext": {
    "ErrContextCreateNoRows": "The log. regression model builder context cannot be created for empty data set"
  },
  "components/logregression/LogRegressionEngine": {
    "ActualEvent": "Event|Fact",
    "Chi2": "Chi-square",
    "ColumnDisplayName": "Input field captions",
    "ColumnName": "Input field names",
    "ColumnUniqueValues": "Unique values",
    "CVAvgCE": "Average cross-entropy in cross validation",
    "CVClsErrorPercentage": "Cross validation error percentage",
    "CVRMSError": "Root-mean-square error in cross validation",
    "ErrClassifierMultipleOutputs": "Only one output field is allowed for the classification task, %d is currently specified",
    "ErrInvalidFieldsSettings": "Invalid input data set field settings",
    "ErrNoLearnData": "The training data set must contain at least two rows",
    "ErrNotImplemented": "Functionality not implemented",
    "ErrOutputColumnNotValid": "Invalid specified output column",
    "ErrTeachNoOutputField": "No output data field specified",
    "ErrWrongInputField": "Invalid \"%s\" input field properties, \"%s\" data kind, \"%s\" data type",
    "ErrWrongOutputColumnsCount": "Exactly 1 output column must be defined, %d output columns are currently defined",
    "ErrWrongOutputField": "Invalid \"%s\" output field properties, \"%s\" data kind, \"%s\" data type",
    "ErrWrongOutputFieldNotDiscrete": "Invalid \"%s\" output field properties, \"%s\" data kind, whereas \"%s\" is only valid",
    "ErrWrongOutputUniqueCount": "Number of \"%s\" output column unique values is %d (exactly 2 required)",
    "Intercept": "<Intercept>",
    "LogRegStoreStatProcessName": "Quality indicators calculating",
    "LogRegTrainProcessName": "Model building",
    "ModelDF": "Number of the model degrees of freedom",
    "ModelPValue": "Model P-value",
    "OutputUniqueValuesNotCalculated": "Unique values of \"%s\" output column not calculated",
    "PredictedValue": "%s|Predicted value",
    "PredictionEvent": "Event|Prediction",
    "PredictionProbability": "Event probabillity|Prediction",
    "PredictionScore": "Score|Prediction",
    "RegressionCoefsNamePostfix": "|Coefficients",
    "RegressionLBoundNamePostfix": "|CI lower bound of odds ratio",
    "RegressionOddsRatioPostfix": "|Odds ratio",
    "RegressionScoreNamePostfix": "|Score",
    "RegressionStdErrorNamePostfix": "|Sd. dev.",
    "RegressionUBoundNamePostfix": "|CI upper bound of odds ratio",
    "RegressionWaldPValueNamePostfix": "|P-value of the Wald criterion",
    "RegressionWaldStatNamePostfix": "|Wald criterion",
    "TestAvgCE": "Average cross-entropy in the test set",
    "TestClsErrorPercentage": "Percentage of classification errors in the test set",
    "TestRMSError": "Root-mean-square error in the test set",
    "TestSamples": "Samples in the test set",
    "TotalSamples": "Total samples",
    "TotalSelectedSamples": "Total selected samples",
    "TrainAvgCE": "Average cross-entropy in the training set",
    "TrainClsErrorPercentage": "Percentage of classification errors in the training set",
    "TrainRMSError": "The training set root-mean-square error",
    "TrainSamples": "Samples in the training set",
    "TrainThreshold": "Model train cuttoff",
    "ValidationPartitions": "Number of validation partitions",
    "ValidationSamples": "Samples in the validation set"
  },
  "components/logregression/LogRegressionModelTree": {
    "ErrFactorIndexesPrepared": "Full factor model indexes not prepared"
  },
  "components/logregression/LogRegressionTasks": {
    "ErrNotLogRegTaskContext": "Internal error: context is not the training context for the log. regression model",
    "ErrWrongValidationPartitionCount": "Validation partition count must be more than 0 (given partition count = %d)",
    "RegBackwardAssignProcessName": "Excluding %s factor from the final model",
    "RegBackwardStepProcessName": "Stepwise selection - %s factor exclusion",
    "RegFoldSet": "Validation partition %d",
    "RegForwardAssignProcessName": "%s factor adding to the final model",
    "RegForwardStepProcessName": "Stepwise selection - %s factor adding",
    "RegPrepareData": "Preparing data before training",
    "RegTrainElnetGridProcessName": "Model building (L1-regularization coefficient = %.4f L2-regularization coefficient = %.4f)",
    "RegTrainLassoGridProcessName": "Model building (L1-regularization coefficient = %.4f)",
    "RegTrainProcessName": "%s method - model training",
    "RegTrainRidgeGridProcessName": "Model building (L2-regularization coefficient = %.4f)",
    "ValidationProcess": "Model validation"
  },
  "components/logregression/LogRegressionVendor": {
    "VendorCaption": "Logistic Regression",
    "VendorDesc": "Logistic regression"
  },
  "components/loop/LoopComponent": {
    "ErrCannotSetLinkedVariables": "Invalid operation: LinkedVariables property change",
    "ErrColumnCountChanged": "The column count in the data set differs from the previous iteration",
    "ErrColumnDataTypesChanged": "The column data types in the data set differ from the previous iteration",
    "ErrCompareValueUnassigned": "No comparison value specified for the loop termination condition",
    "ErrConditionComponentInLoopNotAllowed": "Execution of the Loop component forbidden",
    "ErrGroupColumnNotFound": "\"%s\" column used for data grouping not found",
    "ErrGroupCountMustBePositive": "Group count must be positive",
    "ErrGroupDataSourceSocketNotFound": "No port with \"%s\" identifier containing columns to group found",
    "ErrGroupDataSourceSocketNotSpecified": "No port containing columns to group specified",
    "ErrGroupSizeMustBePositive": "Group row count must be positive",
    "ErrIncompatibleTerminateCondition": "\"%s\" loop termination condition is not compatible with \"%s\" data type",
    "ErrIncorrectMaxThreadCount": "Maximum thread count must be not less than %d",
    "ErrInvalidMappedVariable": "Invalid mapped variables passed from output to input",
    "ErrIterationCountCannotBeNegative": "Iteration count cannot be negative",
    "ErrIterationCountOverflow": "Maximum allowable number of iterations exceeded: %d",
    "ErrLoopVariableCannotBeMapped": "The loop variable cannot receive at the inlet the output variable value",
    "ErrMappedVariableDuplicate": "The linked variables list contains duplicate links to \"%s\" variable",
    "ErrMappedVariableTypesMismatch": "\"%s\" and \"%s\" types of linked variables mismatch",
    "ErrNoConditionVariable": "No variable to check the loop termination condition",
    "ErrParallelProcessingError": "Error occurred while parallel loop processing",
    "ErrParallelProcessingNotSupportedInRepeatLoop": "Posttested loop does not support parallel processing",
    "ErrPortNotConfigurable": "Configuring this port is not supported",
    "ErrSocketIsNotInputDataSourceSocket": "\"%s\" port is not input port containing data set",
    "ErrSocketNotConfigured": "Port not configured",
    "ErrUnsupportedInputSocketType": "Unsupported \"%s\" port type",
    "IterationCaption": "Iteration #%d",
    "IterationConfiguration": "Saved configuration",
    "IterationConfigurationCount": "Configuration count",
    "IterationConfigurationItem": "Configuration collection item",
    "IterationErrorDetailsFieldDisplayName": "Detailed error information",
    "IterationErrorMessageFieldDisplayName": "Error message",
    "IterationIdentifierDataType": "Configuration ID data type",
    "IterationIdentifiers": "Identifier values",
    "IterationIdFieldDisplayName": "Iteration identifier",
    "IterationIndex": "Iteration index",
    "IterationStatusSocketName": "Iterations execution status",
    "IterationSuccessFlagFieldDisplayName": "Success flag field",
    "ProcessActivate": "Activating \"%s\" node",
    "ProcessAppendDataSet": "Output data set appending",
    "ProcessGroupProcessing": "Group processing",
    "ProcessInputDataSourceGrouping": "Defining groups in the source data set",
    "WarningTeachCriticalIterationCount": "Node training started with iterations count %d. Training with many iterations can cause memory overflow error."
  },
  "components/loop/LoopComponentVendor": {
    "VendorCaption": "Loop",
    "VendorDesc": "Multiple model execution based on new data"
  },
  "components/neuralnet/ClassificationReport": {
    "ErrActualPredictedSizeMismatch": "Actual and predicted array sizes mismatch",
    "ErrBetasArraySizeMismatch": "The coefficient array size for F-measure calculation mismatches the class count"
  },
  "components/neuralnet/NeuralNet": {
    "AutofitProcessCaption": "Neural network parameters selection",
    "CalcModelErrorsProcessCaption": "Quality indicators calculating",
    "CVPassProcessCaption": "Iteration %d",
    "CVProcessCaption": "Cross validation",
    "DecayDegree": "Decay degree",
    "ErrCannotContinueTraining": "You cannot continue training since the structure of the trained neural network does not correspond to the new training parameters",
    "ErrClassifierUnknownClass": "Unknown class is present in the output classifier column",
    "ErrDataSourceNumInputsMismatch": "Input data %d dimension mismatches the number of neural network inputs %d",
    "ErrInvalidNeuronKind": "Invalid neuron kind: %d",
    "ErrLayerNeuronCountMismatch": "The layer neuron count mismatches the required value %d",
    "ErrMissingOrInfiniteValue": "Only non-empty final values are allowed in the data",
    "ErrMustSetEqualLayerSizes": "Before requesting the coarse size of the neural network, it is required to set the same number of neurons in the hidden layers",
    "ErrNetworkUntrained": "You cannot perform the requested operation using the untrained neural network",
    "ErrNeuronWeightsCountMismatch": "The specified count of input neuron weights %d mismatches the required %d value",
    "ErrNoInputColumns": "Neural network input data columns not set",
    "ErrNoOutputColumns": "Neural network output data columns not set",
    "ErrNotEnoughClasses": "Representatives of at least 2 classes (currently %d) must be present in the training set",
    "ErrNoTrainData": "No train data",
    "ErrNoValidCasesSpecifiedForTraining": "No valid examples in the training set",
    "ErrRowLengthMismatch": "Length of %d row does not match the column count in matrix %d",
    "ErrTrainNetworkError": "Neural network training failed",
    "ErrWrongNeuronCounts": "One or several invalid neuron count values specified",
    "ExecuteProcessCaption": "Input data iteration",
    "FitDecayProcessCaption": "Training: decay degree = %.1f",
    "FitH0DecayProcessCaption": "Training: without hidden layers; decay degree = %.1f",
    "FitH0ProcessCaption": "Training: without hidden layers",
    "FitH1DecayProcessCaption": "Training: one hidden layer = %d neurons; decay degree = %.1f",
    "FitH1ProcessCaption": "Training: one hidden = %d layer of neurons",
    "FitH2DecayProcessCaption": "Training: first hidden layer = %d neurons; second hidden layer = %d neurons; decay degree = %.1f",
    "FitH2ProcessCaption": "Training: first hidden layyer = %d neurons; second hidden layer = %d neurons",
    "HLSize": "Number of neurons in the hidden layers (same)",
    "Nh1": "Number of neurons in the first hidden layer",
    "Nh2": "Number of neurons in the second hidden layer",
    "NHL": "Number of hidden layers",
    "PrepareProcessCaption": "Data preparing",
    "TestSetProcessCaption": "Test data set iteration",
    "TrainProcessCaption": "Neural network training",
    "ValidationSetProcessCaption": "Validation data set iteration"
  },
  "components/neuralnet/NeuralNetEngine": {
    "ActualClsIDColumn": "Class ID|Fact",
    "CVAvgCE": "Average cross-entropy in cross validation",
    "CVAvgError": "Mean absolute error in cross validation",
    "CVAvgRelError": "Mean relative error in cross validation",
    "CVClsErrorPercentage": "Cross validation error percentage",
    "CVRMSError": "Root-mean-square error in cross validation",
    "ErrInvalidClassifierResult": "Invalid classification result in row %d",
    "ErrInvalidFieldsSettings": "Invalid input data set field settings",
    "ErrMultipleOutputs": "Only one output data field allowed",
    "ErrNetworkUntrained": "Neural network is untrained",
    "ErrNoInputFields": "No input data fields specified",
    "ErrTeachNoOutputFields": "No output data fields specified In the training mode",
    "ErrUnbalancedEndUpdateNeuralNetParameters": "Call of EndUpdateNeuralNetParameters without corresponding BeginUpdateNeuralNetParameters",
    "ErrWrongModelInput": "Input columns do not match previously trained model",
    "ErrWrongModelOutput": "Output column does not match previously trained model",
    "GiniIndexColumn": "Gini index",
    "GTest_Multiple": "%s|%s|G-test",
    "GTest_Single": "%s|G-test",
    "GTestDF_Multiple": "%s|%s|Number of G-test degrees of freedom",
    "GTestDF_Single": "%s|Number of G-test degrees of freedom",
    "GTestPValue_Multiple": "%s|%s|P-value of G-test",
    "GTestPValue_Single": "%s|P-value of G-test",
    "MutualInf_Multiple": "%s|%s|Mutual information",
    "MutualInf_Single": "%s|Mutual information",
    "NeuralNetOutputDataSet": "Neural network output",
    "NeuralNetOutputVariables": "Summary",
    "PredictedClsIDColumn": "Class ID|Prediction",
    "PredictedClsProbColumn": "Posterior probability",
    "PredictedColumn": "%s|Prediction",
    "TestAvgCE": "Average cross-entropy in the test set",
    "TestAvgError": "The test set mean absolute error",
    "TestAvgRelError": "The test set mean relative error",
    "TestClsErrorPercentage": "Percentage of classification errors in the test set",
    "TestRMSError": "Root-mean-square error in the test set",
    "TestSamples": "Samples in the test set",
    "TotalSamples": "Total samples",
    "TotalSelectedSamples": "Total selected samples",
    "TrainAvgCE": "Average cross-entropy in the training set",
    "TrainAvgError": "The training set mean absolute error",
    "TrainAvgRelError": "The training set mean relative error",
    "TrainClsErrorPercentage": "Percentage of classification errors in the training set",
    "TrainRMSError": "The training set root-mean-square error",
    "TrainSamples": "Samples in the training set"
  },
  "components/neuralnet/NeuralNetParams": {
    "Decay": "Decay parameter",
    "ErrFloatValuesRelation": "\"%s\": parameter value (%f) must not exceed \"%s\" parameter value (%f)",
    "MaxEpochs": "Maximum number of epochs",
    "NRestarts": "Number of restarts",
    "RegNNOutputInf": "Output layer activation function infimum",
    "RegNNOutputSup": "Output layer activation function supremum",
    "WStep": "Minimum weight change threshold"
  },
  "components/neuralnet/NeuralNetVendor": {
    "ClassifierVendorCaption": "Neural Network (Classification)",
    "ClassifierVendorDesc": "Trains multilayer perceptron to complete the classification tasks",
    "RegressionVendorCaption": "Neural Network (Regression)",
    "RegressionVendorDesc": "Trains multilayer perceptron to complete the regression tasks"
  },
  "components/partition/PartitionEngine": {
    "OutDataSetCommon": "Common data set",
    "OutDataSetTeach": "Training output data set",
    "OutDataSetTest": "Test output data set",
    "PartitionDisplayName": "Test set"
  },
  "components/partition/PartitionVendor": {
    "VendorCaption": "Partitioning",
    "VendorDesc": "Selection of test and training sets"
  },
  "components/quality/Quality": {
    "ErrOutDataSetIndexOutOfRange": "The output data set index %d is out of [%d; %d] range",
    "GenerationOutputSets": "Output data sets generation",
    "OutData": "Output data set",
    "OutDataExtr": "Extremes",
    "OutDataNull": "Null data",
    "OutDataOut": "Outliers",
    "PaymentAdditionalFeatures": "Calculation of the additional features",
    "ScanningInputData": "Input data scanning",
    "SummaryTable": "Summary table"
  },
  "components/quality/QualityCommon": {
    "ErrUnhandledDataType": "Unhandled data type",
    "NullStrValue": "Unspecified"
  },
  "components/quality/QualityVendor": {
    "VendorCaption": "Data Quality",
    "VendorDesc": "Data quality assessment"
  },
  "components/reformcolumns/ReformColumnsVendor": {
    "VendorCaption": "Field Features",
    "VendorDesc": "Change field features"
  },
  "components/replace/ReplaceColumns": {
    "ErrSourceGuidNotFound": "No input replacement table with GUID = %s",
    "InputReplaceDataSource": "Substitution table",
    "PrecisionPostfix": " Deviation",
    "ReplacedPostfix": " Replaced",
    "ReplacePostfix": " Replace"
  },
  "components/replace/ReplaceColumnsVendor": {
    "VendorCaption": "Replace",
    "VendorDesc": "Replace field values"
  },
  "components/replace/ReplaceTable": {
    "ErrColumnsCount": "The field number in the input replacement table is less than 2",
    "ErrDataType": "The input replacement table data type does not match the replaced field data type",
    "ErrDuplicateValue": "Value is duplicated in the replacement table",
    "ErrInputDataType": "Error getting input data type for \"%s\"",
    "ErrRegExValue": "Invalid regular expression specified",
    "ErrTypeCast": "Error converting value type in the replacement table for \"%s\"",
    "ErrUsageType": "No fields in the input replacement table specified"
  },
  "components/replacevariables/ReplaceVariables": {
    "ReplacePostfix": " Replace"
  },
  "components/replacevariables/ReplaceVariablesVendor": {
    "VendorCaption": "Replace (Variables)",
    "VendorDesc": "Replace variable values"
  },
  "components/restclient/RESTClient": {
    "ErrorCodeColumn": "Error Code",
    "ErrorDescColumn": "Error Description",
    "OutputDataSet": "Service Response",
    "RequestIDOutputColumn": "Request identifier",
    "ResponseColumn": "Server response",
    "RESTClientConnection": "Connect to REST service",
    "RESTClientErrorNoID": "Error executing request:\n%s",
    "RESTClientErrorRowID": "Error executing request generated from %d row of the input data set:\n%s"
  },
  "components/restclient/RESTClientVendor": {
    "VendorCaption": "REST Request",
    "VendorDesc": "Request execution through REST service connection"
  },
  "components/sampling/SamplingVendor": {
    "VendorCaption": "Sampling",
    "VendorDesc": "Selection of representative subset"
  },
  "components/search/Search": {
    "ErrDataSourceIsNil": "Reference to data source not initialized",
    "ErrDataSourceNotActive": "Failed to start search. No data source connected",
    "ErrNoDataSource": "Failed to start search. No data source",
    "ErrNotFound": "%s = \"%s\" string not found",
    "ErrZeroCount": "Failed to start search, no records"
  },
  "components/search/TreeViewSearch": {
    "NodeCaption": "Description",
    "NodeDisplayName": "Node caption",
    "NodeIndex": "Node index",
    "NodeName": "Node name"
  },
  "components/slidingwindow/SlidingWindowVendor": {
    "VendorCaption": "Lag",
    "VendorDescription": "Transpose one or several data columns using lag"
  },
  "components/smoothing/DWT": {
    "ErrLargeOrder": "This wavelet order is not supported"
  },
  "components/smoothing/SmoothingEngine": {
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrSmoothingAlgorithmError": "Error in the smoothing algorithm",
    "ErrSmoothingLambdaIsNegative": "Lambda parameter set to negative",
    "ErrSmoothingPeriodLessThenTwo": "The smoothing period cannot be less than two",
    "SmoothingDisplayNamePostfix": "_smoothed",
    "SmoothingNotify": "Smoothing"
  },
  "components/smoothing/SmoothingVendor": {
    "VendorCaption": "Smoothing",
    "VendorDesc": "Data smoothing with wavelets"
  },
  "components/sonn/SONNEngine": {
    "ColumnNameCluster": "Cluster number",
    "ColumnNameDistance": "Distance to node",
    "ColumnNameNode": "Node number",
    "ColumnNameUniqueCoordSuffix": "|Coordinate",
    "ColumnNameUniqueValueSuffix": "|Value",
    "ErrClustersRowCountOverflow": "Row count overflow of the \"Cluster Centers\" output data set",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoModel": "Model is not trained. It is required to train the node before its applying",
    "ErrSONNIncorrectSize": "Incorrect network size for %s: %d",
    "ErrSONNTypeNotSupported": "\"%s\" type of self-organizing network not supported",
    "ErrWrongModel": "Model does not match the input data",
    "OutDataSetCenters": "Coordinates of nodes",
    "OutDataSetClusters": "Clustering",
    "PrepareDataNotify": "Data preparing",
    "SONNTrainNotify": "Network training"
  },
  "components/sonn/SONNVendor": {
    "VendorCaption": "Self-Organizing Networks",
    "VendorDesc": "Data clustering by self-organizing neural networks"
  },
  "components/sorting/SortingEngine": {
    "SortingNotify": "Data sorting"
  },
  "components/sorting/SortingVendor": {
    "VendorCaption": "Sort",
    "VendorDesc": "Data sorting"
  },
  "components/ungroupdata/UngroupData": {
    "ConfidenceBandLowerDisplayName": "Lower bound 95% CI",
    "ConfidenceBandUpperDisplayName": "Upper bound 95% CI",
    "ErrInSelectOutputFields": "No field with the ungrouped values names specified",
    "ErrInSelectQuotaCalcFields": "No field for quotas calculation selected",
    "ErrInSelectQuotaFields": "No field with quotas selected",
    "ErrInSelectTimeAxisFields": "No fields for data sequentializing selected",
    "ErrInSelectUngroupField": "Ungroupable values field not defined",
    "ErrNoLinksDefined": "No links defined for group identifiers",
    "ErrNoLinksFields": "No related fields to build AVL tree",
    "ErrPostProcessingTerminated": "Error in the algorithm ungrouping! The process has been terminated.",
    "GenerationOutputSets": "Output data sets generation",
    "GroupColumnAVLTreeBuilding": "Group initial data",
    "OutputSIDisplayName": "Seasonal index value",
    "OutputTrendDisplayName": "Trend value",
    "OutputValueAlgorithmFixed": "Fixed (algorithm)",
    "OutputValueDisplayName": "Ungrouped value",
    "OutputValueExcluded": "Excluded",
    "OutputValueInvalid": "Error",
    "OutputValueUnfixed": "Ungrouped (unfixed)",
    "OutputValueUngrouped": "Ungrouped",
    "OutputValueUserFixed": "Fixed (user)",
    "OutputValueUserFixedNotConsistent": "Fixed (user, inconsistent)",
    "OutputVTDescDisplayName": "Value type",
    "OutputVTDisplayName": "Value type code",
    "QuotaAVLTreeBuilding": "Group reference data for quota calculation",
    "QuotaAVLTreeCalc": "Quota calculation",
    "RoundedUngroupValueDisplayNamePostfix": "Rounded",
    "SeasonalIndex": "Seasonal index",
    "SupportInputDataSource": "Data for quota calculation",
    "UngroupInputDataSource": "Ungrouped data",
    "UngroupOutputDataSource": "Ungroup output",
    "UngroupQualityDisplayName": "Ungrouping quality indicator",
    "UngroupStatsDataSource": "Model quality indicators and seasonal indexes"
  },
  "components/ungroupdata/UngroupDataAVLTrees": {
    "ErrDatasetTooSparse": "Set points are too sparse for the given seasonality period",
    "ErrDuplicateGroup": "Each group in the ungroupable set must match a single line",
    "ErrEmptyGroup": "No data belonging to this group in the reference set",
    "ErrNoError": "No errors",
    "ErrNoGroupData": "Group time series is empty",
    "ErrNoSupportData": "No data suitable for ungrouping in the reference set",
    "ErrTrivialGroup": "The group consists of one element"
  },
  "components/ungroupdata/UngroupDataTimeseries": {
    "ErrOutputValueTypeOutOfRange": "Type code out of allowable ranges",
    "ErrWrongTimeseriesKeyDatatype": "Invalid time series key type"
  },
  "components/ungroupdata/UngroupDataTimeseriesModel": {
    "ErrBadlyConditionedMatrix": "(%1:d x %2:d) matrix is singular or ill-conditioned: U[%3:d;%4:d] = 0 in %0:d iteration",
    "ErrDFNotConsistent": "Failed to provide the required number of degrees of freedom",
    "ErrEngineUnassigned": "Engine not set for the ungroup model",
    "ErrOptimGradientVerificationFailed": "Analytical gradient verification failed",
    "ErrOptimIntegrityFailed": "The infinite value of the optimized function or its gradient was detected",
    "ErrSingularMatrixCol": "(%1:d x %2:d) matrix contains zero column #%3:d in %0:d iteration",
    "ErrSingularMatrixRow": "(%1:d x %2:d) matrix contains zero row #%3:d in %0:d iteration",
    "ErrSLECalcPrepare": "Error while preparing the equations system",
    "ErrSLEStructPrepare": "Error while preparing data structures of the equations system",
    "ErrSolver": "%d error when solving the equation system at iteration %d",
    "ErrUnknownTimeAxisDataType": "Unknown time field data type"
  },
  "components/ungroupdata/UngroupDataVendor": {
    "VendorCaption": "Ungroup",
    "VendorDesc": "Ungroup data"
  },
  "components/uniondata/UnionData": {
    "DisplayNamePrefix": "Union",
    "DisplayNamePrefixName": "Result column caption prefix",
    "ErrInvalidColNamePrefix": "\"%s\" name prefix is not a valid identifier",
    "ErrNoActiveInputs": "No active inputs",
    "ErrRowCountExceedMaxValue": "Row count of the result set exceeded maximum value %d",
    "JoinedDataSource": "Joined table",
    "MainDataSource": "Main table",
    "NamePrefixName": "Result column name prefix"
  },
  "components/uniondata/UnionDataVendor": {
    "VendorCaption": "Union",
    "VendorDescription": "Union of several data sets"
  },
  "components/unionvariables/UnionVariables": {
    "ErrNoActiveInputs": "No active inputs",
    "InputJoinedVariables": "Added variables",
    "InputPortsOverFlow": "Number of the input ports exceeded = maximum value %d",
    "InputVariablesOverFlow": "Number of the input variables exceeded = maximum value %d"
  },
  "components/unionvariables/UnionVariablesVendor": {
    "VendorCaption": "Variable Union",
    "VendorDesc": "Combine several sets of variables into one"
  },
  "components/variablestodata/VariablesToDataEngine": {
    "DisplayName": "Caption",
    "Name": "Name",
    "Value": "Value"
  },
  "components/variablestodata/VariablesToDataModelComponentEngine": {
    "InputVariables": "Input variables",
    "OutputDataSource": "Output data set"
  },
  "components/variablestodata/VariablesToDataVendor": {
    "VendorCaption": "Variables to Table",
    "VendorDesc": "Create data set from variables set"
  },
  "components/wsdlclient/WSDLClient": {
    "ErrorCodeColumn": "Error Code",
    "ErrorDescColumn": "Error Description",
    "FaultNameOutputColumn": "Exception name",
    "FaultsDataSet": "Exceptions (WSDL fault)",
    "ImportIDOutputColumn": "Part identifier",
    "OutputDataSet": "Service Response",
    "RawOutputColumn": "Raw Response",
    "RequestIDOutputColumn": "Request Identifier",
    "WSDLClientConnection": "Connection to SOAP service",
    "WSDLClientError": "Error executing request with %s identifier:\n%s",
    "WSDLClientErrorNoID": "Error executing request:\n%s",
    "WSDLClientErrorRowID": "Error executing request generated from row #%d of the input data set:\n%s"
  },
  "components/wsdlclient/WSDLClientBase": {
    "AdditionalDataSet": "Additional data",
    "ErrIncorrectWSDLClientRequestConfiguration": "Web service request configuration contains errors",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the node settings.",
    "ErrMapInputNodeTypesMismatch": "The data type of %s column does not match the data type of %s tree node",
    "ErrMappedNodeNotOwnedByRequestTree": "%s node for which input set column selection is requested is not included into the request tree",
    "ErrNothingSelected": "No nodes selected for service response import",
    "ErrOperationNotFound": "\"%s\" operation not found in \"%s\" endpoint description of \"%s\" service",
    "ErrOperationNotSelected": "No WSDL operation selected for request execution",
    "ErrPartElementNotFound": "\"%s\" element referenced in \"%s\" part of \"%s\" message of \"%s\" operation not found in XSD schema",
    "ErrPortNotSelected": "No WSDL service endpoint for the request execution selected",
    "ErrResponseNotConfigured": "Service response not configured",
    "ErrTransmissionPrimitiveNotSupported": "Operations with \"%s\" exchange primitive are not supported",
    "ErrUnmappedNodeNotOwnedByRequestTree": "%s node for which link reset is requested is not included into the request tree",
    "RequestDataSource": "Request data source"
  },
  "components/wsdlclient/WSDLClientVendor": {
    "VendorCaption": "SOAP Request",
    "VendorDesc": "Request execution through connection to WSDL described web service and conversion of the received response into a data set"
  },
  "Embedded/EmbeddedMain": {
    "ErrOpenURL": "Failed to go to the following address: %s",
    "LocalStorageLoadFailed": "Local Storage load failed",
    "LocalStorageSaveFailed": "Local Storage save failed",
    "UnknownException": "Unknown Exception"
  },
  "exports/database/DBExport": {
    "AddToTableNotify": "Addition of records to table",
    "DeleteFromTableNotify": "Deletion of records from table",
    "ErrColumnNotFound": "\"%s\" column not found in the data source",
    "ErrColumnTypesMismatch": "\"%s\" column type is not compatible with \"%s\" source column type",
    "ErrDataSourceSelect": "No data source mapping provided",
    "ErrDuringExportError": "Error while exporting to DB",
    "ErrFieldForDeleteNotSelected": "No fields by which data should be deleted specified",
    "ErrFieldForUpdateNotSelected": "No fields to update specified",
    "ErrFillTable": "Failed to fill \"%s\" table",
    "ErrKeyFieldForUpdateNotSelected": "No key field by which data should be updated specified",
    "ErrNotConnectedToDatabase": "No connection with database",
    "ErrSyncKeyDeletedDest": "Synchronization error: \"%s\" key field not found in the table",
    "ErrSyncKeyDeletedSource": "Synchronization error: source field not found for \"%s\" key field",
    "ErrSyncKeyTypesMismatch": "Synchronization error: \"%s\" key field type is not compatible with \"%s\" source field type",
    "ErrTableNameNotSelected": "No table name selected",
    "ErrUnknownExportType": "Unknown export type",
    "GroupDataNotify": "Data grouping",
    "UpdateRecordsNotify": "Existing table records updating"
  },
  "exports/database/DBExportVendor": {
    "VendorCaption": "Database",
    "VendorDesc": "Export to database through configured connection"
  },
  "exports/excelfile/ExportExcelFile": {
    "PropErrErrSheetName": "The excel sheet name cannot contain the following characters: ? * / [ ]",
    "PropErrLongSheetName": "Excel sheet name cannot be longer than 31 characters",
    "PropErrNoSheetName": "No sheet name specified",
    "SaveExcelBookProcess": "Saving to file",
    "WriteDataProcess": "Writing data to Excel workbook"
  },
  "exports/excelfile/ExportExcelFileVendor": {
    "VendorCaption": "Excel File",
    "VendorDesc": "Export data to Excel file"
  },
  "exports/native/ExportNative": {
    "ErrLZ4NotAvailable": "LZ4 compression not available",
    "ErrLZONotAvailable": "LZO compression not available"
  },
  "exports/native/ExportNativeVendor": {
    "VendorCaption": "Loginom Data File",
    "VendorDesc": "Export data to Loginom Data file"
  },
  "exports/textfile/ExportTextFile": {
    "CalculateColumnSizeProcess": "Column width calculating",
    "WriteDataProcess": "Writing data to file"
  },
  "exports/textfile/ExportTextFileVendor": {
    "VendorCaption": "Text File",
    "VendorDesc": "Export data to text file"
  },
  "exports/xml/ExportXML": {
    "ErrCannotProceedWithoutRootElement": "To perform the operation you must first select the root XML element for export",
    "ErrExportNotConfigured": "Export tree not configured",
    "ErrIncorrectExportConfiguration": "Errors in configuration",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the node settings.",
    "ErrMapInputNodeTypesMismatch": "The data type of %s column does not match the data type of %s tree node",
    "ErrMappedNodeNotOwnedByExportTree": "%s node for which input set column selection is requested is not included into the export tree",
    "ErrNodeDoesNotDescendFromSelectedRoot": "%s node is not a descendant of the selected %s root element",
    "ErrNodeDoesNotExist": "\"%s\" node not found in XSD schema",
    "ErrNotRootElement": "\"%s\" node is not XSD schema root element",
    "ErrNoXSDInput": "There is no XSD schema at the component input",
    "ErrRootNodeNotSelected": "No root element selected for export",
    "ErrUnmappedNodeNotOwnedByExportTree": "%s node for which link reset is requested is not included into the export tree",
    "ErrXMLExport": "Error exporting XML:\n  Error code: %d\n  %s",
    "ExportDataSetProcessCaption": "Data set exporting",
    "FileConnection": "Connect to file storage",
    "WriteXMLFileProcessCaption": "XML file writing",
    "XSDConnection": "Connect to XSD schema source"
  },
  "exports/xml/ExportXMLVendor": {
    "VendorCaption": "XML File",
    "VendorDesc": "Export data to XML file according to the specified XSD schema"
  },
  "imports/1cv8/1Cv8QueryImport": {
    "ErrInterpretValue": "Failed to convert value from query result to standard type",
    "FillDataSetProcess": "Data importing",
    "NotConnected": "Not connected to infobase",
    "OpenResultSetProcess": "Query opening",
    "PrepareFieldDefsProcess": "Query executing",
    "PreviewProcess": "Data preview"
  },
  "imports/1cv8/1Cv8QueryImportVendor": {
    "VendorCaption": "1C Query",
    "VendorDesc": "1C:Enterprise 8 - Query"
  },
  "imports/database/DBImport": {
    "ErrExecQuery": "Error executing DB query.",
    "ErrNotConnectedToDatabase": "No connection with database",
    "ErrTableNotSpecified": "Database table not specified",
    "ExecQueryProcess": "Query executing",
    "ImportDataProcess": "Data importing",
    "OpenTableProcess": "Table opening",
    "PrepareFieldList": "Field list query",
    "PreviewProcess": "Data preview"
  },
  "imports/database/DBImportVendor": {
    "VendorCaption": "Database",
    "VendorDesc": "Import from database by configured connection"
  },
  "imports/excelfile/ExcelCustomPreview": {
    "ErrLoadSheetData": "Failed to get Excel worksheet data"
  },
  "imports/excelfile/ImportExcelFile": {
    "ErrBooleanTypeCast": "Failed to convert \"%s\" value in \"%s\" field to logical value.",
    "ErrColumnExcistFmt": "\"%s\" field already exists",
    "ErrColumnInvalidIdentFmt": "\"%s\" cannot be an identifier",
    "ErrExcelNotOpen": "Operation failed, Excel file not open",
    "ErrGetRealRange": "Excel file is not open. According to the current settings it is impossible to determine the range for data import",
    "ErrInvalidExplicitRange": "Invalid range",
    "ErrNoUsedRange": "Excel workbook error, incorrect sheet range",
    "ErrOpenExcelBook": "Failed to open %s Excel file",
    "ErrParseFmt": "Error occurred while parsing line %d: %s",
    "ErrPropInvalidNamedRange": "Invalid named range",
    "ErrPropInvalidSheetName": "The excel sheet name cannot contain the following characters: ? * / [ ]",
    "ErrPropNamedRange": "Named range not specified",
    "ErrPropNamedRangeNotFound": "\"%s\" named range not found in \"%s\" file",
    "ErrPropSheetName": "Excel sheet name not specified",
    "ErrPropSheetNumber": "Incorrect Excel worksheet index",
    "ErrSheet": "Failed to find Excel sheet",
    "ErrSuggestRange": "Excel file is not open. According to the current settings it is impossible to determine the column count for import",
    "ProcessCaptionOpenExcelFile": "%s file opening",
    "ProcessCaptionReadData": "Data reading"
  },
  "imports/excelfile/ImportExcelFileVendor": {
    "VendorCaption": "Excel File",
    "VendorDesc": "Import data from Excel file"
  },
  "imports/native/DDFCommonReader": {
    "ErrHeaderReadError": "Header reading error"
  },
  "imports/native/DDFStreamReader": {
    "BadNativeStringData": "Incorrect string data",
    "OutOfMaximumRows": "File contains too many rows"
  },
  "imports/native/DDFTupleCompatibilityReader": {
    "BadNativeStringData": "Incorrect string data",
    "BadNativeVariantData": "Incorrect Variant data type",
    "CanNotConvert": "Failed to convert data to 32-bit format"
  },
  "imports/native/DDFTupleOldRowCachedConverter": {
    "BadNativeStringData": "Incorrect string data",
    "UnknownOperation": "Unknown string converter operation"
  },
  "imports/native/DDFTupleOldRowConverter": {
    "BadNativeStringData": "Incorrect string data",
    "UnknownOperation": "Unknown string converter operation"
  },
  "imports/native/DDFTupleReader": {
    "BadNativeStringData": "Incorrect string data",
    "BadNativeVariantData": "Incorrect Variant data type",
    "DifferentMetaData": "Metadata does not comply with the previously declared metadata",
    "NegativeRowsCount": "Invalid rows count %d is specified in the file header",
    "OutOfMaximumRows": "File contains too many rows"
  },
  "imports/native/DDFTupleRowConverter": {
    "BadNativeStringData": "Incorrect string data",
    "BadVariantType": "Unsupported Variant variable type",
    "CanNotConvert": "Failed to convert data to 32-bit format",
    "UnknownOperation": "Unknown string converter operation",
    "VariantArrayNotSupported": "Unsupported arrays in Variant variables",
    "VariantByRefNotSupported": "Unsupported Variant byRef variables",
    "VariantTypeNotSupported": "Variant variables of this type are not supported"
  },
  "imports/native/ImportNative": {
    "ErrFileFormat": "Not Loginom Data file",
    "ErrSignature": "Signature mismatch",
    "ErrSystemUnsupported": "Bitness not supported",
    "ErrVersion": "Incorrect version",
    "WarnCompatibilityMode": "File was opened in compatibility mode"
  },
  "imports/native/ImportNativeVendor": {
    "VendorCaption": "Loginom Data File",
    "VendorDesc": "Import data from Loginom Data file"
  },
  "imports/textfile/ImportTextFile": {
    "ErrBooleanTypeCast": "Failed to convert \"%s\" value in \"%s\" column to logical value.",
    "ErrDateTimeTypeCast": "Failed to convert \"%s\" value in \"%s\" column to date/time.",
    "ErrFloatTypeCast": "Failed to convert \"%s\" value in \"%s\" column to real number.",
    "ErrIntegerTypeCast": "Failed to convert \"%s\" value in \"%s\" column to integer.",
    "ErrNoData": "Error parsing text file",
    "ErrParseFmt": "Error occurred while parsing line %d: %s",
    "ErrUnsupportedCodePage": "Codepage %d not supported",
    "ErrUsedColumnDefsNotSpecified": "Imported fields not specified",
    "PrimaryKeyDisplayName": "<Key>"
  },
  "imports/textfile/ImportTextFileVendor": {
    "VendorCaption": "Text File",
    "VendorDesc": "Import data from text file"
  },
  "imports/xml/ImportXML": {
    "ErrFileNotSelected": "XML file for import not selected",
    "ErrImportNotConfigured": "Import tree not configured",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the node settings.",
    "ErrNothingSelected": "No nodes selected for import",
    "ErrNoXSDInput": "There is no XSD schema at the component input",
    "ErrXMLImport": "Error importing XML:\n  Error code: %d\n  %s",
    "FileConnection": "Connect to file storage",
    "XSDConnection": "Connect to XSD schema source"
  },
  "imports/xml/ImportXMLVendor": {
    "VendorCaption": "XML File",
    "VendorDesc": "Import data from XML file according to the specified XSD schema"
  },
  "Libraries/1CConnection/1CConnection": {
    "ErrDBPath": "Failed to get path to DB",
    "ErrLocalDBForbidden": "Connections to local databases on server are forbidden"
  },
  "Libraries/1CConnection/1Cv8Connection": {
    "ErrConnectionString": "Error in connection string",
    "ErrTestConnection": "Connection test failed",
    "NotConnected": "Not connected to infobase"
  },
  "Libraries/1CConnection/1Cv8ConnectionVendor": {
    "1Cv8ConnectionVendorCaption": "1C:Enterprise 8",
    "1Cv8ConnectionVendorDesc": "Database - 1C:Enterprise 8"
  },
  "Libraries/bgdbrtl/DB": {
    "ComponentTip": "%s [%s]",
    "ErrCommandTypeNotYetSupported": "%s type of SQL command not supported yet",
    "ErrConnectionString": "Empty connection string",
    "ErrDBPath": "Failed to get path to DB",
    "ErrExecuteProcedure": "Error executing stored procedure \"%s\"",
    "ErrExecuteQuery": "Error while SQL executing:\n%s",
    "ErrIndexColumnsNotSelect": "No columns to make an index for are specified",
    "ErrLocalDBForbidden": "Connections to local server databases are forbidden",
    "ErrOpenQuery": "Error while SQL opening :\n%s",
    "ErrParameterTypesDoNotMatch": "Parameter types do not match",
    "ErrPrepareProcedure": "Error preparing stored procedure \"%s\"",
    "ErrPrepareQuery": "SQL preparation error:\n%s",
    "ErrSetSequence": "Sequence installation error for DB. Old Sequence = %d",
    "ErrTableNameNotSelect": "No table name specified",
    "ErrTestConnection": "Connection test error:\n%s",
    "ErrUnPrepareQuery": "Error clearing prepared query"
  },
  "Libraries/bgdbrtl/UniDAC/AccessODBCUniDACDB": {
    "DatabaseTypeName": "MS Access (OLEDB)"
  },
  "Libraries/bgdbrtl/UniDAC/ExcelODBCUniDACDB": {
    "DatabaseTypeName": "MS Excel (ODBC) [UniDAC]",
    "ErrODBCExcelNotExists": "ODBC driver for Excel files not installed"
  },
  "Libraries/bgdbrtl/UniDAC/FBUniDACDB": {
    "DatabaseTypeName": "Firebird"
  },
  "Libraries/bgdbrtl/UniDAC/IBUniDACDB": {
    "DatabaseTypeName": "Interbase"
  },
  "Libraries/bgdbrtl/UniDAC/MsSQLOleDbUniDACDB": {
    "DatabaseTypeName": "MS SQL (OLE DB)"
  },
  "Libraries/bgdbrtl/UniDAC/MyUniDACDB": {
    "DatabaseTypeName": "MySQL"
  },
  "Libraries/bgdbrtl/UniDAC/ODBCDriverDescs": {
    "ErrIncorrectRegEx": "Error parsing driver name template: %s"
  },
  "Libraries/bgdbrtl/UniDAC/ODBCStringBuilder": {
    "InvalidODBCDriverName": "\"%s\" driver not registered"
  },
  "Libraries/bgdbrtl/UniDAC/ODBCUniDACDB": {
    "DatabaseTypeName": "ODBC",
    "ErrFileDSNForbidden": "Connections through file DSN are forbidden"
  },
  "Libraries/bgdbrtl/UniDAC/OracleUniDACDB": {
    "DatabaseTypeName": "Oracle"
  },
  "Libraries/bgdbrtl/UniDAC/PostgresUniDACDB": {
    "DatabaseTypeName": "PostgreSQL"
  },
  "Libraries/bgdbrtl/UniDAC/SQLiteUniDACDB": {
    "DatabaseTypeName": "SQLite",
    "ErrBlankConnectionString": "Empty connection string",
    "ErrNotCursor": "The last command in SQL script does not return the cursor",
    "SQLiteError": "SQLite error: ",
    "SQLiteFuncOverridingNotSupported": "Function override for SQLite versions below 3.7.3 not supported"
  },
  "Libraries/bgdbrtl/UniDAC/UniDACDB": {
    "Direct": "Do not use DBMS client",
    "ErrNotOwnSession": "Session does not belong to the database",
    "ServerListInaccessible": "List of DBMS servers unavailable"
  },
  "Libraries/bgrtl/BigSet": {
    "ErrBitsIndex": "Bit index is out of range",
    "ErrStringIsNotSet": "\"%s\" string is not a valid set view",
    "ErrSubSetPowerIsZerro": "Attempt to extract all subsets with the power less than 0 or more than the set power as such",
    "IndexesDesc": "Array of indexes",
    "SizeDesc": "Set power"
  },
  "Libraries/bgrtl/CachedDataSet": {
    "ErrRowCountLimitReached": "Maximum row count limit reached"
  },
  "Libraries/bgrtl/Classes": {
    "CountDesc": "Count",
    "ErrConfigApplyModeNotSupported": "This method of the configuration loading not supported",
    "ErrInvalidName": "\"%s\" is not a valid identifier",
    "ErrItemAlreadyExist": "%s with \"%s\" name already exists",
    "ErrItemByGuidNotFound": "%s with %s identifier not found",
    "ErrItemByIDNotFound": "%s with identifier %d not found",
    "ErrItemByNameNotFound": "%s with \"%s\" name not found",
    "ErrItemWithGuidAlreadyExist": "%s with identifier %s already exists",
    "ErrItemWithIDAlreadyExist": "%s with %d identifier already exists",
    "ErrLoadCollectionItemConfig": "Error loading collection item",
    "ErrSameItemsGuid": "\"%s\" and \"%s\" items have the same \"%s\" identifiers",
    "ErrSameItemsID": "\"%s\" and \"%s\" items have the same identifiers \"%d\"",
    "ErrSameItemsName": "\"%s\" and \"%s\" items have the same \"%s\" names",
    "ErrUnableToRecreateNamesIndex": "You cannot recreate node name index",
    "ErrVendorAlreadyRegistered": "\"%s\" vendor has already been registered",
    "ErrVendorNameConverterAlreadyRegistered": "Name converter from \"%s\" to\"%s\" vendors already registered",
    "GuidDesc": "Item Guid",
    "IDDesc": "Identifier",
    "Item": "Item",
    "ItemMetaDesc": "Item"
  },
  "Libraries/bgrtl/ClassFactory": {
    "ClassFactoryMetaDesc": "factory of objects"
  },
  "Libraries/bgrtl/ClassObjectsLocator": {
    "ErrInitChildScope": "Error initializing the context of the added object %p",
    "ErrObjectAlreadyExist": "%s already exists in %s identifier list",
    "ErrObjectNotFound": "%s does not exist in %s identifier list",
    "ObjMetaDesc": "object"
  },
  "Libraries/bgrtl/ColumnDefs": {
    "ColumnMetaDesc": "Column",
    "ErrColumnByUsageNotFound": "Usage type column \"%s\" not found",
    "ErrColumnCantBeContinuous": "\"%s\" column of \"%s\" type cannot be continuous",
    "ErrSize": "Data size must be more than or equal to zero"
  },
  "Libraries/bgrtl/ColumnDefsVendor": {
    "ColumnInfosVendorMetaDesc": "column description vendor",
    "ErrColumnTypesMismatch": "%s column type is not compatible with %s source column type",
    "ErrInvalidUsageType": "Usage type \"%s\" is not valid for the configurable column \"%s\""
  },
  "Libraries/bgrtl/ColumnInfoLinks": {
    "ErrLinkedColumnInfoNotFound": "\"%s\" named column not found",
    "ErrLinkedColumnInfoNotSpecified": "No column link set",
    "ErrLinkedColumnInfoTypesMismatch": "%s column type is not compatible with the source column type"
  },
  "Libraries/bgrtl/ColumnsMultiLinks": {
    "ErrAlienLinkedColumn": "\"%s\" field does not belong to any of the used field lists",
    "ErrCannotDeleteNotDynamicLink": "You cannot delete non-dynamic link",
    "ErrCannotLinkColumnsFromSameTable": "You cannot link \"%s\" and \"%s\" columns from the same table",
    "ErrColumnCanBeIncludedInOnlyOneLink": "\"%s\" column of table %d can only be part of a \"single\" link",
    "ErrLinkedColumnTypesMismatch": "\"%s\" and \"%s\" types of linked columns mismatch",
    "ErrLinkMustContainMainTableColumn": "The main table field must be provided while link creation",
    "ErrMaxOccursOfMultiLinksIsReached": "Maximum multiple links count reached",
    "Link": "Link"
  },
  "Libraries/bgrtl/Consts": {
    "bdtCurrent": "current date",
    "bdtData": "available data",
    "FirstLastDateFmt": "%s %s %s from %s",
    "fld0and5to20DayPeriodName": "days",
    "fld0and5to20MonthPeriodName": "months",
    "fld0and5to20QuarterPeriodName": "quarters",
    "fld0and5to20WeekPeriodName": "weeks",
    "fld0and5to20WrongPeriodName": "periods",
    "fld0and5to20YearPeriodName": "years",
    "fld2to4DayPeriodName": "day",
    "fld2to4MonthPeriodName": "month",
    "fld2to4QuarterPeriodName": "quarter",
    "fld2to4WeekPeriodName": "week",
    "fld2to4WrongPeriodName": "period",
    "fld2to4YearPeriodName": "year",
    "fldOneDayPeriodName": "Day",
    "fldOneMonthPeriodName": "month",
    "fldOneQuarterPeriodName": "quarter",
    "fldOneWeekPeriodName": "week",
    "fldOneWrongPeriodName": "period",
    "fldOneYearPeriodName": "year",
    "VersionSerialNumber": "Serial number"
  },
  "Libraries/bgrtl/Couplers": {
    "ErrModelSocketCouplerDefAlreadyCoupled": "Coupler already connected"
  },
  "Libraries/bgrtl/DataSet": {
    "ColumnDefs": "Column descriptions",
    "ContainedStatisticsCompute": "Calculate statistics",
    "ErrColOutOfRange": "Column number %d is out of [%d; %d] range",
    "ErrColumnDefsNotAssigned": "Field descriptions not initialized",
    "ErrDataSourceActive": "Data set is not in closed state",
    "ErrDataSourceClosed": "Data set is not in opened state",
    "ErrDataSourceNotConfigured": "Data set not configured",
    "ErrDataSourceNotEditing": "Data set is not in edited state",
    "ErrRowOutOfRange": "Row number %d is out of [%d; %d] range",
    "ErrUnexpectedEndUpdate": "You cannot call EndUpdate method not calling BeginUpdate first",
    "Statistics": "Statistics"
  },
  "Libraries/bgrtl/DataSetColumns": {
    "ErrDataSoureNotAssigned": "No data set reference"
  },
  "Libraries/bgrtl/DelayLoadHook": {
    "ErrInvalidDelayedProc": "No delayed loaded procedure found"
  },
  "Libraries/bgrtl/DelegateHelpers": {
    "ErrWeakDelegateTargetIsDisposed": "Event handler object disposed"
  },
  "Libraries/bgrtl/Delegates": {
    "ErrSingleConnectionPointAdvise": "Connection point supports only one connection",
    "ErrSingleConnectionPointSinkIsNil": "Connection point has no connection"
  },
  "Libraries/bgrtl/DerivedCollectionItemAspects": {
    "ErrCannotChangeDerivedCollectionItemName": "You cannot change the derived collection item name",
    "ErrCannotChangeDerivedFieldDataType": "You cannot change the derived fields data type",
    "ErrCannotDeleteDerivedCollectionItem": "You cannot delete the derived collection item name",
    "ErrCannotMoveDerivedCollectionItem": "You cannot change position of the derived collection items"
  },
  "Libraries/bgrtl/DerivedDataSet": {
    "ErrColumnTypesMismatch": "%s column type is not compatible with %s source column type",
    "ErrNoMappingForRequiredColumn": "The required input column %s has not been mapped to the output column",
    "ErrSourceColumnNotFound": "Failed to find source %s column for output %s column",
    "ErrTargetColumnWithoutSource": "The required output column %s has not been mapped to the input column"
  },
  "Libraries/bgrtl/DerivedVariables": {
    "ErrNoMappingForRequiredVariable": "The required input variable %s has not been mapped to the output variable",
    "ErrSourceVariableNotFound": "Failed to find the source variable %s for the configurable variable %s",
    "ErrTargetVariablesWithoutSource": "The input variable %s has not been mapped to the output variable",
    "ErrVariableTypesMismatch": "%s variable type is not compatible with %s source variable type"
  },
  "Libraries/bgrtl/Encoding": {
    "ErrConvertToASCII": "\"%s\" string cannot be converted to ASCII encoded string",
    "ErrUTF8ToWideCharOverflow": "Code unit %.2x is not start of UTF8 character that consists of not more than 3 code units",
    "ErrUTF8ToWideCharWrongOffset": "Code unit %.2x is not start of UTF8 character"
  },
  "Libraries/bgrtl/EnumTypInfo": {
    "ErrEnumNotRegistered": "\"%s\" enumeration not registered"
  },
  "Libraries/bgrtl/Exceptions": {
    "ErrUnknownInnerExceptionIsDisposed": "Internal unknown exception of %s type disposed",
    "ExceptionClassFmt": "EXCEPTION CLASS: %s",
    "InnerExceptionTitle": "INTERNAL EXCEPTIONS:",
    "MessageFmt": "MESSAGE: %s",
    "SenderNameFmt": "SENDER: %s",
    "StackTraceFmt": "STACK TRACE:\n%s"
  },
  "Libraries/bgrtl/ExceptUtils": {
    "ErrAbstract": "Abstract method calling %s",
    "ErrAbstractMethod": "Abstract method calling %s.%s",
    "ErrAssign": "You cannot assign property values of %s object  to the object values of the unsupported class %s",
    "ErrAssignIntf": "You cannot assign property values of %s object  to the object values of the unsupported interface",
    "ErrFloatParamIsNan": "\"%s\" parameter value equal to NaN is not allowed",
    "ErrInvalidIndex": "Index value %d of \"%s\" parameter is out of [%d; %d] range",
    "ErrMethodParamIsNull": "%s parameter of %s method must be initialized",
    "ErrMustGreaterOrEqualThan": "Value %g of \"%s\" parameter must be more than or equal to %g",
    "ErrMustGreaterOrEqualThanInt": "Value %d of \"%s\" parameter must be more than or equal to %d",
    "ErrMustGreaterThan": "Value %g of \"%s\" parameter must be more than %g",
    "ErrMustGreaterThanInt": "Value %d of \"%s\" parameter must be more than %d",
    "ErrMustLessOrEqualThan": "Value %g of \"%s\" parameter must be less than or equal to %g",
    "ErrMustLessOrEqualThanInt": "Value %d of \"%s\" parameter must be less than or equal to %d",
    "ErrMustLessThan": "Value %g of \"%s\" parameter must be less than %g",
    "ErrMustLessThanInt": "Value %d of \"%s\" parameter must be less than %d",
    "ErrOutOfRange": "Value %g of \"%s\" parameter is out of range [%g; %g]",
    "ErrOutOfRangeInt": "Value %d of \"%s\" parameter is out of [%d; %d] range",
    "ErrParamIsNull": "%s parameter must be initialized",
    "ErrPropertyIsNull": "%s property must be initialized",
    "ErrPropertyIsReadOnly": "%s property is read-only"
  },
  "Libraries/bgrtl/ExecutionContext": {
    "ErrDeleteValueMismatch": "You cannot retrieve the element with %s key from the execution context that does not match the current element in the context",
    "ErrExecutionContextAlreadyExists": "Failed to install the external execution context: context already exists",
    "ErrExistingExecutionContextIsLocal": "The execution context used is not external",
    "ErrExternalExecutionContextNotInstalled": "The external execution context not installed",
    "ErrKeyNotExist": "No element with %s key in the execution context",
    "ErrUninstallFromParallelThreadNotSupported": "The execution context uninstalling from the parallel thread is not supported while the thread in which it has been created exists"
  },
  "Libraries/bgrtl/ExportHTMLTable": {
    "ErrTableCellsOverflow": "Number of cells in the exported table exceeds the allowable maximum of %d cells",
    "ErrTableColsOverflow": "Number of columns in the exported table exceeds the allowable maximum of %d columns",
    "ErrTableRowsOverflow": "Number of rows in the exported table exceeds the allowable maximum of %d rows",
    "ErrTableTooManyCols": "Number of columns in the exported %d table exceeds the allowable maximum of %d columns",
    "ErrTableTooManyRows": "Number of rows in the exported %d table exceeds the allowable maximum of %d rows",
    "ExcelSheetDefaultName": "Sheet1"
  },
  "Libraries/bgrtl/ExportStream": {
    "ErrDataProducerCloseFail": "Error occurred while closing the data generator: %s",
    "ErrReadAfterForceStop": "You cannot read: stream was forcedly stopped."
  },
  "Libraries/bgrtl/Extensions": {
    "ErrBaseExtensionMultipleFound": "There are several extensions for %s base identifier",
    "ErrBaseExtensionNotFound": "No extension for %s base identifier found",
    "ErrDeleteExtension": "You cannot delete extension with index %d",
    "ErrExtensionAlreadyExists": "\"%s\" extension already exists",
    "ErrExtensionAlreadyInitialized": "Extension already initialized",
    "ErrExtensionsInstanceDestroyForbidden": "Explicit deletion of the extension list instance is forbidden",
    "ErrNotSupportedExtensionVendor": "%s extension not supported",
    "Extension": "Extension",
    "ExtensionVendorMetaDesc": "extension vendor",
    "ExtLoadErrConfigNotFound": "%s extension not loaded as configuration not found",
    "ExtLoadErrVendorNotFound": "Extension not loaded as %s extension vendor not found",
    "Guid": "Extension vendor Guid",
    "Item": "Item",
    "SynchronizeExtensionsQuery": "The following configured extensions differ from the original ones:\n%s.\n\nDo you want to sync all extensions?"
  },
  "Libraries/bgrtl/ExtensionsStd": {
    "DisplayFormatExtensionCaption": "Display Format"
  },
  "Libraries/bgrtl/ExternalColumnDef": {
    "ErrColumnCantBeContinuous": "\"%s\" column of \"%s\" type cannot be continuous"
  },
  "Libraries/bgrtl/FieldInfoLinks": {
    "ErrLinkedFieldInfoNotFound": "Field with %s name not found",
    "ErrLinkedFieldInfoNotSpecified": "No link to column or variable set",
    "ErrLinkedFieldInfoTypesMismatch": "%s field type is not compatible with the source field type"
  },
  "Libraries/bgrtl/FileMask": {
    "ACCDBFilesDesc": "MS Access 2007 Database",
    "AllExcelFilesDesc": "Excel files",
    "AllFilesDesc": "All files",
    "AllSQLiteFilesDesc": "SQLite database",
    "BMPFilesDesc": "Bitmaps",
    "DbfFilesDesc": "dBase files",
    "DdfFilesDesc": "DDF file",
    "DocFilesDesc": "MS Word documents",
    "EMFFilesDesc": "Extended metafile",
    "FdbFilesDesc": "Firebird database",
    "GdbFdbFilesDesc": "IB\\FB database",
    "GdbFilesDesc": "InterBase database",
    "GIFFilesDesc": "GIF format",
    "HlpFilesDesc": "Help file",
    "HtmFilesDesc": "Webpages",
    "ICOFilesDesc": "Icon",
    "JPGFilesDesc": "JPEG format",
    "LgdFilesDesc": "Loginom Data file",
    "LogFilesDesc": "Registration log files",
    "MdbFilesDesc": "MS Access database",
    "MhtFilesDesc": "Web archive, one file",
    "ODSFilesDesc": "OpenDocument spreadsheet",
    "PDFFilesDesc": "PDF documents",
    "RtfFilesDesc": "Files in RTF format",
    "SELFilesDesc": "Select files",
    "SHPFilesDesc": "Shape format",
    "SQBFilesDesc": "Query designer files",
    "SQLFilesDesc": "SQL files",
    "SupportedExcelFilesDesc": "Excel files",
    "SupportedLgdFilesDesc": "Loginom Data files",
    "SysFilesDesc": "Configuration files",
    "TxtFilesDesc": "Text files",
    "WMFFilesDesc": "Metafile",
    "WSDLFilesDesc": "Web service description files",
    "XlsbFilesDesc": "Excel 2007 binary workbook",
    "XlsFilesDesc": "MS Excel files",
    "XlsmFilesDesc": "Excel 2007 binary macro-enabled workbook",
    "XlsxFilesDesc": "Excel 2007 workbook",
    "XMLFilesDesc": "XML files",
    "XSDFilesDesc": "XML schema files",
    "XslXsltFilesDesc": "XML transformation file"
  },
  "Libraries/bgrtl/FileStorageEngine": {
    "ErrCreateDirectory": "Failed to create folder: %s",
    "ErrCreateFile": "Failed to create file: %s",
    "ErrDirectoryAlreadyMounted": "Directory with %s name is already mounted",
    "ErrDirectoryNotExist": "\"%s\" directory does not exist",
    "ErrFileAccess": "Error accessing file: %s",
    "ErrFileStorageNotConnected": "File storage not connected",
    "ErrInvalidBackupFileName": "Invalid backup file name: %s",
    "ErrInvalidCurrentDirectory": "Invalid current directory: %s",
    "ErrInvalidMountedDirectoryName": "Invalid mounted directory name: %s",
    "ErrMountedDirectoryPathIsNotAbsolutePath": "The specified path to the mounted directory is not an absolute pat: \"%s\"",
    "ErrNoMountedDirectories": "No directories mounted",
    "ErrOpenFile": "Failed to open file: %s",
    "ErrParentFileStorageNotConnected": "Root file storage not connected",
    "ErrTestConnection": "Connection test error:\n%s"
  },
  "Libraries/bgrtl/FormatHook": {
    "Args": "Parameters",
    "ErrFormat": "Format error",
    "Format": "Format",
    "Message": "Error"
  },
  "Libraries/bgrtl/HTML": {
    "ErrItemAlreadyExists": "CSS item with \"%s\" name already exists",
    "ErrItemByNameNotFound": "CSS element with \"%s\" name not found",
    "ExcelSheetDefaultName": "Sheet1"
  },
  "Libraries/bgrtl/InterfacesScope": {
    "ErrInitializeChild": "Error initializing context of object %p",
    "ErrInterfacesScopeAlreadyInitialized": "Contect container already initialized",
    "ObjectNotFound": "Context does not contain the object with %s identifier"
  },
  "Libraries/bgrtl/IntfClasses": {
    "ErrAlienItem": "The processed item does not belong to the specified list"
  },
  "Libraries/bgrtl/IntfStream": {
    "ErrStreamIsReadOnly": "The data stream is open in the read-only mode",
    "ErrStreamReadBuffer": "When reading bytes from the data stream, %d was read instead of %d",
    "ErrStreamReadBufferInvalidParams": "Invalid parameter values when reading from the data stream: Length = %d; Count = %d; Offset = %d",
    "ErrStreamReadBufferLength": "When reading from the data stream, the size of the resulting buffer %d is less than the number of bytes required for reading %d",
    "ErrStreamSeekOutOf2GbRange": "When moving, the cursor of the data stream went beyond 2 GB, it is required to use the 64th analog of the function",
    "ErrStreamWriteBuffer": "When writing bytes to the data stream, %d was written instead of %d",
    "ErrStreamWriteBufferInvalidParams": "Invalid parameter values when writing to the data stream: Length = %d; Count = %d; Offset = %d",
    "ErrStreamWriteBufferLength": "When writing to the data stream, the size of the initial buffer %d is less than the number of bytes required for writing %d"
  },
  "Libraries/bgrtl/LinkClnt": {
    "ErrUnLock": "UnLock method was called without Lock method"
  },
  "Libraries/bgrtl/LinkSrvr": {
    "LockError": "UnLock method was called without Lock method",
    "UpdateError": "EndUpdate method was called without BeginUpdate method"
  },
  "Libraries/bgrtl/MathUtils": {
    "ErrBadMatrix": "Two-dimensional dynamic array is not rectangular matrix",
    "ErrDeterminantIsZero": "It is impossible to calculate the inverse matrix: determinant is zero.",
    "ErrDispersionIsZero": "It is impossible to calculate the correlation matrix:  variance of one of the values is zero",
    "ErrMultMatrixVectDimMismatch": "You cannot multiply matrix by vector with a different number of matrix columns and vector length.",
    "ErrNotSqrMatr": "The coefficient matrix must be a square matrix.",
    "ErrQuickSelectLeftRight": "The left bound %d has been set higher than the right one %d in QuickSelect function",
    "ErrRegressPowerAndDataErr": "To provide proper functioning of the regression function it is required to satisfy the inequality 0 <= \"polynomia degree\" < \"data points count\".",
    "ErrRegressXYDimMismatch": "The length of X vector must equal the length of Y vector",
    "ErrSLAEDimMismatch": "The vector length of the intercept terms must coincide with the row count of the coefficient matrix."
  },
  "Libraries/bgrtl/OpenArray": {
    "ErrVariantToVarRec": "Failed to convert the Variant variable to the TVarRec value due to the unsupported data type %d of the Variant variable",
    "ErrVarRecToVariant": "Failed to convert the TVarRec variable to the Variant value due to the unsupported data type %d of the TVarRec variable"
  },
  "Libraries/bgrtl/OperationBracketsAssist": {
    "ErrActionAlreadyBeginning": "Action has already been started",
    "ErrActionCookieInvalidOwner": "The object action Cookie belongs to another object",
    "ErrActionNotBeginning": "Action hasn't been started",
    "ErrOwnerDiposedBeforeActionCookie": "The object has been disposed before the object action Cookie"
  },
  "Libraries/bgrtl/ProgressTracker": {
    "ErrCannotChangeMaxSavedProcessCount": "You cannot change the maximum count of saved processes: buffer of saved processes has already been used",
    "ErrUnableAddChildToTerminatedProcess": "You cannot add subprocess to the incorrectly terminated process"
  },
  "Libraries/bgrtl/QueueException": {
    "ErrAggregateExceptionMessage": "Exceptions occurred while processing",
    "ErrGetExceptionClassFunctionAlreadyAssigned": "GetExceptionClass function already initialized",
    "ErrGetExceptionIDFunctionAlreadyAssigned": "GetExceptionID function already initialized",
    "ErrQueueExceptionEndUnexpected": "Attempt to end the queued exception block handling without its start"
  },
  "Libraries/bgrtl/Random": {
    "ErrBuildMSequenceErr": "The required array length must not exceed the upper bound of the random numbers.",
    "ErrMSequenceCountOutOfBounds": "The required M-sequence length must be more than 0",
    "ErrMSequenceSetValueErr": "The shift register value cannot be equal to zero or exceed the sequence length.",
    "ErrParamMustLessOrEqualThanParam": "Value %g of \"%s\" parameter must be less than or equal to value %g of \"%s\" parameter",
    "RandSeed": "Initial value of random number"
  },
  "Libraries/bgrtl/ScalarUtils": {
    "ErrScalarToValue": "Error converting value from the scalar data type",
    "ErrValueToScalar": "Error converting value to the scalar data type"
  },
  "Libraries/bgrtl/SemverUtils": {
    "BuildMetadata": "built metadata",
    "ErrCaretRangeVersionMaskFormat": "Version mask must have the following format: ^Major[.Minor[.Patch[-Pre-releaseVersion]]]",
    "ErrIdentifierContainsInvalidCharacter": "\"%s\" identifier contains invalid character: %s",
    "ErrInvalidVersionMask": "\"%s\" is not a valid version mask",
    "ErrInvalidVersionNumber": "\"%s\" is not a valid version number",
    "ErrTildeRangeVersionMaskFormat": "Version mask must have the following format: ~Major[.Minor[.Patch[-Pre-releaseVersion]]]",
    "ErrVersionFormat": "Version must have the following format: Major.Minor.Patch[-Pre-releaseVersion][+Built Metadata]",
    "ErrVersionPartContainsEmptyIdentifier": "\"%s\" part contains an empty identifier: \"%s\"",
    "ErrVersionPartHasLeadingZero": "\"%s\" version number element contains leading zero",
    "ErrVersionPartIsEmpty": "\"%s\" part is an empty string",
    "ErrVersionPartIsNegative": "\"%s\" version number element is negative",
    "ErrXRangeVersionMaskFormat": "Version mask must have the following format: [Major.[Minor.]]*",
    "PreReleaseVersion": "prerelease version"
  },
  "Libraries/bgrtl/ServiceVariables": {
    "ErrServiceVariablesAlreadyInitialized": "Service variables have already been initialized"
  },
  "Libraries/bgrtl/Singleton": {
    "ErrObjectDeleteRefCount": "You cannot delete the object of %s class due to interface links to it: %d",
    "ErrSingletonInstanceDestroyForbidden": "Explicit deletion of the single instance of %s class is forbidden",
    "ErrUnexpectedRelease": "Attempt to reduce the interface links number not first increasing this number first"
  },
  "Libraries/bgrtl/SparseArray": {
    "ErrItemNotExist": "Item with index %d does not exist"
  },
  "Libraries/bgrtl/StatisticConstraintsVariableExtension": {
    "StatisticConstraintsVariableExtensionCaption": "Statistic Constraints"
  },
  "Libraries/bgrtl/Statistics": {
    "ComputeStatistics": "Calculate statistics",
    "ErrDataSourceNotAssigned": "No data set reference",
    "ErrNullsNotAllowed": "Null values are not allowed (null value in \"%s\" column)",
    "ErrProcessKeptStatistics": "Errors occurred while calculating the list of unique values",
    "ErrProcessKeptStatisticsNonExistentNull": "Previously missing null value was found in \"%s\" field",
    "ErrProcessKeptStatisticsNonExistentValue": "Previously missing null value \"%s\" was found in \"%s\" field",
    "ErrStatisticsBuildCookieInvalidOwner": "The statistics builder Cookie belongs to another object",
    "ErrStatisticsBuildCookieIsNil": "Attempt to complete the calculation completion operation with null reference to the statistics builder Cookie"
  },
  "Libraries/bgrtl/StatUniqueValues": {
    "ErrLoadRefCount": "The array length of the values count does not match the unique values count",
    "ErrNotImplemented": "This functionality not implemented",
    "ErrOrderIndexesLength": "The index array length does not match the unique values count",
    "ErrWrongSyncClass": "Invalid synchronization source class. Expected instance of %s class, actually %s"
  },
  "Libraries/bgrtl/StrUtils": {
    "ErrCodePageNotExist": "Codepage number %d does not exist",
    "ErrInvalidBoolean": "\"%s\" string cannot be converted to the boolean value",
    "ErrInvalidDateTime": "\"%s\" string cannot be converted to the date/time value",
    "ErrInvalidFloat": "\"%s\" string cannot be converted to the real type value",
    "NullValue": "<Null>"
  },
  "Libraries/bgrtl/SyncObjs": {
    "ErrSlimReadWriteLockDebugDowngradeToRead": "You cannot decreaase the lock level of synchronizer %p from write lock to read lock without first increasing the level",
    "ErrSlimReadWriteLockDebugFinalized": "Synchronizer %p finalized",
    "ErrSlimReadWriteLockDebugLockRead": "You cannot lock for reading synchronizer %p that has already been locked from the same stream",
    "ErrSlimReadWriteLockDebugLockWrite": "You cannot lock for writing synchronizer %p that has already been locked from the same stream",
    "ErrSlimReadWriteLockDebugTryUpgradeToWrite": "You cannot increase the lock level of synchronizer %p from read lock to write lock without first locking it for reading",
    "ErrSlimReadWriteLockDebugTryUpgradeToWriteSameThread": "Incorrect call of the method required to increase the synchronizer lock level %p from read lock to write lock",
    "ErrSlimReadWriteLockDebugUnLockRead": "You cannot release read lock from synchronizer %p without first blocking it for reading",
    "ErrSlimReadWriteLockDebugUnLockWrite": "You cannot release write lock from synchronizer %p without first blocking it for writing",
    "ErrSlimReadWriteLockDowngradeToRead": "Synchronizer %p downgrade error from write lock to read lock",
    "ErrSlimReadWriteLockFinalize": "Synchronizer %p cannot be deleted as it has been still being used",
    "ErrSlimReadWriteLockLockRead": "You cannot lock synchronizer %p for reading",
    "ErrSlimReadWriteLockLockWrite": "You cannot lock synchronizer %p for writing",
    "ErrSlimReadWriteLockUnLockRead": "Error releasing read locks of synchronizer %p",
    "ErrSlimReadWriteLockUnLockWrite": "Error releasing write locks of synchronizer %p",
    "ErrSpinLockFinalize": "Synchronizer %p cannot be used as it has already been finalized",
    "ErrWaitCount": "Invalid count of %d objects for waiting operation"
  },
  "Libraries/bgrtl/SysHeap": {
    "ErrObjectDeleteRefCount": "You cannot delete the object of %s class due to interface links to it: %d"
  },
  "Libraries/bgrtl/System": {
    "ErrConvertCharToAnsiChar": "Failed to convert %s Unicode character with code %d to Ansi character",
    "ErrConvertDateTimeToBool": "Failed to convert the Date/time value %g to the boolean value",
    "ErrConvertDateTimeToInt": "Failed to convert the Date/time value %g to integer",
    "ErrConvertFloatToBool": "Failed to convert the real value %g to the boolean value",
    "ErrConvertFloatToDateTime": "Failed to convert the real value %g to the Date/time value",
    "ErrConvertFloatToInt": "Failed to convert the real value %g to integer",
    "ErrConvertIntToDateTime": "Failed to convert the integer value %d to the Date/time value",
    "ErrConvertIntToFloat": "Failed to convert the integer value %d to the real number without accuracy loss",
    "ErrConvertIntToSet": "Failed to convert number %d of %d bits to the set of %d bits",
    "ErrConvertSetToInt": "Failed to convert the set of %d bits to the number of %d bits",
    "ErrDestroyCallForbidden": "Direct call of destructor is forbidden",
    "ErrFIsProxyObjectFunctionAlreadyAssigned": "IsProxyObject function already initialized",
    "ErrGetProxyObjectIdFunctionAlreadyAssigned": "GetProxyObjectId Function already initialized",
    "ErrIIDNotSupported": "Interface with %s identifier not supported by the object",
    "ErrInterfaceNotSupported": "%s interface not supported by object",
    "ErrInvalidClassTypecast": "The object is not a descendant of %s class",
    "ErrInvalidGUID": "Failed to convert \"%s\" row to GUID",
    "ErrMaxEndThreadProcCountReached": "You cannot register more than %d procedures of finalization for a stream",
    "ErrObjectDeleteRefCount": "You cannot delete the object of %s class due to interface links to it: %d",
    "ErrObjectIsNil": "Null object reference"
  },
  "Libraries/bgrtl/SysUtils": {
    "ErrCopyPasteRecursive": "\"%s\" folder cannot be copied into itself",
    "ErrFileMapping": "\"%s\" file mapping error"
  },
  "Libraries/bgrtl/TextStream": {
    "ErrBadUnicodeStream": "Source data stream has invalid Unicode format",
    "ErrReadAfterEnd": "Attempted to read outside the file",
    "ErrStreamNotAssigned": "Source data stream not initialized"
  },
  "Libraries/bgrtl/ThreadPool": {
    "ErrCannotChangeParams": "You cannot change the thread pool parameters upon start of its applying",
    "ErrCannotWaitForSelf": "You cannot wait for completion of the same task inside the task",
    "ErrJoin": "One or several subtasks failed",
    "ErrThreadPoolDestroyed": "The task cannot be completed because the thread pool containing it has been deleted",
    "ErrWorkItemIsNull": "Reference to task object not initialized"
  },
  "Libraries/bgrtl/TimeZones": {
    "ErrCantOpenKey": "Error attempting to read %s registry key: %s (error code %d)"
  },
  "Libraries/bgrtl/Trees": {
    "ErrTreeWalk": "This tree walk implementation is missing",
    "ErrUnableToRecreateNamesIndex": "You cannot recreate node name index",
    "NodeIndexDesc": "Node index",
    "NodeMetaDesc": "Node",
    "RootDesc": "Root node",
    "RootDisplayName": "Root",
    "SubNodesDesc": "Subnodes"
  },
  "Libraries/bgrtl/TuneDataSource": {
    "ErrInputColumnInfoNotFound": "Failed to find source %s column for configurable %s column",
    "ErrInputColumnInfoTypesMismatch": "%s column type is not compatible with %s source column type",
    "ErrInvalidUsageType": "Usage type \"%s\" is not valid for the configurable column \"%s\""
  },
  "Libraries/bgrtl/TuneVariables": {
    "ErrInvalidUsageType": "Usage type \"%s\" is not valid for the configurable variable \"%s\"",
    "ErrSourceVariableAssigned": "You cannot edit the custom variable value for which the source variable is set",
    "ErrSourceVariableNotFound": "Failed to find the source variable %s for the configurable variable %s",
    "ErrVariableTypesMismatch": "%s variable type is not compatible with %s source variable type"
  },
  "Libraries/bgrtl/Tuple": {
    "BadArrayVariantType": "Unsupported Variant array variable type",
    "BadNativeArrayStringData": "Invalid relative string reference format",
    "BadNativeData": "Incorrect data",
    "BadNativeStringData": "Incorrect string data",
    "BadVariantStringData": "Incorrect format of Variant variable string data",
    "BadVariantType": "Incorrect format of Variant variable",
    "IncompatibleTuples": "Tuple structures are incompatible",
    "VariantArrayNotSupported": "Unsupported arrays in Variant variables",
    "VariantByRefNotSupported": "Unsupported Variant byRef variables",
    "VariantTypeNotSupported": "Variant variables of this type are not supported"
  },
  "Libraries/bgrtl/TupleStrUtils": {
    "BadNativeStringData": "Incorrect string data"
  },
  "Libraries/bgrtl/TupleVarUtils": {
    "BadNativeArrayStringData": "Incorrect Variant array string data",
    "BadVariantArrayData": "Incorrect Variant array data",
    "BadVariantData": "Incorrect Variant data type",
    "BadVariantType": "Unsupported Variant variable type",
    "CanNotConvert": "Failed to convert data to 32-bit format"
  },
  "Libraries/bgrtl/TypedLists": {
    "Item": "Item"
  },
  "Libraries/bgrtl/TypInfo": {
    "ErrEnumVendorInfoManagerNotRegistered": "Enumeration description manager not registered",
    "ErrTypeInfoVariableManagerNotRegistered": "Variable manager for %s type not registered"
  },
  "Libraries/bgrtl/UniqueValues": {
    "ErrNullAsValueChangeForbidden": "NullAsValue parameter value of a non-empty list of unique values cannot be changed",
    "ErrNullsNotAllowed": "Addition of the missing values to the unique values list is forbidden",
    "ErrValueAlreadyExists": "\"%s\" value already exists in the list of unique values"
  },
  "Libraries/bgrtl/UniqueValuesData": {
    "Data": "Data",
    "UniqueValuesDataAlreadyInitialized": "Unique value data has already been initialized"
  },
  "Libraries/bgrtl/UpdateHelpers": {
    "ErrEndUpdateUnexpected": "Attempt to complete the update process without its start",
    "ErrLockCookieInvalidOwner": "The locked object Cookie belongs to another object",
    "ErrLockCookieIsNil": "Attempt to complete the operation with null reference to the locked object Cookie",
    "ErrUnlockUnexpected": "Attempt to unlock the object that has not been previously locked",
    "ErrUpdateCookieInvalidOwner": "The updated object cookie belongs to another object",
    "ErrUpdateCookieIsNil": "Attempt to complete the operation with null reference to the updated object Cookie"
  },
  "Libraries/bgrtl/Utils": {
    "DaysNick": "days",
    "ErrContainerAlreadyIncludeClass": "Container already includes %s class",
    "ErrDataSourceIsNil": "No reference to %s data source",
    "ErrDataSourceNotActive": "%s data source is not active",
    "ErrInvalidHexStr": "\"%s\" string is not a valid view of the sexadecimal number",
    "ErrInvalidVarType": "\"%s\" is not a string view of TVarType value",
    "ErrIsNotValidSet": "\"%s\" string is not a valid set view"
  },
  "Libraries/bgrtl/VariableDefs": {
    "ErrVariableByUsageNotFound": "Variable with \"%s\" usage type not found",
    "VariableMetaDesc": "Variable"
  },
  "Libraries/bgrtl/VariableInfoLinks": {
    "ErrLinkedVariableInfoNotFound": "Variable with %s name not found",
    "ErrLinkedVariableInfoNotSpecified": "No reference to variable specified",
    "ErrLinkedVariableInfoTypesMismatch": "%s variable type is not compatible with the source variable type"
  },
  "Libraries/bgrtl/Variables": {
    "ErrVariablesAlreadyEditing": "Variables already in the editing process",
    "ErrVariablesNotActive": "Variables not active",
    "ErrVariablesNotConfigured": "Variables not configured",
    "ErrVariablesNotEditing": "Variables not editable",
    "VariableElements": "Variables list"
  },
  "Libraries/bgrtl/VariablesMultiLinks": {
    "ErrAlienLinkedVariable": "\"%s\" variable does not belong to any variable list being used",
    "ErrCannotDeleteNotDynamicLink": "You cannot delete non-dynamic link",
    "ErrCannotLinkVariablesFromSameTable": "You cannot link \"%s\" and \"%s\" variables from the same table",
    "ErrLinkedVariableTypesMismatch": "\"%s\" and \"%s\" types of linked variables mismatch",
    "ErrLinkMustContainMainTableVariable": "When creating link, the main table variable must be provided",
    "ErrMaxOccursOfMultiLinksIsReached": "Maximum multiple links count reached",
    "ErrVariableCanBeIncludedInOnlyOneLink": "\"%s\" variable of table %d can only be part of a \"single\" link",
    "Link": "Link"
  },
  "Libraries/bgrtl/VariablesVendor": {
    "ErrInvalidUsageType": "Usage type \"%s\" is not valid for the configurable variable \"%s\"",
    "ErrVariableTypesMismatch": "%s variable type is not compatible with %s source variable type",
    "VariableInfosVendorMetaDesc": "variable description vendor"
  },
  "Libraries/bgrtl/VarUtils": {
    "ErrConvertStrToType": "Error converting \"%s\" string to %s value",
    "ErrConvertToOpenArrayInvalidParams": "Invalid parameter values when converting the Variant vector to the open array: Length(Result) = %d; Length(Value) = %d; Count = %d; Offset = %d",
    "ErrInvalidBoolean": "\"%s\" string cannot be converted to the boolean value"
  },
  "Libraries/bgrtl/Vendors": {
    "ErrObjectNotFound": "%s does not exist in %s identifier list",
    "VendorGroupMetaDesc": "vendor group",
    "VendorMetaDesc": "vendor"
  },
  "Libraries/bgrtl/ZipArchive": {
    "ErrArchiveFormat": "Archive damaged, failed to open",
    "ErrArchiveNotOpen": "Archive not open",
    "ErrCompressErr": "Data compression error",
    "ErrCompressStream": "Compressed data stream error",
    "ErrCreateReadStream": "You cannot create a read stream until the write stream is finished",
    "ErrCreateWriteStream": "Failed to create the write stream",
    "ErrDeleteFilr": "Failed to update file headers",
    "ErrDirectoryEndRecordx64": "Failed to find directories in archive",
    "ErrFileExists": "%s file already exists in the archive",
    "ErrIdentName": "File under %s name already exists in the archive",
    "ErrIndexOutOfRange": "Out of range index",
    "ErrMultipleTransactions": "Adding several files to the archive in parallel is not supported",
    "ErrReopenArchive": "Failed to constantly open archive",
    "ErrReWriteLocalFileHeader": "Error updating local file header",
    "ErrSeekRead": "You can only move forward in the data stream",
    "ErrSeekWrite": "You cannot move along the data stream",
    "ErrWriteAfterEnd": "Stream already completed",
    "ErrWrongHMAC": "Data encryption error",
    "ErrWrongPassword": "Wrong password"
  },
  "Libraries/ChakraCore/ChakraClasses": {
    "ErrDefineProperty": "Failed to set \"%s\" property",
    "ErrDisposeRuntime": "Error disposing JavaScript runtime environment: \"%s\"",
    "ErrGetModuleSourceUnassigned": "JavaScript module contents reading function unassigned",
    "ErrMessageQueue": "Unhandled exception when queuing JavaScript events",
    "ErrMessageUnhandledPromiseRejection": "Unhandled exception when tracking rejected Promise",
    "ErrOriginalDll": "Operation is not supported. Inncompatible version of ChakraCore library is used.",
    "ErrRaiseException": "Unhandled exception inside JavaScript built-in function: \"%s\"",
    "ErrRaiseModuleException": "Unhandled exception when loading JavaScript module",
    "ErrTooFewArgs": "Too few arguments were called to %s function (%d whereas %d is minimum value)",
    "ErrTooManyArgs": "Many arguments were called to %s function (%d whereas %d is maximum value)",
    "ErrUnhandledPromiseRejected": "Unhandled error in Promise"
  },
  "Libraries/ChakraCore/ChakraCommonJS": {
    "ErrGetModuleSourceUnassigned": "JavaScript module download function unassigned",
    "ErrGetModuleURLUnassigned": "JavaScript module paths resolution function unassigned"
  },
  "Libraries/ChakraCore/ChakraRunRes": {
    "BadSerializedScript": "Service JavaScript code in %s resource incorrectly serialized, non-serialized code executed",
    "ErrResNotFound": "%s resource not found",
    "ErrRunServiceCode": "Failed to execute service JavaScript-code (source: %s)"
  },
  "Libraries/ChakraCore/ChakraUtils": {
    "ErrLibraryVersionNotFound": "%s ^%d.%d library not found"
  },
  "Libraries/Config/Config": {
    "ErrAttributeNotExist": "%s attribute does not exist.",
    "ErrConfigElementAlien": "The configuration element does not belong to the specified list",
    "ErrConfigElementByNameNotFound": "Configuration element with %s name not found",
    "ErrRefToClassNotInitOrWrongClass": "Collection reference has not been initialized or realtes to the invalid class",
    "ErrUnmatchedAttrType": "Accessing to %s attribute value of %s type as the value of %s type",
    "ErrUnsupportedPropertyType": "Unsupported property type",
    "ErrVectorLengthOverflow": "Length of array %d exceeds the allowable %d limit",
    "ErrWrongElementsClass": "Invalid configuration node list class"
  },
  "Libraries/Config/ConfigBackupManagers": {
    "AddConnectionCaption": "\"%s\" Connection Added",
    "AddConnectionCaptionDef": "Connection Added",
    "AddLinkCaption": "\"%s.%s\" - \"%s.%s\" Link Added",
    "AddLinkCaptionDef": "Link Added",
    "AddNodeCaption": "\"%s\" Node Added",
    "AddNodeCaptionDef": "Node Added",
    "AddVendorCaption": "\"%s\" Component Added",
    "AddVendorCaptionDef": "Component Added",
    "AddViewCaption": "\"%s\" Visualizer Added",
    "AddViewCaptionDef": "Visualizer Added",
    "ComposeGenericCaption": "Nodes Composed in \"%s\" Supernode",
    "ComposeGenericCaptionDef": "Nodes Composed in Supernode",
    "ConfigureNodeCaption": "Configured \"%s\" Node",
    "ConfigureNodeCaptionDef": "Node Configured",
    "ConfigureNodePortCaption": "Configured \"%s\" port of \"%s\" node",
    "ConfigureNodePortCaptionDef": "Node Port Configured",
    "DeleteConnectionCaption": "Delete \"%s\" connection",
    "DeleteConnectionCaptionDef": "Delete Connection",
    "DeleteLinkCaption": "\"%s.%s\" - \"%s.%s\" Link Deleted",
    "DeleteLinkCaptionDef": "Delete Link",
    "DeleteNodeCaption": "\"%s\" Node Deleted",
    "DeleteNodeCaptionDef": "Node Deleted",
    "DeleteVendorCaption": "\"%s\" Component Deleted",
    "DeleteVendorCaptionDef": "Component Deleted",
    "DeleteViewCaption": "\"%s\" Visualizer Deleted",
    "DeleteViewCaptionDef": "Visualizer Deleted",
    "ErrGenericViewsNotLoaded": "Failed to load visualizers of \"%s\" supernode",
    "ErrGenericViewsNotSaved": "Failed to save visualizers of \"%s\" supernode",
    "ErrLinkIsNil": "No link set",
    "ErrModelNodeNotRestored": "Failed to restore \"%s\" node",
    "ErrModelPackageNotExist": "The package to which the object belonged was closed",
    "ErrNodeBlocked": "\"%s\" node is locked",
    "ErrNodeIsNil": "No node specified",
    "ExplodeGenericCaption": "Expanded \"%s\" supernode",
    "ExplodeGenericCaptionDef": "Expanded supernode",
    "MoveLinkCaption": "\"%s.%s\" - \"%s.%s\" Link Moved",
    "MoveLinkCaptionDef": "Link Moved"
  },
  "Libraries/Config/ConfigBackupService": {
    "ErrBackupManagerNotRegistered": "Class not registered for \"%s\" identifier",
    "ErrBackupMarkerDelete": "Attempt to delete the current backup point: \"%s\"",
    "ErrBackupPointIncorrect": "You cannot backup changes to point: \"%s\"",
    "ErrBackupPointInitialize": "Backup point initialization error: \"%s\"",
    "ErrBackupPointRollBack": "Failed to restore point: \"%s\"",
    "ErrBackupPointUpdate": "Failed to update point: \"%s\"",
    "ErrCookieInvalidOwner": "The locked object Cookie belongs to another object",
    "ErrCookieIsNil": "Attempt to complete the operation with null reference to the locked object Cookie",
    "ErrRollBackAggregateMessage": "Errors occurred during recovery",
    "ErrRootBackupContainerFinish": "Attempt to close root recovery point"
  },
  "Libraries/Config/ConfigBinary": {
    "ErrAttrTypeMismatch": "\"%s\" attribute data type mismatch",
    "ErrInvalidUTFInt": "Error reading integer packed number",
    "ErrUnknownConfigBinaryStream": "Unsupported configuration data stream",
    "ErrUnsupportedConfigBinaryStreamVersion": "Unsupported version of configuration data stream %d",
    "ErrUnsupportedDataType": "Unsupported configuration attribute data type"
  },
  "Libraries/Config/ConfigScheme": {
    "CountDesc": "Count",
    "ErrAttributeByNameNotFound": "Schema attribute with \"%s\" name not found.",
    "ErrDuplicateAttributeName": "Type of \"%s\" schema contains more than one attribute with \"%s\" name",
    "ErrElementByNameNotFound": "Schema element with \"%s\" name was not found.",
    "ErrItemNameNotFound": "Enumeration item with \"%s\" name was not found.",
    "ErrSameAttributeAndElementName": "Type of \"%s\" schema contains attribute and element with the same \"%s\" name",
    "ErrTypeByNameNotFound": "Type with \"%s\" name not found",
    "ItemDesc": "Item",
    "ValueDesc": "Value",
    "VarDataDesc": "Data",
    "VarTypeDesc": "Type"
  },
  "Libraries/Config/ConfigUtils": {
    "ErrConfigSchemeTypesMismatch": "Type of %s schema of the loaded configuration is not compatible with the schema type of %s object"
  },
  "Libraries/Config/ConfigWrappers": {
    "ErrBaseConfigNotExists": "No base configuration when reading the derived element",
    "ErrBaseElementGuidNotExists": "No base element for the derived collection element with %s identifier",
    "ErrBaseElementIDNotExists": "No base element for the derived collection element with identifier %d",
    "ErrBaseElementNameNotExists": "No base element for the derived collection element with %s name",
    "ErrBaseElementNotExists": "No base element for the derived collection element",
    "ErrConfigElementByNameNotFound": "Configuration element with %s name not found",
    "ErrDuplicateDerivedItemGuids": "The collection contains more than one item derived from the item with %s identifier",
    "ErrDuplicateDerivedItemIDs": "The collection contains more than one item derived from the item with identifier %d",
    "ErrDuplicateDerivedItemNames": "The collection contains more than one item derived from the item with %s name",
    "ErrDuplicateSequenceItemGuids": "The collection contains more than one item with %s identifier",
    "ErrDuplicateSequenceItemIDChanged": "The collection contained base and derived items with the same identifier %d. The derived item identifier was changed to %d",
    "ErrDuplicateSequenceItemIDOverride": "The collection contained base and derived items with the same identifier %d. The base item was ignored",
    "ErrDuplicateSequenceItemIDs": "The collection contains more than one item with identifier %d",
    "ErrDuplicateSequenceItemNameChanged": "The collection contained base and derived items with the same %s identifier. The derived item was renamed to %s",
    "ErrDuplicateSequenceItemNameOverride": "The collection contained base and derived items with the same %s name. The base item was ignored",
    "ErrDuplicateSequenceItemNames": "The collection contains more than one item with %s name",
    "ErrGetConfigWriterItemByIndexNotSupported": "Getting derived configuration item by index not supported",
    "ErrGetConfigWriterItemCountNotSupported": "Getting derived item count of the configuration not supported",
    "HintConvertAtomicConfigElement": "When reading the atomic element of %s configuration converting will be performed"
  },
  "Libraries/Config/ConfigXML": {
    "ErrErrorReadingAttribute": "Failed to read the value of \"%s\"attribute",
    "ErrInvalidBoolean": "\"%s\" string cannot be converted to the boolean value",
    "ErrInvalidChar": "\"%s\" string cannot be converted to the \"character\" value",
    "ErrInvalidFloat": "\"%s\" string cannot be converted to the real type value",
    "ErrUnsupportedDataType": "Unsupported configuration attribute data type",
    "ErrXmlParseError": "Xml parsing error: \"%s\" description, string %d, column %d"
  },
  "Libraries/Config/DelphiConfigScheme": {
    "ErrBindedConfigSchemeTypeNotFound": "Binded configuration schema type for %s type not found",
    "ErrConfigSchemeTypeAlreadyExist": "%s configuration schema type has already been added to the schema",
    "ErrUnsupportedPropertyType": "Unsupported property type"
  },
  "Libraries/Config/LoadConfigContext": {
    "ErrCannotLoadSomeConfigElements": "Failed to load some configuration elements"
  },
  "Libraries/DataPartition/LearnPartition": {
    "ErrNotReadyYet": "Partition method not implemented"
  },
  "Libraries/DataPartition/Partition": {
    "AVLTreeBuilding": "Group data",
    "BiasedSamplingDesc": "Biased sampling",
    "ErrInSelectFields": "No fields have been selected that define the stratum.",
    "ErrPartitionMethod": "No sampling method specified",
    "ErrSamplingRecordCount": "The selected row count %d is out of range [%d; %d]",
    "ErrSamplingRecordPercent": "The selected row percentage %d is out of range [%d; %d]",
    "RandomSamplingDesc": "Random sampling",
    "RandomUniformSamplingDesc": "Group sampling",
    "SequenceSamplingDesc": "Sequence sampling",
    "StratifiedSamplingDesc": "Stratified sampling",
    "TeachDataSet": "Training set selection",
    "TestDataSet": "Test set selection"
  },
  "Libraries/DataPartition/PartitionIndexGenerator": {
    "ErrExternalColumnNotReady": "No external partition column specified"
  },
  "Libraries/DataSampling/Sampling": {
    "AVLTreeBuilding": "Group data",
    "BiasedSamplingDesc": "Biased sampling",
    "ErrInSelectFields": "No fields have been selected that define the stratum.",
    "ErrSamplingMethod": "No sampling method specified",
    "RandomSamplingDesc": "Random sampling",
    "RandomUniformSamplingDesc": "Group sampling",
    "SequenceSamplingDesc": "Sequence sampling",
    "StratifiedSamplingDesc": "Stratified sampling"
  },
  "Libraries/DataSampling/SamplingBuilder": {
    "SplitIntoIntervals": "Interquantile separation"
  },
  "Libraries/DBConnection/UniDAC/AccessODBCUniDACDBConnectionVendor": {
    "VendorCaption": "MS Access",
    "VendorDesc": "MS Access (ODBC) DBMS"
  },
  "Libraries/DBConnection/UniDAC/ExcelODBCUniDACDBConnectionVendor": {
    "VendorCaption": "MS Excel",
    "VendorDesc": "MS Excel File (ODBC)"
  },
  "Libraries/DBConnection/UniDAC/FBUniDACDBConnectionVendor": {
    "VendorCaption": "Firebird",
    "VendorDesc": "Firebird DBMS"
  },
  "Libraries/DBConnection/UniDAC/IBUniDACDBConnectionVendor": {
    "VendorCaption": "Interbase",
    "VendorDesc": "Interbase DBMS"
  },
  "Libraries/DBConnection/UniDAC/MsSQLOleDbUniDACDBConnectionVendor": {
    "VendorCaption": "MS SQL",
    "VendorDesc": "MS SQL (OLE DB) DBMS"
  },
  "Libraries/DBConnection/UniDAC/MyUniDACDBConnectionVendor": {
    "VendorCaption": "MySQL",
    "VendorDesc": "MySQL DBMS"
  },
  "Libraries/DBConnection/UniDAC/ODBCUniDACDBConnectionVendor": {
    "VendorCaption": "ODBC",
    "VendorDesc": "ODBC data access driver"
  },
  "Libraries/DBConnection/UniDAC/OracleUniDACDBConnectionVendor": {
    "VendorCaption": "Oracle",
    "VendorDesc": "Oracle DBMS"
  },
  "Libraries/DBConnection/UniDAC/PostgresUniDACDBConnectionVendor": {
    "VendorCaption": "PostgreSQL",
    "VendorDesc": "PostgreSQL DBMS"
  },
  "Libraries/DBConnection/UniDAC/SQLiteUniDACDBConnectionVendor": {
    "VendorCaption": "SQLite",
    "VendorDesc": "SQLite DB"
  },
  "Libraries/FileConnection/ExportFileModelComponentEngine": {
    "ErrFileNameEmpty": "File name cannot be empty"
  },
  "Libraries/FileConnection/FileConnectionVendor": {
    "FileConnectionVendorCaption": "Files",
    "FileConnectionVendorDesc": "Folder with files"
  },
  "Libraries/FileConnection/ImportFileModelComponentEngine": {
    "ErrFileNameEmpty": "File name cannot be empty",
    "ErrFileNotFound": "\"%s\" file not found"
  },
  "Libraries/Math/AutoCorrelation": {
    "ErrNullData": "Data contains null values"
  },
  "Libraries/Math/LagOpPolynom": {
    "ErrPrepareLagMatrixIncorrectData": "Incorrect data passed to PrepareLagMatrix procedure"
  },
  "Libraries/Math/SparseSolvers": {
    "ErrCreateSolver": "Error creating sparse solver with type: %s",
    "ErrNoMatrixOrRhs": "Matrix or right side not set",
    "ErrNonSquareSuperMatrixNotSupportedYet": "Solver SuperLU does not support non-square matrices yet",
    "ErrSizesNotEqual": "The matrix columns count and dimension of the right part /solution do not match",
    "ErrSuperLUSolver": "SuperLU Solver procedure failed",
    "ErrSuperMatrixNotConverted": "Matrix not converted to SuperLU format",
    "ErrWrongArrayType": "Unsupported array type: %s",
    "ErrWrongMatrixType": "Unsupported matrix type: %s"
  },
  "Libraries/Math/Splines": {
    "ErrLinearFunctionReferencePoints": "Invalid coordinates to create linear function",
    "ErrUnknownSparseSolver": "Unknown sparse solver type: %s",
    "ErrWrongSplineType": "Invalid spline type for %s: %s algorithm"
  },
  "Libraries/Math/SplineTrend": {
    "ErrBuildSeasonalIndexesSolver": "Solver error %d when calculating seasonal indices",
    "ErrBuildTrendPSpline": "Error %d of the smoothing spline calculation procedure during trend building",
    "ErrSITimePointsExceedLimits": "Data points for seasonal indexes calculation must be within the following limits [0; Period)",
    "ErrTrendSmoothingNotSet": "The trend calculation procedure was called without specifying smoothing parameters"
  },
  "Libraries/Math/StatDistributions": {
    "ErrNotImplemented": "Functionality not implemented"
  },
  "Libraries/Math/StatUtils": {
    "ErrArraysDifferentLength": "Arrays have different lengths: %d and %d",
    "ErrInvalidBinsCount": "The specified bin count %d is less than 2",
    "ErrInvalidProbabilityValue": "Probability value %f is out of range [0;1]",
    "ErrNotImplemented": "Functionality not implemented"
  },
  "Libraries/Model/ComponentInputSocketConstraintDef": {
    "ErrInterfaceNotSupported": "Input and output ports are incompatible",
    "ErrInterfaceNotSupportedEx": "%s interface not supported"
  },
  "Libraries/Model/ComponentSettings": {
    "ErrSettingsAlreadyInitialized": "Settings already initialized"
  },
  "Libraries/Model/Connections/ConnectionVendor": {
    "ConnectionVendorMetaDesc": "connection vendor"
  },
  "Libraries/Model/Connections/ConnectionVendorGroups": {
    "ConnectionVendorGroupMetaDesc": "connection vendor group",
    "DBConnectionVendorGroupCaption": "Data Sources"
  },
  "Libraries/Model/Connections/ConnectionVendorGroupsCommon": {
    "BusinessAppVendorGroupCaption": "Business Applications",
    "DatabaseVendorGroupCaption": "Databases",
    "FileDataBaseVendorGroupCaption": "File Databases",
    "UniDBIntfVendorGroupCaption": "Universal Drivers",
    "WareHouseVendorGroupCaption": "Data Warehouses",
    "WebServerVendorGroupCaption": "Web Services"
  },
  "Libraries/Model/Connections/ModelConnectionComponentEngine": {
    "Connection": "Connection"
  },
  "Libraries/Model/Connections/ModelConnectionComponentEngineVendor": {
    "ErrConnectionVendorMustBelongToGroup": "Connection vendor must belong to at least one group"
  },
  "Libraries/Model/Connections/ModelConnectionWorkFlow": {
    "ErrAlienConnectionNode": "\"%s\" connection  does not belong to the current connection list",
    "ErrDerivedConnectionVendorNotFound": "No derived component for the connection node found",
    "ErrNodeIsNotConnectionReference": "\"%s\" node  is not a connection reference",
    "ErrNodeNotInitialized": "\"%s\" node not initialized",
    "ErrNoReferencedConnection": "\"%s\" node does not refer to any connections",
    "ReplaceReferenceWithDerivedCaption": "\"%s\" Connection Node Replaced by Derived Node"
  },
  "Libraries/Model/DataSet/DataSourceModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSource": "Output data set"
  },
  "Libraries/Model/DataSet/DataSourceMultiInputDataSetOutputModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSet": "Output data set"
  },
  "Libraries/Model/DataSet/DataSourceMultiInputModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSource": "Output data set"
  },
  "Libraries/Model/DataSet/DataSourceMultiOutputModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSource": "Output data set"
  },
  "Libraries/Model/DataSet/DataSourceOutputSocket": {
    "DataSource": "Data set"
  },
  "Libraries/Model/DataSet/DataSourceVariablesMultiInputDataSetOutputModelComponentEngine": {
    "InputVariables": "Input variables"
  },
  "Libraries/Model/DataSet/DataSourceVariablesMultiInputModelComponentEngine": {
    "InputVariables": "Input variables"
  },
  "Libraries/Model/DataSet/DataToVariablesModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputVariables": "Output variables"
  },
  "Libraries/Model/DataSet/ExportModelComponentEngine": {
    "InputConnection": "Connection",
    "InputDataSource": "Data source"
  },
  "Libraries/Model/DataSet/ImportModelComponentEngine": {
    "InputConnection": "Connection",
    "OutputDataSet": "Data set"
  },
  "Libraries/Model/DataSet/InputDataSourceSocketDef": {
    "InputDataSourceSocketDefVendorCaption": "Table"
  },
  "Libraries/Model/DataSet/OutputDataSourceSocketDef": {
    "OutputDataSourceSocketDefVendorCaption": "Table"
  },
  "Libraries/Model/DataSet/SocketFieldInfoLinks": {
    "ErrFieldInfoDoesNotBelongToComponent": "\"%s\" field does not belong to the current component"
  },
  "Libraries/Model/DerivedModelComponentVendor": {
    "BaseComponentVendorGuidDesc": "Base component GUID",
    "BaseNode": "Base node",
    "BaseNodeGuid": "Base node Guid",
    "Caption": "Caption",
    "DerivedComponentVendorGuidDesc": "Derived component GUID",
    "Description": "Description",
    "ErrBaseComponentAlreadyExists": "Base component already exists",
    "ErrBaseComponentNotInitialized": "The node base component not initialized",
    "ErrBaseComponentVendorNotSpecified": "No vendor defined for the base node component",
    "ErrBaseNodeNotFound": "Base node not found",
    "ErrCircularInheritanceForbidden": "Circular inheritance of components forbidden",
    "ErrIncompatibleBaseComponentVendor": "Base and derived components are incompatible",
    "ErrParentVendorIsDeleted": "Base component deleted",
    "ErrParentVendorNotFound": "Base component not found",
    "ErrUnknownCouplerDefType": "Unknown coupler def type",
    "IsSealedVendor": "Sealed",
    "ModelComponent": "Node component",
    "OriginalComponentVendorGuidDesc": "Original component GUID"
  },
  "Libraries/Model/DerivedModelUnitAspects": {
    "ErrCannotChangeDerivedSocketType": "You cannot change the derived ports data type",
    "ErrCannotDeleteDerivedConnections": "You cannot delete derived connections",
    "ErrCannotDeleteDerivedSocket": "You cannot delete derived ports",
    "ErrCannotDeleteDerivedVendors": "You cannot delete derived components"
  },
  "Libraries/Model/Generic/ModelGenericComponent": {
    "ErrInputSocketDefIsEmtpy": "The following input types are not specified: ",
    "ErrOutputSocketDefIsEmtpy": "The following output types are not specified: "
  },
  "Libraries/Model/Generic/ModelGenericComponentEngine": {
    "ActivateOuterData": "External data",
    "ErrInvalidModelLockContext": "Invalid workflow node lock context"
  },
  "Libraries/Model/Generic/ModelGenericComponentVendor": {
    "GenericVendorCaption": "Supernode"
  },
  "Libraries/Model/Generic/ModelInnerComponent": {
    "ErrAlreadyConfiguringInnerSocket": "The external component port has already been configuring"
  },
  "Libraries/Model/Generic/ModelInputComponent": {
    "ErrInnerOutputSocketDefIsEmtpy": "The following input types are not specified: "
  },
  "Libraries/Model/Generic/ModelInputComponentVendor": {
    "VendorCaption": "Input Node"
  },
  "Libraries/Model/Generic/ModelOutputComponent": {
    "ErrInnerInputSocketDefIsEmtpy": "The following output types are not specified: "
  },
  "Libraries/Model/Generic/ModelOutputComponentVendor": {
    "VendorCaption": "Output Node"
  },
  "Libraries/Model/ModelCommon": {
    "ErrPortParentIsNil": "Reference to the node port is not included into list",
    "ErrPortsParentNodeIsNil": "The node port list does not belong to any node"
  },
  "Libraries/Model/ModelComponent": {
    "ErrAlreadyConfiguringSocket": "The node component is in the port configuring state",
    "ErrInvalidComponentEngineImplementation": "Invalid component engine implementation",
    "ErrModelComponentAlreadyInitialized": "The node component already initialized",
    "ErrUnknownCouplerDefType": "Unknown coupler def type"
  },
  "Libraries/Model/ModelComponentCouplerDefItems": {
    "CouplerDefMetaDesc": "Coupler"
  },
  "Libraries/Model/ModelComponentCouplerItems": {
    "CouplerMetaDesc": "Coupler"
  },
  "Libraries/Model/ModelComponentCouplers": {
    "ErrModelElementAlreadyInitialized": "Coupler already initialized"
  },
  "Libraries/Model/ModelComponentEngineVendor": {
    "ModelComponentEngineVendorMetaDesc": "component engine vendor"
  },
  "Libraries/Model/ModelComponentMultiplePortsEngine": {
    "ErrModelComponentEngineAlreadyInitialized": "The component engine already initialized"
  },
  "Libraries/Model/ModelComponentVendor": {
    "ModelComponentVendorMetaDesc": "component"
  },
  "Libraries/Model/ModelComponentVendorGroups": {
    "ConnectionVendorGroupCaption": "Connections",
    "DefaultVendorGroupCaption": "Other",
    "ModelComponentVendorGroupMetaDesc": "component group",
    "ServiceVendorGroupCaption": "Service Nodes",
    "ViewerVendorGroupCaption": "Visualizers"
  },
  "Libraries/Model/ModelComponentVendorGroupsCommon": {
    "AnalyticVendorGroupCaption": "Data Mining",
    "ExploratoryVendorGroupCaption": "Exploration",
    "ExportVendorGroupCaption": "Export",
    "FlowControlVendorGroupCaption": "Control",
    "ImportVendorGroupCaption": "Import",
    "IntegrationVendorGroupCaption": "Integration",
    "PreprocessingVendorGroupCaption": "Preprocessing",
    "ReformVendorGroupCaption": "Transformation",
    "VariableVendorGroupCaption": "Variables"
  },
  "Libraries/Model/ModelEnginePortItems": {
    "PortMetaDesc": "Port"
  },
  "Libraries/Model/ModelEnginePorts": {
    "ErrModelEngineInputPortAlreadyInitialized": "The input port already initialized",
    "ErrModelEngineOutputPortAlreadyInitialized": "The output port already initialized"
  },
  "Libraries/Model/ModelNodesCopyUtils": {
    "ErrCantRestoreReferenceNode": "Failed to restore link from \"%s\" node. \"%s\" reference node is not available at the required destination.",
    "ErrNodeNotConfigurable": "Failed to create the node copy with the following name: \"%s\" and GUID: %s",
    "ErrNoNodesSpecified": "No node set specified",
    "ErrNoSourceModelUnit": "Source module not found",
    "ErrNoTargetModelUnit": "Target module not found",
    "ErrSomeNodeDisposed": "One or several source nodes have been deleted or moved"
  },
  "Libraries/Model/ModelPackage": {
    "ErrAlienModelUnit": "Node does not belong to the current package",
    "ErrCircularPackageLinksNotAllowed": "Circular links between packages are not allowed",
    "ErrPackageLinkAlreadyExists": "Reference to \"%s\" package already exists",
    "ErrPackageLinkToSelfNotAllowed": "You cannot add link to yourself in the package",
    "ErrPackageNameCannotBeEmpty": "Package name cannot be empty",
    "ErrPackageNameInvalidCharacter": "\"%s\" package name contains the invalid \"%s\" character",
    "ErrPackageNameInvalidFirstCharacter": "\"%s\" package name starts with the invalid \"%s\" character",
    "ErrPackageWithNameLinkAlreadyExists": "Link to the package with \"%s\" name already exists",
    "ErrVariableNotFound": "Variable with \"%s\" name not found",
    "ModelUnitDisplayNameDefault": "Module"
  },
  "Libraries/Model/ModelPackageContext": {
    "ErrBasePackageNotFound": "Base package not found",
    "ErrExecNodeBaseComponentNotFound": "Base component for \"%s\" node not found"
  },
  "Libraries/Model/ModelPackageManager": {
    "BackupRestored": "Error occurred while saving \"%s\" package. File restored from backup.",
    "CompatConvertRequired": "While downloading \"%s\" package of %s version converting will be performed.",
    "ErrCannotLoadPackageElement": "Package download error: failed to download \"%s\" element",
    "ErrCannotOpenFile": "Failed to open \"%s\" file"
  },
  "Libraries/Model/ModelReports": {
    "CantAddGenericInputViewToReport": "Addition of supernode input node visualizers to Reports is not supported",
    "ModelReportGroup": "Report group"
  },
  "Libraries/Model/ModelSocketConstraintDefItems": {
    "SocketConstraintMetaDesc": "Port constraint"
  },
  "Libraries/Model/ModelSocketConstraintDefs": {
    "ErrModelSocketDefConstraintAlreadyInitialized": "Socket constraint definition already initialized",
    "ErrSocketIsNil": "No reference to port specified"
  },
  "Libraries/Model/ModelSocketConstraintItems": {
    "SocketConstraintMetaDesc": "Port constraint"
  },
  "Libraries/Model/ModelSocketConstraints": {
    "ErrModelSocketConstraintAlreadyInitialized": "Socket constraint already initialized",
    "ErrSocketIsNil": "No reference to port specified"
  },
  "Libraries/Model/ModelSocketDefItems": {
    "ErrItemBySocketDefNotFound": "Socket definition not found in the list",
    "SocketMetaDesc": "Port"
  },
  "Libraries/Model/ModelSocketDefs": {
    "SocketDefAlreadyInitialized": "Socket definition already initialized"
  },
  "Libraries/Model/ModelSocketInterfaceConstraintDef": {
    "ErrInterfaceNotSupported": "Input and output ports are incompatible"
  },
  "Libraries/Model/ModelSocketItems": {
    "ErrCannotAddNotMultipleSocket": "You cannot dynamically add non-multiple port",
    "ErrCannotDeleteNotDynamicSocket": "You cannot delete non-dynamic port",
    "ErrItemBySocketNotFound": "Port not found in the list",
    "ErrMaxOccursOfMultipleSocketIsReached": "Maximum multiple port count reached",
    "SocketMetaDesc": "Port"
  },
  "Libraries/Model/ModelSockets": {
    "ErrModelSocketAlreadyInitialized": "Socket already initialized",
    "ErrModelSocketNotConfigured": "Port not configured"
  },
  "Libraries/Model/ModelUnit": {
    "CurrentModel": "Current module",
    "DeleteReferringVendorCaption": "Delete \"%s\" Derived Component",
    "ErrAlienExcludedNode": "\"%s\" node does not belong to the current module",
    "ErrAlienSubModel": "Supernode does not belong to the current workflow",
    "ErrComponentVendorIsSealed": "It is forbidden to create the derived component for this node",
    "ErrDerivedConnectionVendorNotFound": "No derived component for the connection node found",
    "LocalModelComponentVendorMetaDesc": "local component",
    "ModelComponentVendorMetaDesc": "component"
  },
  "Libraries/Model/ModelWorkFlow": {
    "ActivateModelNodeInputs": "Activate node inputs",
    "ActivateModelNodes": "Activate nodes",
    "AddInputSocketCaption": "\"%s\" input added to \"%s\" node",
    "ComponentOutputPort": "Component",
    "CopyNodeCaption": "\"%s\" Element Copied",
    "CopyNodesCaption": "Elements Copied",
    "DeleteElementsCaption": "Elements deleted",
    "DeleteInputSocketCaption": "\"%s\" Input of \"%s\" Node Deleted",
    "DependentNodeOutputPort": "Dependent nodes",
    "ErrActivateModelNodes": "Error occurred while activating nodes",
    "ErrAllNodesLocked": "All workflow nodes locked",
    "ErrAlreadyConfiguringSocket": "\"%s\" node already in the port configuring state",
    "ErrCannotFindPreviousProcess": "Failed to find the previous activation process for \"%s\" node",
    "ErrComponentNotInitialized": "Base component not initialized",
    "ErrDuplicatePublishedNodeName": "The package already contains the published node with \"%s\" name",
    "ErrInactiveBranch": "\"%s\" node is in the inactive condition branch",
    "ErrInvalidModelCriticalSectionCookie": "Invalid Cookie for critical workflow section locking",
    "ErrInvalidModelLockCookie": "Invalid Cookie for workflow nodes locking",
    "ErrInvalidModelLockCookieOwner": "Invalid owner of Cookie for workflow nodes locking",
    "ErrModelHasLockedNodes": "Workflow contains %d locked nodes",
    "ErrModelNodeAlreadyInitialized": "Node already initialized",
    "ErrMultipleVariablesFound": "Multiple variables with \"%s\" name found",
    "ErrNodeConfigNotInitialized": "Node configuration not initialized",
    "ErrNodeIsNoMemberOfModel": "Node does not belong to the workflow",
    "ErrNodeLocked": "\"%s\" node is locked",
    "ErrNodeNotFoundInModel": "The requested node does not belong to the workflow",
    "ErrNodeNotInitialized": "No component specified for \"%s\" node",
    "ErrParentProcessError": "Error in parent process",
    "ErrPortMismatch": "Incompatible component: node port list does not match",
    "ErrPortParentIsNil": "Reference to the node port is not included into list",
    "ErrPublishedNodeNameIsEmpty": "No published node name specified",
    "ErrSocketNotConfigured": "Port not configured",
    "ErrUnableToLoadNodeConfig": "Failed to load the node configuration",
    "ErrVariableNamesAndValuesCountMustBeEqual": "Number of names and variables values must be the same",
    "ErrVariableNotFound": "Variable with \"%s\" name not found",
    "ErrVendorMalfunction": "\"%s\" node component malfunctioned",
    "ExplodeGenericModel": "Expanded \"%s\" supernode",
    "Left": "Left",
    "LogActivateNodeStart": "Activating \"%s\" node",
    "LogActivateNodeSuccess": "Successfully activated \"%s\" node",
    "LogDeactivateNode": "\"%s\" node deactivated",
    "LogNodeActivationError": "Error activating \"%s\" node",
    "ResetModelNodeConfiguration": "Initial configuration of \"%s\" node reset",
    "RestoreBackupProcessCaption": "Backup configuration restoring",
    "SynchronizationInputPort": "Execution order",
    "SynchronizationOutputPort": "Execution order",
    "Top": "Top",
    "WarnLinkPortNotConnetedToNode": "Link port with %s identifier not connected to node"
  },
  "Libraries/Model/ModelWorkflowSubModelComposer": {
    "ErrMsgCantFindLinkNode": "Failed to define the second link port",
    "ErrMsgNoAllVendorsCollected": "Failed to get all required types of vendors",
    "ErrMsgNoSubModel": "Supernode component not created",
    "ErrMsgNoVendorInfo": "Failed to get information on the derived component of for \"%s\" node",
    "ErrMsgNoVendorLocator": "Failed to get port vendor enumerator",
    "ErrSubModelVendorNotCreated": "You cannot create the supernode component In the current context",
    "WarnModelNotSupportInPort": "Failed to create input port for \"%s\" port",
    "WrnNullRttiInfo": "Invalid supernode port definition vendor detected",
    "WrnUnknownSocketDefVendorType": "Failed to define vendor type for %s interface with %s GUID"
  },
  "Libraries/Model/ReferenceNode/ReferenceNodeComponentEngine": {
    "ErrNodeLocked": "\"%s\" node is locked",
    "ErrNodeNotInitialized": "\"%s\" node not initialized",
    "ErrReferencedNodeNotAvailable": "Reference node not available",
    "ErrReferencedNodeNotFound": "Reference node not found",
    "ErrReferencedNodeNotSpecified": "No reference to node specified"
  },
  "Libraries/Model/ReferenceNode/ReferenceNodeComponentEngineVendor": {
    "NodeReference": "Reference to node"
  },
  "Libraries/Model/ReferenceNode/ReferenceNodeComponentVendor": {
    "VendorCaption": "Reference Node",
    "VendorDesc": "Reference to node"
  },
  "Libraries/Model/Variables/ControlVariablesInputSocketDef": {
    "ControlVariablesInputSocketDefVendorCaption": "Control Variables"
  },
  "Libraries/Model/Variables/ControlVariablesModelComponentEngine": {
    "InputControlVariables": "Control variables"
  },
  "Libraries/Model/Variables/InputVariablesSocketDef": {
    "InputVariablesSocketDefVendorCaption": "Variables"
  },
  "Libraries/Model/Variables/ModelVariables": {
    "ErrCannotEditServiceVariable": "Service variable editing is forbidden",
    "ErrFailedToPrepareVariables": "Failed to initialize %s variables",
    "ErrInvalidVariablesKind": "Invalid variable type: %s"
  },
  "Libraries/Model/Variables/ModelVariablesComponentEngine": {
    "CombinedVariables": "Variables",
    "PackageVariables": "Package variables",
    "SessionVariables": "Session variables",
    "SystemVariables": "System variables",
    "UserVariables": "User variables"
  },
  "Libraries/Model/Variables/ModelVariablesComponentVendor": {
    "VendorCaption": "Workflow Variables",
    "VendorDesc": "Configure variables used in the current workflow"
  },
  "Libraries/Model/Variables/OutputVariablesSocketDef": {
    "OutputVariablesSocketDefVendorCaption": "Variables"
  },
  "Libraries/Model/Variables/SocketVariableInfoLinks": {
    "ErrVariableInfoDoesNotBelongToComponent": "\"%s\" variable does not belong to the current component"
  },
  "Libraries/Model/Variables/SocketVariablesMultiLinks": {
    "ErrAlienLinkedVariable": "\"%s\" variable does not belong to any variable list being used",
    "ErrCannotLinkVariablesFromSameTable": "You cannot link \"%s\" and \"%s\" variables from the same table",
    "ErrLinkedVariableTypesMismatch": "\"%s\" and \"%s\" types of linked variables are not compatible"
  },
  "Libraries/Model/Variables/TuneVariablesSocketConstraint": {
    "ErrValueNotAllowed": "\"%s\" value of the input variable \"%s\" does not match the specified constraints"
  },
  "Libraries/Model/Variables/VariablesModelComponentEngine": {
    "InputVariables": "Input variables",
    "OutputVariables": "Output variables"
  },
  "Libraries/Model/Variables/VariablesMultiInputModelComponentEngine": {
    "InputVariables": "Input variables",
    "OutputVariables": "Output variables"
  },
  "Libraries/Model/Variables/VariablesOutputSocket": {
    "Variables": "Variables"
  },
  "Libraries/Model/Views/ModelViewDataSource": {
    "InputDataSource": "Data set"
  },
  "Libraries/Model/Views/ModelViewDataSourceEngine": {
    "ErrNotDefinedInputDataSource": "No input data set defined"
  },
  "Libraries/Model/Views/ModelViewVendorGroupsCommon": {
    "DefaultVendorGroupCaption": "Common",
    "DiagramVendorGroupCaption": "Charts",
    "TableDataVendorGroupCaption": "Table View"
  },
  "Libraries/Model/WebServiceInputNode/WebServiceInputNodeComponent": {
    "ErrInvalidInputColumnCount": "Invalid column count in the input matrix of values: %d; required: %d",
    "ErrInvalidInputElementCount": "Invalid element count in the input array: %d; required: %d",
    "ErrInvalidInputRowCount": "Invalid row count in the variable value matrix: %d"
  },
  "Libraries/Model/WorkFlow": {
    "ErrCircularLink": "Circular links between nodes are not allowed",
    "ErrInputLinkAlreadyExists": "Link to the input port \"%s\" of \"%s\" node already exists",
    "ErrUnableToRestoreLinkBetween": "Failed to restore link between \"%s\" and \"%s\" nodes",
    "ErrUnableToRestoreLinkTo": "Failed to restore link to the input of \"%s\" node",
    "Links": "Links",
    "Node": "Node",
    "Nodes": "Nodes",
    "PortGuid": "Port Guid",
    "PortNodeGuid": "Node Guid",
    "UnknownNodeDisplayName": "Unknown node"
  },
  "Libraries/Normalization/DataSourceMultiOutputNormModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSource": "Output data set"
  },
  "Libraries/Normalization/FixedNormalData": {
    "ErrArrayExpceted": "You cannot denormalize a single element. Array from %d elements must be at the input.",
    "ErrUnbalancedSync": "EndSynchronize call without corresponding BeginSynchronize",
    "ErrWrongArraySize": "Size %1:d of '%0:s' array not equal to the expected size of  array %2:d"
  },
  "Libraries/Normalization/NormalColumns": {
    "ErrExcludeOutOfRange": "The deleted range is out of range. The following values are given: start index %d, range length %d. The index of the last deleted column %d exceeds the index of the last deleted column %d."
  },
  "Libraries/Normalization/NormalColumnsManager": {
    "ErrIrremNotExcluded": "Irremovable factor \"%s\" cannot be excluded",
    "ErrNotImplemented": "This functionality not implemented"
  },
  "Libraries/Normalization/NormalColumnsRange": {
    "ErrCursorNotReady": "The flag iterator cursor does not indicate value",
    "ErrNotImplemented": "This functionality not implemented"
  },
  "Libraries/Normalization/NormalData": {
    "CalculateCacheProcessCaption": "Data set caching",
    "ErrArrayExpected": "You cannot denormalize a single element. Array from %1:d elements must be denormalized for \"%0:s\" column.",
    "ErrImpossibleToAllocate": "You cannot allocate memory for cached normalized data source",
    "ErrNotEnoughCache": "Insufficient cache size to store normalized data string",
    "ErrUnbalancedSync": "EndSynchronize call without corresponding BeginSynchronize",
    "ErrUnexpectedEndUpdate": "EndUpdate call without corresponding BeginUpdate",
    "ErrUnexpectedUnlockedState": "Calling nested BeginUpdate cache of the normalized data set must be locked",
    "ErrWrongArraySize": "Size %1:d of '%0:s' array not equal to the expected %2:d",
    "ErrWrongNormalizerParams": "Error adding \"%s\" factor: the output columns count of %d normalizer does not match the expected %d",
    "InterceptDisplayName": "Intercept",
    "NormDSTypeNotSupported": "Unsupported type of the requested normalized data set",
    "UnsupportedPrenormInDataType": "Unsupported type of the normalizer data of the normalized string"
  },
  "Libraries/Normalization/NormalDataArray": {
    "ErrWrongBufferSize": "String size of results %d is less than the size of the normalized string %d"
  },
  "Libraries/Normalization/NormalDataFactory": {
    "ErrFactoryAlreadyRegistered": "Factory for this normalized data set format has already been registered",
    "ErrFactoryIsNotRegistered": "Factory for this normalized data set format has not  been registered",
    "ErrMultNormTypeWrong": "Invalid multiplied factor type"
  },
  "Libraries/Normalization/Normalizers": {
    "ErrCorrectionMissed": "Denormalization coefficients correction ignored",
    "ErrInvalidDenormCode": "You cannot denormalize the discrete field value",
    "ErrLessThanMin": "The normalized value is less than the minimum value range",
    "ErrMoreThanMax": "The normalized value is more than the maximum value range",
    "ErrNormLessThanMin": "The denormalized value is less than the minimum value range",
    "ErrNormMoreThanMax": "The denormalized value is more than the maximum value range",
    "ErrNotImplemented": "This functionality not implemented",
    "ErrRefIdRequired": "The reference category used in the normalizer is not defined",
    "ErrWrongDiscreteIndexRange": "Prenormalized index: %d is out of allowable range [%d ; %d]",
    "VS": " to ",
    "VS_MEAN": " to mean",
    "VS_MEAN_PREV": " to mean from previous",
    "VS_MEAN_SUBS": " to mean from subsequent"
  },
  "Libraries/Normalization/NormalizerSettings": {
    "ErrMinMaxNormTypeNotSupported": "The selected \"%s\" normalization type is not supported by Min-Max normalization settings",
    "ErrMinMaxStatNaN": "Failed to calculate the maximum/minimum value for the range normalization settings, \"%s\" column",
    "ErrNanDivisor": "You cannot calculate divisor to normalize relations, \"%s\" column",
    "ErrQuotientNormTypeNotSupported": "The selected \"%s\" normalization type is not supported by the relation normalization settings",
    "ErrQuotientStatNotSupported": "The selected statistic divisor \"%s\" is not supported by the relation normalization settings",
    "ErrStatDivisorNotAvailable": "The set statistic indicator \"%s\" cannot be used as relation normalization divisor"
  },
  "Libraries/Normalization/NormMatrixData": {
    "ErrGetColNotSupported": "Normalized matrix column request not supported"
  },
  "Libraries/Normalization/PreNormDataAccessor": {
    "ErrNoIndexInHash": "No index of the set column %d in Accessor hash"
  },
  "Libraries/Normalization/TunedNormParams": {
    "ErrAvailableNormTypeNotFound": "No valid normalization type found",
    "ErrControlRangeNotAvailable": "The set \"%s\" type of range control is not valid for this normalizer",
    "ErrWrongNormParamsConstructor": "Invalid normalization parameter constructor used",
    "FACT_ANY": "ANY",
    "FACT_ANY_COUNTINUOUS": "ANY CONTINUOUS",
    "FACT_ANY_DISCRETE": "ANY DISCRETE",
    "FACT_ANY_OTHER_CONTINUOUS": "ANY OTHER CONTINUOUS",
    "FACT_ANY_OTHER_DISCRETE": "ANY OTHER DISCRETE",
    "FACT_OTHER": "ANY OTHER",
    "FACT_SAME": "SAME",
    "GenDisplayName": "Generated factor",
    "GenName": "Generated"
  },
  "Libraries/Normalization/TunedNormParamsProvider": {
    "ErrInvalidColumn": "No available normalization types for \"%s\" column",
    "ErrInvalidFactorIndex": "Invalid factor index %d (available range [%d;%d])",
    "ErrNotImplemented": "This functionality not implemented",
    "ErrProcessKeptStatisticsChangedUniqueValues": "The unique values list for \"%s\" column changed; component reconfiguration required",
    "ErrStatIndicatorsNeddedIndexOutRange": "Invalid index of the requested statistical indicators",
    "ErrUniqueValuesSyncConflict": "Input data set is not compatible with normalization settings"
  },
  "Libraries/Normalization/TuneNormColumnDefs": {
    "ErrNilStatInfoProvider": "Nil provider of the statistic columns information was passed",
    "ErrTuneNormColumnDefsVendorNotSet": "Vendor of configurable fields with normalization not set",
    "ErrWrongConstructor": "Invalid column collection constructor called"
  },
  "Libraries/Normalization/TuneNormColumnDefsVendor": {
    "ErrIncorrectUsedDK": "Invalid \"%s\" data kind of normalized column \"%s\""
  },
  "Libraries/Normalization/TuneNormDataSource": {
    "CreateInDataProcessCaption": "Input data set preparing",
    "CreateNormalDataProcessCaption": "Normalized data set creating",
    "CreateOutDataProcessCaption": "Output data set preparing",
    "ErrGetNormData": "Errors occurred while requesting normalized data set",
    "ErrUniqueIndexNotDiscrete": "You cannot query the unique value index of non-discrete column",
    "ErrUniqueValueNotFound": "\"%s\" not found in the list of configured unique values (\"%s\" column, string %d)"
  },
  "Libraries/Normalization/TuneNormDataSourceSocketDef": {
    "ErrNotImplemented": "This functionality not implemented"
  },
  "Libraries/Optimization/Optimization": {
    "ErrAbsentSubstitution": "Parameter with index %d is not listed",
    "ErrConstraintsParameterNotFound": "Parameter with index %d not found in the constraints list",
    "ErrDuplicateIndex": "Parameter with index %d added more than once",
    "ErrForeignParameter": "Parameter does not belong to the current collection",
    "ErrItemByParameterNotFound": "Collection item matching the specified parameter was not found",
    "ErrMinMaxFloat": "The specified minimum value %f is more than the maximum value %f",
    "ErrMinMaxInteger": "The specified minimum value %d is more than the maximum value %d",
    "ErrOrphanValue": "Parameter not associated with collection",
    "ErrParameterInaccessible": "Parameter value inaccessible",
    "ErrParameterWrongDataType": "Invalid parameter data type",
    "ErrValuesCountMismatch": "The count of values %d passed to the calculation function mismatches the count of parameters %d"
  },
  "Libraries/Optimization/Optimizer": {
    "ErrFunctionTypeNotSupported": "Object functions with return value of %s type are not supported by %s method",
    "ErrMethodAlreadyRegistered": "%s method implementation already registered",
    "ErrMethodNotImplemented": "%s method not implemented",
    "ErrMethodRequiresParameters": "%s method requires additional configuration",
    "ErrSingleParameterRequired": "%s method can provide optimization only for a single parameter",
    "ErrStepIsNull": "Another strategy step not specified",
    "ErrUnsupportedConstraint": "%s method does not support %s constraint type"
  },
  "Libraries/PropManager/CommonPropBinder": {
    "ErrCantFindIntfEditor": "Failed to find interface editor",
    "ErrCantFindPropBind": "Failed to find the property mapping for interface",
    "ErrMainInterfaceIsNil": "Root element interface not set or removed",
    "ErrNotCompatibleDataTypes": "Property and variable types are not compatible"
  },
  "Libraries/PropManager/InterfacePropManager": {
    "ErrCannotSetPropertyToNull": "You cannot assign null value to \"%s\" property",
    "ErrCantAccessPropertyValue": "Failed to get access to value of \"%s\" property",
    "ErrDataTypeNotEqual": "The actual type of \"%s\" property does not match the requested one",
    "ErrFindInterfaceDublicate": "Interface duplicate found in metadata: \"%s\"",
    "ErrGetValueOutOfBounds": "Value of \"%s\" property is not in the range of allowable values of the requested type",
    "ErrGuidNotFound": "\"%s\" interface not found in metadata",
    "ErrIncorrectIndexDataType": "\"%s\" property has incorrect indexer type",
    "ErrIndexerCountIncorrect": "The property with \"%3:s\" count of items is incorrect for the indexed property \"%0:s.%1:s.%2:s\"",
    "ErrIndexerCountNotFound": "No \"%2:s\" property in metadata for \"%0:s.%1:s\" interface",
    "ErrInterfaceNameNotFound": "Interface with \"%s\" name not registered",
    "ErrInterfaceParentNotFound": "Parent interface \"%s\" not found",
    "ErrInvalidMetadataResource": "Error reading metadata from \"%s\" resource",
    "ErrInvalidUTFInt": "Error reading integer packed number",
    "ErrManagerNotInitialized": "Interface property manager not initialized",
    "ErrParentNotInitialized": "Not initialized parent of \"%s.%s\" interface",
    "ErrPropAccessorNotFound": "Failed to find \"%2:s\" accessor in metadata for \"%0:s.%1:s\" property",
    "ErrReferenceIsNil": "Interface reference not initialized",
    "ErrReferenceNotFound": "Failed to find the implemented interface",
    "ErrSetValueOutOfBounds": "Set value \"%d\" of  \"%s\" property is not in the range of allowable values",
    "ErrVaiantTypeIncorrect": "The property containing \"%3:s\" value type is incorrect for the variant property \"%0:s.%1:s.%2:s\"",
    "ErrVaiantTypeNotFound": "No \"%2:s\" property in metadata for \"%0:s.%1:s\" interface",
    "ErrValueOutOfRange": "Value \"%d\" is not in the range of allowable values of \"%s\" type",
    "ErrVisibilityMismatch": "Visibility of \"%s\" interface mismatches the required visibility"
  },
  "Libraries/Regression/DataSourceRegressionModelComponentEngine": {
    "ErrNoModel": "Model is not trained. It is required to train the node before its applying",
    "ErrOutputColumnInvalid": "Invalid output column",
    "ErrOutputCount": "There must be exactly one output column",
    "ErrTrainingNotComplite": "Failed to train the node on the basis of the current training set",
    "ErrWrongInputUniqueCount": "Number of \"%s\"output column unique values is %d (2 or more required)",
    "ErrWrongModelInput": "Input columns do not match previously trained model",
    "ErrWrongModelOutput": "Output column does not match previously trained model",
    "RegressionModelCoefficients": "Regression model coefficients",
    "RegressionOutputDataSet": "Regression output",
    "RegressionOutputVariables": "Summary",
    "RegressionParams": "Regression parameters",
    "RegressionTrainingResults": "Training results"
  },
  "Libraries/Regression/Regression": {
    "ErrWrongRegressionParamsConstructor": "Invalid regression parameter constructor used"
  },
  "Libraries/Regression/RegressionModel": {
    "ApplyModelProcessCaption": "Model applying",
    "ErrApplyWrongFeatures": "The column count of the input data set %d not equal to the regressors count of model %d",
    "RegressionStatistics": "Regression statistics"
  },
  "Libraries/Regression/RegressionStatistics": {
    "CoefficientsStats": "Model coefficient statistics",
    "ErrWrongClassType": "Source class does not match "
  },
  "Libraries/Regression/RegressionTrainingResults": {
    "RegressionModel": "Regression model"
  },
  "Libraries/RESTClientConnection/RESTClientConnection": {
    "ErrInvalidContentType": "Invalid Content-type value format: %s",
    "ErrInvalidParamDataType": "Invalid %s GET request parameter data type",
    "ErrInvalidParamName": "Invalid %s GET request parameter name",
    "ErrInvalidURL": "Invalid URL service format",
    "ErrMustExplicitRequestContentType": "Data request Content-type must be explicitly set",
    "ErrNoServiceURL": "Service URL not specified",
    "ErrWSDLGenerate": "Error while generating WSDL description"
  },
  "Libraries/RESTClientConnection/RESTClientConnectionVendor": {
    "RESTClientConnectionVendorCaption": "REST Service",
    "RESTClientConnectionVendorDesc": "Connection to GET/POST web service"
  },
  "Libraries/rpc/BaseTCPBlockSocketMessageTransport": {
    "ErrCouldNotConnectToServer": "Failed to establish connection: %s",
    "ErrIncorrectServerResponse": "Incorrect server response received"
  },
  "Libraries/rpc/ClientObjectProxy": {
    "ErrDisconnectedProxy": "Client proxy object disconnected",
    "ErrInterfaceIdentifierMustNotBeNull": "Interface identifier must not be null"
  },
  "Libraries/rpc/CustomConnectors/DataSourceRpcCached_Invoker": {
    "ErrRowIndexAndRowCountOutOfRange": "Sum of values of ARowIndex and ARowCount parameters must not exceed the total row count in the data set"
  },
  "Libraries/rpc/InterceptSendMessageTransport": {
    "ErrNotImplemented": "This method implementation is not provided"
  },
  "Libraries/rpc/MessageTransport": {
    "ErrConnectionFailure": "Remote computer connection lost"
  },
  "Libraries/rpc/RemoteMessageData": {
    "ErrArrayLevelNotSupported": "Arrays nesting level above %d is not supported",
    "ErrInvalidMessageSignature": "Invalid message signature",
    "ErrMessageSizeCannotBeNegative": "Message size cannot be negative",
    "ErrMessageSizeIncrementCannotBeNegative": "Message size increment cannot be negative",
    "ErrMessageSizeOverflow": "Maximum message size exceeded",
    "ErrUnknownInterfaceGUID": "Interface with %s identifier not registered",
    "ErrUnknownInterfaceID": "Unknown interface identifier: %d",
    "ErrUnknownInterfaceName": "%s interface not registered",
    "ErrUnknownMethodID": "Unknown method identifier: %d",
    "ErrUnsupportedParameterType": "Unsupported parameter type"
  },
  "Libraries/rpc/RemotingConvertUtils": {
    "ErrValueOutOfRange": "%d value is not in the range of allowable values %s"
  },
  "Libraries/rpc/ServerRemoteObjects": {
    "ErrQueryInterfaceNotAllowed": "You cannot query interface with %s identifier via QueryInterface",
    "ErrUnknownMethodID": "Unknown method identifier: %d"
  },
  "Libraries/rpc/Session": {
    "ErrCannotAddSessionToClosingSessionHost": "You cannot add a new session while SessionHost closing",
    "ErrDifferentRpcExceptionProcAlreadyRegistered": "Another Rpc exception handler already registered",
    "ErrDifferentRpcVerionAlreadyRegistered": "Another RPC version number already registered",
    "ErrDisconnectedSession": "Connection lost",
    "ErrIncorrectMainServerObjectInterfaceID": "Invalid interface identifier of the main server object received",
    "ErrInvalidObjectID": "Invalid object identifier: %d",
    "ErrMainServerObjectNotRegistered": "The main server object is not registered",
    "ErrMaxObjectIdReached": "Limit in %d values of object identifiers reached",
    "ErrMethodHasNoReturnValue": "%s method has no return value",
    "ErrMethodHasOutputParameters": "%s method contains output parameters",
    "ErrMethodReturnValueIsNotInterface": "The return value of %s method is not an interface object reference",
    "ErrRpcVersionMismatch": "Client of %s version cannot get connected to the server of %s version",
    "ErrUnknownInterfaceID": "Unknown interface identifier: %d",
    "ErrValueOutOfRange": "Value %d is not in the range of allowable values [%d; %d]"
  },
  "Libraries/rpc/WebSocketRemoteServer": {
    "ErrSSLChangeAfterStart": "SSL parameters cannot be changed after server start"
  },
  "Libraries/WSDLClientConnection/WSDLClientConnection": {
    "ErrWSDLLoad": "Error loading WSDL:\nFile name: %s",
    "WarnMainWSDLNotLoaded": "Main WSDL source (%s) not loaded (%s). We are trying to load the backup source."
  },
  "Libraries/WSDLClientConnection/WSDLClientConnectionVendor": {
    "WSDLClientConnectionVendorCaption": "SOAP Service",
    "WSDLClientConnectionVendorDesc": "Connection to SOAP service specified by WSDL document"
  },
  "Libraries/XSDFilesConnection/XSDFilesConnection": {
    "ErrLoadXSD": "Error loading XSD files"
  },
  "Libraries/XSDFilesConnection/XSDFilesConnectionVendor": {
    "XSDFilesConnectionVendorCaption": "Set of XSD Schemas",
    "XSDFilesConnectionVendorDesc": "Connection to the set of XSD schemas located in the file storage"
  },
  "Studio/ApplicationManager": {
    "ErrBootupOptions": "Error in boottup parameters.\nBoth batch processing parameters \"Run\" and \"Retrain\" are specified at the same time.",
    "ErrNoPackageFileName": "No package file specified."
  },
  "Studio/Converters/Converter_201805281036_NeuralNet_SummarySocket": {
    "SummarySocketDisplayName": "Summary"
  },
  "Studio/Converters/Converter_201806051619_TuneNorm_InvalidUsageType": {
    "ErrTuneNormInvalidUsageTypeNode": "Usage type of the \"Output\" field near \"%s\" column of \"%s\" node was moved to the \"Not defined\" field",
    "ErrTuneNormInvalidUsageTypeVendor": "Usage type of the \"Output\" field near \"%s\" column of derived component \"%s\" was moved to the \"Not defined\" field"
  },
  "Studio/Converters/Converter_20180828194301_LogRegression_DerivedAtomic": {
    "WarnCannotConvert": "Failed to convert the package created in the previous program version.\nSettings of the \"Logistic Regression\" nodes that refer to the nodes in other packages could be reset.\nOne of the following actions is required:\n  - reconfigure and retrain the \"Logistic Regression\" nodes that cannot be converted\n  - restore configuration of the specified nodes to the original (base)\n  - contact Loginom support for help"
  },
  "Studio/Converters/Converter_201809181721_LogRegression_RelativeTerms": {
    "WarnCannotConvert": "Failed to convert the package created in the previous program version.\nSettings of the \"Logistic Regression\" nodes could be reset.\nIt is required to reconfigure and retrain the \"Logistic Regression\" nodes that cannot be converted"
  },
  "Studio/DeductorConsts": {
    "LgpFilesDesc": "Loginom packages"
  },
  "Studio/DeductorServer": {
    "ErrAccessDenied": "Access denied",
    "ErrCannotCreateDirectory": "Failed to create \"%s\" folder",
    "ErrCannotDeleteBasePackage": "You cannot delete %s base package without deleting %s dependent package that references it",
    "ErrCannotGetPackageLinkRef": "Failed to get the object reference to the package link under %s name",
    "ErrCannotGetPackageRef": "Failed to get the object reference to the package under %s name",
    "ErrCannotSaveReadOnlyPackage": "You cannot save %s read-only package",
    "ErrCircularPackageLink": "\"%s\" package contains circular link to itself",
    "ErrDeductorServerSessionNotInitialized": "Loginom server session not initialized",
    "ErrDuplicatePublishedNodeName": "The package already contains more than one published node with \"%s\" name",
    "ErrEncryptedPackage": "Encrypted package \"%s\" cannot be opened to be viewed and edited",
    "ErrFailedToRestorePackage": "Failed to restore %s package",
    "ErrFileAlreadyEditing": "You cannot save package in \"%s\" file. This file has already been used by another process",
    "ErrFileNameNotSpecified": "No file name specified",
    "ErrInvalidModelLockCookieOwner": "Invalid node lock Cookie owner specified",
    "ErrInvalidPath": "Invalid file path: \"%s\"",
    "ErrModelNodeNotFound": "Node %s not found",
    "ErrModelNodeNotPublished": "Node %s published",
    "ErrMustRestoreReferencedPackage": "You cannot restore dependent package %s without restoring %s package to which it refers",
    "ErrNoPublishedNodes": "The package contains no published nodes",
    "ErrPackageAlreadyEditing": "Package with %s name has already been used by another process and it cannot be opened for editing",
    "ErrPackageBackupReferencesAlreadyRevived": "References to other packages have already been restored for backup of %s package",
    "ErrPackageDoesNotBelongToCurrentSession": "%s package does not belong to the current session",
    "ErrPackageNotFound": "Failed to find package with %s name and %s version",
    "ErrPackageNotFoundByFileName": "Failed to find %s package",
    "ErrPackageRestoreErrors": "Errors occurred while restoring %s package",
    "ErrPublishedModelNodeNotFound": "Failed to find published node with %s identifier",
    "ErrPublishedNodeNameIsEmpty": "No name for published node with \"%s\" caption specified",
    "ErrPublishedPackageNotFound": "Failed to find the published package with %s name and %s version",
    "ErrSaveAsAlreadyOpenedPackage": "You cannot save package in \"%s\" file. The package with such file has already been opened in the current session.",
    "ErrSavePackagePermissionDenied": "No appropriate rights to save package with %s name",
    "ErrSessionAlreadyContainsPackage": "%s package already open in the current session",
    "ErrSessionBackupAlreadyDeleted": "This session backup has already been deleted by another client from the current account",
    "ErrSessionBackupAlreadyRestored": "This session backup has already been restored by another client from the current account",
    "ErrSessionBackupModified": "This session backup has already been changed by another client from the current account",
    "FileNames": "File names",
    "ProcessCaptionFormat": "%s. %s",
    "ServerStartLogMsg": "%s started",
    "Session": "Session",
    "SessionCloseLogMsg": "Closed session for %s user",
    "SessionInitializedLogMsg": "Initialized session for %s user",
    "User": "User",
    "UserName": "Username",
    "WarnSessionStopTimeout": "Failed to stop %s user session for %d milliseconds. Number of processes not completed: %d. List of active subprocesses: %s. List of not started subprocesses: %s."
  },
  "Studio/DeductorServerConnector": {
    "ErrCannotConfigureActiveConnection": "It is impossible to change active connection settings"
  },
  "Studio/DeductorServerSettings": {
    "SessionBackupDirectory": "Session backups",
    "UserStorageDirectory": "User disk space"
  },
  "Studio/DeductorUsers": {
    "ErrAccessDenied": "Access denied",
    "ErrApplicationModeNotAllowed": "Connection in \"%s\" mode not allowed",
    "ErrInvalidPasswordHashInConfig": "Configuration file contains invalid password hash",
    "ErrInvalidUserNameOrPassword": "Invalid username or password",
    "ErrLeadingOrTrailingWhitespaceInPassword": "Password must not begin or end with a space",
    "ErrNoUsersWithAdminPrivileges": "There are no users with admin privileges",
    "ErrUserAlreadyDeleted": "User already deleted",
    "ErrUserHasActiveSessions": "%s user has active sessions",
    "ErrUserNameConflictsWithSharedDirectory": "Username conflicts with %s shared directory name",
    "ErrUserNameIsReserved": "%s identifier has already been reserved and it cannot be used as a username",
    "ErrUserNameMustBeValidIdentifier": "Username must be a valid identifier",
    "LogAddGroup": "%s group added",
    "LogAddUser": "%s user added",
    "LogDeleteGroup": "%s group deleted",
    "LogDeleteUser": "%s user deleted",
    "User": "User",
    "UserMetaDesc": "User"
  },
  "Studio/Server/BatchLauncher/BatchLauncher": {
    "CommandLineFmt": "Usage: %s <keys>",
    "ErrConnectionError": "Server connection error",
    "ErrExecutionError": "Batch execution error",
    "ErrInvalidCommandLineParameters": "Invalid command line parameters",
    "ErrLostConnectionToServer": "Server connection lost",
    "ErrUnknownCommandLineParameter": "Unknown command line parameter: %s",
    "ExampleTitle": "Example:",
    "OptionAddressDesc": "IP address or hostname (default: %s)",
    "OptionNodeNameDesc": "Name or GUID of node",
    "OptionPackageFileNameDesc": "Package path and file name (required parameter)",
    "OptionPasswordDesc": "Password",
    "OptionPortDesc": "Port (default: %s)",
    "OptionSavePackageDesc": "Save package after execution",
    "OptionTeachDesc": "Retraining mode",
    "OptionUserNameDesc": "Username",
    "Switches": "<Keys>",
    "VariableSwitchesInfo": "Any other keys are interpreted as variable names.\nFormat: <Variable_name>=\n<Variable_value>"
  },
  "Studio/Server/ServiceConsts": {
    "ServiceDisplayName": "LoginomServer"
  },
  "Studio/SharedDirectories": {
    "ErrSharedDirectoryAlreadyDeleted": "Shared directory already deleted",
    "ErrSharedDirectoryNameConflictsWithUser": "Username conflicts with %s shared directory name",
    "ErrSharedDirectoryNameIsReserved": "%s identifier has already been reserved and it cannot be used as a shared directory name",
    "ErrSharedDirectoryNameMustBeValidIdentifier": "The shared directory name must be a valid identifier",
    "LogAddDirectory": "%s shared directory created",
    "LogDeleteDirectory": "%s shared directory deleted",
    "SharedDirectoryMetaDesc": "Shared folder"
  },
  "Studio/SocketDeductorServerSettings": {
    "Bind": "IP address",
    "PingPeriod": "Client connection check period",
    "Port": "TCP port",
    "SSLCertificateFile": "Certificate file name",
    "SSLPrivateKeyFile": "Private key file name",
    "WSPort": "WebSocket port",
    "WSSPort": "WebSocket SSL/TLS port"
  },
  "Studio/SolutionTree": {
    "Connection": "Connection",
    "Connections": "Connections",
    "ErrInstanceAlreadyExist": "ID already mapped to visual node",
    "ErrInstanceNotFound": "There is no associated visual node for ID",
    "InputPorts": "Input ports",
    "ModelNodes": "Nodes",
    "ModelUnit": "Module",
    "ModelViews": "Visualizers",
    "OutputPorts": "Output ports",
    "References": "References",
    "Reports": "Reports",
    "ServiceInputPorts": "Service input ports",
    "ServiceOutputPorts": "Service output ports",
    "Variables": "Variables",
    "Vendors": "Components",
    "WorkFlow": "Workflow"
  },
  "Viewers/Browse/BrowseView": {
    "ErrExportBusy": "You cannot export table in the process of data modification",
    "ErrExportDataInvalid": "You cannot export table with unprepared data",
    "ErrExportDeactivate": "Export deactivated due to node deactivation",
    "LogColumnNotFoundFmt": "No %s field found in the input data set. The field has been deleted from the displayed fields.",
    "LogNewColumnFmt": "New %s field appeared in the input data set. The field has been added to the displayed fields.",
    "PrepareViewData": "Table"
  },
  "Viewers/Browse/BrowseViewExport": {
    "DisplayNameColumnDisplayName": "Caption",
    "Form": "Form",
    "NameColumnDisplayName": "Caption",
    "NullValue": "<null>",
    "RecNoColumnDisplayName": "No",
    "RecNoColumnName": "RecNo",
    "RowNoColumnDisplayName": "#",
    "RowNoColumnName": "RowNo",
    "Table": "Table",
    "ValueColumnDislpayName": "Value"
  },
  "Viewers/Browse/BrowseViewFilterEngine": {
    "FilterDataNotify": "Data filtering"
  },
  "Viewers/Browse/BrowseViewSortingEngine": {
    "SortingNotify": "Data sorting"
  },
  "Viewers/Browse/BrowseViewVendor": {
    "VendorCaption": "Table",
    "VendorDesc": "Table data display"
  },
  "Viewers/Chart/ChartViewVendor": {
    "VendorCaption": "Chart",
    "VendorDesc": "Chart data display"
  },
  "Viewers/Chart/Component/BindedCheckBox": {
    "CheckBoxBadObject": "Object has been deleted",
    "CheckBoxBadTypeAccess": "Invalid field access",
    "CheckBoxBindingField": "CheckBox binding error: invalid field"
  },
  "Viewers/Chart/Component/BindedEdit": {
    "EditBadObject": "Object has been deleted",
    "EditBadTypeAccess": "Invalid field access",
    "EditBindingField": "Edit binding error: invalid field"
  },
  "Viewers/Chart/Component/BindedRadioGroup": {
    "ErrRadioGroupBadDescriptions": "Incorrect array of RadioGroup names",
    "ErrRadioGroupBadField": "Invalid field binded to RadioGroup",
    "ErrRadioGroupBadObject": "Object has been deleted",
    "ErrRadioGroupBadType": "Invalid RadioGroup element type",
    "ErrRadioGroupBadTypeAccess": "Invalid field access"
  },
  "Viewers/Chart/Component/BindedSpinEdit": {
    "SpinEditBadObject": "Object has been deleted",
    "SpinEditBadTypeAccess": "Invalid field access",
    "SpinEditBindingField": "SpinEdit binding error: invalid field"
  },
  "Viewers/Chart/Component/Series": {
    "Err_Chart_Type": "Invalid chart type",
    "Err_Series_Type": "Invalid series type"
  },
  "Viewers/Chart/Server/ChartColumnInfo": {
    "ChartExtremesProgress": "Search for extremes",
    "ChartSortingProgress": "Data sorting",
    "ChartTotalsProgress": "Addition of series"
  },
  "Viewers/Chart/Server/ChartParametres": {
    "Alpha": "Transparency",
    "Color": "Color",
    "DefaultSerieName": "Series",
    "ErrAxisNotFound": "No axis with this position found",
    "ErrAxisPositionNotTrue": "Invalid axis position",
    "ErrLinkedColumnDataType": "Invalid data type",
    "ErrLinkedColumnInfoNotFound": "Column not found"
  },
  "Viewers/Chart/Server/ChartViewCacheServer": {
    "DataSourceIsInActive": "Data source is inactive"
  },
  "Viewers/CoarseClasses/CoarseClassesView": {
    "Component": "Component",
    "ErrNotDefinedComponent": "Undefined component"
  },
  "Viewers/CoarseClasses/CoarseClassesViewVendor": {
    "VendorCaption": "Coarse Classes",
    "VendorDesc": "\"Coarse classes\" visualizer"
  },
  "Viewers/Cube/CubeCalcSummaries": {
    "ErrCalculationExpression": "Error occurred while calculating the expression corresponding to calculated measure \"%s\"",
    "ErrExprResultIsString": "The expression result relates to the string type",
    "ErrParseExpression": "Error occurred while parsing the expression corresponding to calculated measure \"%s\"",
    "ErrRecursiveCall": "Circular reference between calculated measures detected: %s"
  },
  "Viewers/Cube/CubeChart": {
    "MaxDotsCountDesc": "Maximum dots count",
    "MaxSeriesCountDesc": "Maximum series count"
  },
  "Viewers/Cube/CubeDimensions": {
    "CubeEmptyDimValue": "<...>",
    "ErrOrderNumberDim": "Incorrect dimension order numbers",
    "MsgMissingDimensionInColumn": "\"%s\" field matching the dimension in \"%s\" column not found in the data set.",
    "MsgMissingDimensionInRow": "\"%s\" field matching the dimension in \"%s\" row not found in the data set.",
    "MsgNoValues": "No values"
  },
  "Viewers/Cube/CubeEngineMatrix": {
    "ErrTooManyCells": "Too many cells requested",
    "ErrTooManyDimensions": "Too many dimensions selected"
  },
  "Viewers/Cube/CubeExport": {
    "DummyHeader": "Value",
    "HTMLTitle": "Cross Table"
  },
  "Viewers/Cube/CubeFilter": {
    "ErrBadRelation": "Relation not supported by aggregation"
  },
  "Viewers/Cube/CubeHeaders": {
    "CubeTotalValue": "Total:",
    "ErrTooManyDimensions": "Too many dimensions selected"
  },
  "Viewers/Cube/CubeSource": {
    "LoadNotify": "Input data preparing"
  },
  "Viewers/Cube/CubeSummaries": {
    "CountCaseDisplayName": "Count",
    "DefExprDisplayName": "Expression",
    "ErrCaseClassNotDynamic": "Measure is not calculated",
    "ErrCaseFuncNotExist": "No \"%s\" aggregation for \"%s\" measure",
    "ErrCaseSubFuncNotExist": "\"%s\" measure with \"%s\" aggregation does not display \"%s\"",
    "ErrIIDNotRegistered": "\"%s\" identifier not registered",
    "MsgMissingCase": "\"%s\" field matching \"%s\" measure not found in the data set."
  },
  "Viewers/Cube/CubeView": {
    "CubeViewProcess": "Cube",
    "ErrAlreadyExporting": "You cannot export a crosstab until the current export is finished",
    "ErrExportCubeClosed": "You cannot export a crosstab when the Cube is inactive",
    "ErrExportDeactivate": "Export deactivated due to node deactivation",
    "ErrPhantomCaseBracketsOpened": "Failed to create a temporary measure because another temporary measure exists",
    "IncLoadMatrixNotify": "Increment measure calculating",
    "LoadMatrixNotify": "Measure calculating"
  },
  "Viewers/Cube/CubeViewVendor": {
    "VendorCaption": "Cube",
    "VendorDesc": "Multidimensional display (Pivot table and Pivot chart)"
  },
  "Viewers/Detailing/Detailing": {
    "DetailingProcessCaption": "\"%s\" detailing by cell [%d, %d]",
    "ManagerBrowse": "Table",
    "ManagerStatistics": "Statistics"
  },
  "Viewers/LinRegressReport/LinRegressReport": {
    "Component": "Component",
    "ConstFactor": "<Intercept>",
    "ErrNotDefinedComponent": "Undefined component",
    "FinalModel": "Final model",
    "NullModel": "Null model",
    "SelectedModel": "Selected model",
    "SelectedModelPath": "Model name",
    "ShowAsTree": "Tree",
    "ShowModelInfo": "Model info",
    "ShowModelSteps": "Model steps",
    "ShowZeroValues": "Zero values",
    "SortDirection": "Sort direction",
    "SortOrder": "Sort order",
    "StatParam": "Quality criterion"
  },
  "Viewers/LinRegressReport/LinRegressReportViewVendor": {
    "VendorCaption": "Regression Report",
    "VendorDesc": "Analysis of linear regression model"
  },
  "Viewers/LogRegressReport/LogRegressReport": {
    "Component": "Component",
    "ConstFactor": "<Intercept>",
    "ErrNotDefinedComponent": "Undefined component",
    "FinalModel": "Final model",
    "NullModel": "Null model",
    "PValueThreshold": "Significance threshold",
    "SelectedModel": "Selected model",
    "SelectedModelName": "Model name",
    "ShowAsTree": "Tree",
    "ShowModelInfo": "Model info",
    "ShowModelSteps": "Model steps",
    "ShowZeroValues": "Zero values",
    "SortDirection": "Sort direction",
    "SortOrder": "Sort order",
    "StatParam": "Quality criterion"
  },
  "Viewers/LogRegressReport/LogRegressReportViewVendor": {
    "VendorCaption": "Regression Report",
    "VendorDesc": "Analysis of logistic regression model"
  },
  "Viewers/ROC/ROCView": {
    "Component": "Component",
    "ErrNotDefinedComponent": "Undefined component"
  },
  "Viewers/ROC/ROCViewCharts": {
    "AllPrecisionRatesChartTitle": "Precision Chart",
    "AllPrecisionRatesChartXLabel": "Cuttoff",
    "AllPrecisionRatesChartYLabel": "PPV, NPV, OPR, OCR",
    "Base": "Base",
    "Best": "Best",
    "BreakEvenChartTitle": "Break Even Chart",
    "BreakEvenChartXLabel": "Cuttoff",
    "BreakEvenChartYLabel": "TPR, PPV",
    "Cutoff": "Cuttoff",
    "ErrSerieCountConfigLoadError": "Incorrect series count in configuration",
    "EventsChartTitle": "% captured response chart",
    "EventsChartXLabel": "Bin",
    "EventsChartYLabel": "Captured response, %",
    "EventsCumChartTitle": "% captured response chart (cumulative)",
    "EventsCumChartXLabel": "Percentile",
    "EventsCumChartYLabel": "Captured response, %",
    "FNR": "FNR (1-Sensitivity)",
    "FPR": "FPR (1-Specificity)",
    "GainChartTitle": "Gain Chart",
    "GainChartXLabel": "Percentile",
    "GainChartYLabel": "Gain",
    "LiftChartTitle": "Lift Chart",
    "LiftChartXLabel": "Bin",
    "LiftChartYLabel": "Lift",
    "LiftCumChartTitle": "Lift Chart (Cumulative)",
    "LiftCumChartXLabel": "Percentile",
    "LiftCumChartYLabel": "Lift",
    "NPV": "NPV (Negative Prediction Value)",
    "OCR": "OCR (Overall Classification Rate)",
    "OPR": "OPR (Overall Precision Rate)",
    "OverallRatesChartXLabel": "Cuttoff",
    "OverallRatesChartYLabel": "TPR, TNR, FPR, FNR",
    "OverallRatesTitle": "Basic Rates",
    "PPV": "PPV (Positive Predictive Value)",
    "PrecisionRecallChartTitle": "Precision-Recall Curve",
    "PrecisionRecallChartXLabel": "TPR (Recall)",
    "PrecisionRecallChartYLabel": "PPV (Precision)",
    "ResponseChartTitle": "Response Chart",
    "ResponseChartXLabel": "Bin",
    "ResponseChartYLabel": "Response, %",
    "ResponseCumChartTitle": "Response Chart (Cumulative)",
    "ResponseCumChartXLabel": "Percentile",
    "ResponseCumChartYLabel": "% events",
    "ROCChartTitle": "ROC Curve",
    "ROCChartXLabel": "FPR (1-specificity)",
    "ROCChartYLabel": "TPR (sensitivity)",
    "TeachDataSource": "Training set",
    "TestDataSource": "Test set",
    "TNR": "TNR (specificity)",
    "TPR": "TPR (sensitivity)"
  },
  "Viewers/ROC/ROCViewVendor": {
    "VendorCaption": "Binary Classification Assessment",
    "VendorDesc": "Binary classification assessment"
  },
  "Viewers/Statistics/StatView": {
    "HistogramBuild": "Build histogram",
    "LogColumnNotFoundFmt": "No %s field found in the input data set. The field has been deleted from the displayed fields.",
    "LogNewColumnFmt": "New %s field appeared in the input data set. The field has been added to the displayed fields.",
    "OrderStatisticsCalculation": "Ordinal statistics calculation",
    "PrepareViewData": "Statistics",
    "SimpleStatisticsCalculation": "Simple statistics calculation",
    "UniqueValuesCalculation": "Unique values calculation"
  },
  "Viewers/Statistics/StatViewBuilder": {
    "ErrNonContinuousDataKind": "The input column must have continuous data kind",
    "ErrRequiredColumnNotFound": "No column with the specified number in the input data source"
  },
  "Viewers/Statistics/StatViewCalculation": {
    "ErrInvalidHistBounds": "Invalid histogram interval bounds set",
    "ErrRequiredColumnNotFound": "No columns with the specified numbers in the input data source",
    "ErrRequiredSimpleStats": "It is required to calculate simple statistics"
  },
  "Viewers/Statistics/StatViewHistogram": {
    "DefaultSeparator": ": ",
    "From": "from ",
    "LeftCloseBracket": "[",
    "RightCloseBracket": "]",
    "RightOpenBracket": ")",
    "To": "to "
  },
  "Viewers/Statistics/StatViewUniqueValues": {
    "ErrRequiredColumnNotFound": "No columns with the specified numbers in the input data source"
  },
  "Viewers/Statistics/StatViewValuesRange": {
    "OwnerIsDisposed": "The main collection of histogram values has been disposed"
  },
  "Viewers/Statistics/StatViewVendor": {
    "VendorCaption": "Statistics",
    "VendorDesc": "Show statistical indicators"
  },
  "Warehouse2/DataWarehouseConnection": {
    "ErrTestConnection": "Connection test error:\n%s",
    "MDDatabase": "Metadata database"
  },
  "Warehouse2/DBMDEngine": {
    "ErrDimensionFKIsNull": "Reference to \"%s\" dimension not found.\nThe foreign key value not specified.",
    "ErrDimensionFKNotFound": "Reference to \"%s\" dimension not found.\nThe dimension with primary key \"%s\" was not found in the dimension list.",
    "ErrNotFoundVersionInfo": "Failed to read version information about Deductor Warehouse version.\n%s",
    "ErrProcessFKIsNull": "Reference to \"%s\" process not found.\nThe foreign key value not specified.",
    "ErrProcessFKNotFound": "Reference to \"%s\" process not found.\nThe process with primary key \"%s\" was not found in the process list.",
    "ErrSetMDItem": "Error reading metadata from DB.\nFor object with ID=%s, Name=\"%s\".\nError: %s"
  },
  "Warehouse2/Deductor/DDWConnectionVendor": {
    "DWConnectionVendorCaption": "Deductor Warehouse",
    "DWConnectionVendorDesc": "Connect to the Deductor Data Warehouse"
  },
  "Warehouse2/Deductor/DDWEngine": {
    "ErrDimensionValueIsNull": "Value of \"%1:s\" dimension in \"%0:d\" row is null.",
    "ErrDimensionValueNotFound": "\"%s\" value of \"%s\" dimension not found in DW (row \"%d\").",
    "ErrDropTable": "Error occurred while deleting the table associated with [%s] \"%s\" object.\n%s",
    "ErrEmptyData": "Error occurred while data cleansing of [%s] \"%s\" object.\n%s",
    "ErrError": "Error:",
    "MsgDeleteDataProcess": "Delete the process from the Data Warehouse by data dimension",
    "MsgEnableConstraint": "Restore indexes and constraints.",
    "MsgLoadDataDimension": "Loading the Dimension data into the Data Warehouse",
    "MsgLoadDataProcess": "Loading the Process data into the Data Warehouse",
    "MsgRecordSkipDimValueIsNull": "Data of string \"%d\" was not added to DW. \"%s\" dimension value is null.",
    "MsgStatisticsGathering": "Statistics gathering"
  },
  "Warehouse2/Deductor/DDWImportVendor": {
    "VendorCaption": "Deductor Warehouse",
    "VendorDesc": "Extract data from a Deductor Data Warehouse"
  },
  "Warehouse2/Deductor/Ver6/DW6Engine": {
    "CommentForFieldChangeID": "Reference to the activity journal",
    "CommentForFieldID": "Primary key",
    "ErrCheckProcess": "[%s] \"%s\" process must consist of at least two dimensions.",
    "ErrDataCube": "Failed to read information about the Cube [%s] \"%s\" .\n%s",
    "ErrDataNotLoad": "Data is not loaded to DW.\nPossible reasons:\nFirebird - spaces at the end of string dimensions;\nMS SQL - case-insensitive letters of string dimensions.\nIf data deletion is set by dimension, this data has been deleted from DW.\nError occurred while restoring constraints and indexes:\n%s",
    "ErrRebuildCube": "Error occurred while the Cube updating [%s] \"%s\" .\n%s",
    "MsgMoreLengthName": "Too long name of \"%s\" field.\nErrors may occur when executing SQL queries to DW.",
    "MsgMoreLengthPrefix": "Too long value of \"%s\" prefix.\nErrors may occur when executing SQL queries to DW.",
    "MsgRebuildCube": "Update the Cubes in the Data Warehouse",
    "MsgRelationTableList": "Related tables available:\n%s",
    "MsgReservedName": "\"%s\" field name coincides with the reserved words.\nErrors may occur when executing SQL queries to DW."
  },
  "Warehouse2/Deductor/Ver6/FBDDWConnectionVendor": {
    "DWConnectionVendorCaption": "Deductor Warehouse [Firebird]",
    "DWConnectionVendorDesc": "Connection to the Deductor Data Warehouse on Firebird DBMS"
  },
  "Warehouse2/Deductor/Ver6/MSSQLDDWConnectionVendor": {
    "DWConnectionVendorCaption": "Deductor Warehouse [MS SQL]",
    "DWConnectionVendorDesc": "Connection to the Deductor Data Warehouse on MS SQL DBMS"
  },
  "Warehouse2/Deductor/Ver6/OraDDWConnectionVendor": {
    "DWConnectionVendorCaption": "Deductor Warehouse [Oracle]",
    "DWConnectionVendorDesc": "Connection to the Deductor Data Warehouse on Oracle DBMS"
  },
  "Warehouse2/DWConnectionVendor": {
    "DWConnectionVendorCaption": "Data Warehouse",
    "DWConnectionVendorDesc": "Connect to Data Warehouse"
  },
  "Warehouse2/DWDataEngine": {
    "ErrExecSQL": "Error executing query to DB.\n%s"
  },
  "Warehouse2/DWExtract": {
    "DWObjectName": "Object",
    "DWObjectType": "Object type",
    "ErrDWObjectNameNotFound": "No \"%s\" data warehouse object  found.",
    "SelectionTree": "Tree of selected objects"
  },
  "Warehouse2/DWExtractTree": {
    "ErrNeedSelectItem": "Select at least one item",
    "ErrParams": "Error found in \"%s\" object parameters",
    "FilterParams": "Filter parameters",
    "FuncAggr": "Aggregation types",
    "ItemLatentFilter": "Latent filter element",
    "LatentFilter": "Latent filter",
    "ObjName": "Object name",
    "ObjType": "Object type",
    "Order": "Order number",
    "SelectedItem": "Object",
    "SubNodes": "Subnodes"
  },
  "Warehouse2/DWImport": {
    "ErrExecQuery": "Error executing query to Data Warehouse",
    "ErrNotConnectedToDatabase": "Not connected to Data Warehouse",
    "ErrObjectDWNotSpecified": "Data Warehouse object not specified",
    "ExecQueryProcess": "Executing query to Data Warehouse",
    "ImportDataProcess": "Data importing from Data Warehouse"
  },
  "Warehouse2/MDChoiceTree": {
    "ErrDWObjectsNotFound": "No data warehouse objects with %s names found",
    "SelectedItems": "Selected items"
  },
  "Warehouse2/MDFilterParams": {
    "CustomPointDate": "Custom date",
    "ErrCustomPointDate": "Data value cannot be empty",
    "ErrFilterTypeIncorrect": "\"%s\" filter type incompatible",
    "ErrListEmpty": "List cannot be empty",
    "ErrSkipIntervalCount": "Number of missed periods cannot be less than 1",
    "ErrStringEmpty": "Value cannot be empty",
    "ErrUseIntervalCount": "Number of periods cannot be less than 1",
    "FilterType": "Filter type",
    "IntervalType": "Interval type",
    "ListVal": "List of values",
    "MaxVal": "Max value",
    "MinVal": "Min value",
    "PointType": "Reference point type",
    "SkipIntervalCount": "Skipped interval count",
    "TheVal": "Value",
    "UseIntervalCount": "Used interval count"
  },
  "Warehouse2/MDTree": {
    "ErrColumnCantBeContinuous": "\"%s\" object of \"%s\" type cannot be continuous",
    "ErrMismatchVersionInfo": "Deductor Warehouse versions do not match.\n  Component: \"%s\"\n  BD DW: \"%s\"",
    "ErrNodeTypeExist": "Subnode of the specified \"%s\" type already exists"
  }
}